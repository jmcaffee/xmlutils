/* **************************************************************************
 * File: data/DCTEST1.xml.gdl
 *
 * Guideline source generated 12/05/2007 15:25:36
 *
 * *************************************************************************/

	




// +++++++++++++++++++++++++++ DPM Definitions +++++++++++++++++++++++++++
		
	dpm	text	amortType1st		"Amort Type 1st";
	dpm	text	AmortType2nd		"Amort Type 2nd";
	dpm	numeric	BaseRate1st		"Base Rate 1st";
	dpm	numeric	BaseRate2nd		"Base Rate 2nd";
	dpm	numeric	ceiling1st		"ceiling1st";
	dpm	money	combinedLoanAmount		"Combined Loan Amount";
	dpm	money	ConsumerDebt-Proposed		"Consumer Debt-Proposed";
	dpm	numeric	dExtensionPeriod1st		"dExtensionPeriod1st";
	dpm	numeric	dExtensionPeriod2nd		"dExtensionPeriod2nd";
	dpm	text	DocTypeAbbrev		"Doc Type Abbrev";
	dpm	text	dRateSheetDate		"dRateSheetDate";
	dpm	boolean	f40due30		"f40due30";
	dpm	numeric	FinalPrice1st		"Final Price 1st";
	dpm	numeric	FinalPrice2nd		"Final Price 2nd";
	dpm	boolean	fIsFullDoc		"fIsFullDoc";
	dpm	boolean	fIsPreferredPgm		"fIsPreferredPgm";
	dpm	boolean	fIsSubFin		"fIsSubFin";
	dpm	boolean	fNegAm1st		"fNegAm1st";
	dpm	boolean	ForeignNationalIndicator		"Foreign National Indicator";
	dpm	boolean	fOverrideDefQualRate		"fOverrideDefQualRate";
	dpm	numeric	fPICalcType		"fPICalcType";
	dpm	numeric	fRestrictLocksByCLTV		"fRestrictLocksByCLTV";
	dpm	boolean	FTHB		"FTHB";
	dpm	numeric	globalParam		"Global Parameter";
	dpm	numeric	HLK-MaxNegMargin		"HLK-MaxNegMargin";
	dpm	numeric	Index-2		"Index-2";
	dpm	text	IOIndicator1st		"IO Indicator 1st";
	dpm	text	IOIndicator2nd		"IO Indicator 2nd";
	dpm	numeric	lifecap1st		"lifecap1st";
	dpm	money	loanAmount1st		"Loan Amount 1st";
	dpm	money	loanAmount2nd		"Loan Amount 2nd";
	dpm	numeric	LoanBalance-1		"LoanBalance-1";
	dpm	numeric	LoanTerm1st		"Loan Term 1st";
	dpm	numeric	LoanTerm2nd		"Loan Term 2nd";
	dpm	numeric	LockPeriod1st		"Lock Period 1st";
	dpm	numeric	lockPeriod1st		"lockPeriod1st";
	dpm	numeric	LockPeriod2nd		"Lock Period 2nd";
	dpm	numeric	lockPeriod2nd		"lockPeriod2nd";
	dpm	percentage	LTV1st		"LTV 1st";
	dpm	numeric	MarginOverride-Name		"MarginOverride-Name";
	dpm	numeric	MarginOverride-Value		"MarginOverride-Value";
	dpm	numeric	MaxPaymentShock		"Max Payment Shock";
	dpm	numeric	maxPrice1st		"Max Price 1st";
	dpm	money	MaxPrice1stCombo		"Max Price 1st Combo";
	dpm	money	MaxPrice1stDocFICO		"Max Price 1st DocFICO";
	dpm	money	MaxPrice1stLnAmt		"Max Price 1st Ln Amt";
	dpm	money	MaxPrice1stNOO		"Max Price 1st NOO";
	dpm	numeric	MaxPrice2nd		"Max Price 2nd";
	dpm	text	NoMIFlag		"No MI Flag";
	dpm	boolean	OptA2YrPPStateFlag		"OptA2YrPPStateFlag";
	dpm	money	OtherPropCashFlow		"Other Prop Cash Flow";
	dpm	numeric	PaymentShock		"Payment Shock";
	dpm	text	PrepayIndicator1st		"Prepay Indicator 1st";
	dpm	text	PrepayIndicator2nd		"Prepay Indicator 2nd";
	dpm	numeric	PrepayTerm1st		"Prepay Term 1st";
	dpm	numeric	PrepayTerm2nd		"Prepay Term 2nd";
	dpm	text	programType		"ProgramType";
	dpm	money	propertyValue		"Property Value";
	dpm	money	ProposedExpenses		"Proposed Expenses";
	dpm	money	ProposedHousingCost		"Proposed Housing Cost";
	dpm	text	purposeAbbrev		"Purpose Abbrev";
	dpm	numeric	rate1st		"Rate 1st";
	dpm	numeric	rate2nd		"Rate 2nd";
	dpm	numeric	rateAdj1st-Total		"Rate Adj 1st-Total";
	dpm	numeric	SixMoReserves		"Six Mo Reserves";
	dpm	money	SubPropCashFlow		"Sub Prop Cash Flow";
	dpm	numeric	tmp_DefQualRate1		"tmp_DefQualRate1";
	dpm	numeric	tmp_DefQualRate2		"tmp_DefQualRate2";
	dpm	numeric	tmp_DefQualRate3		"tmp_DefQualRate3";
	dpm	numeric	tmp_DefQualRate4		"tmp_DefQualRate4";
	dpm	numeric	tmp_DefQualRate5		"tmp_DefQualRate5";
	dpm	numeric	tmp_IndexedRate1		"tmp_IndexedRate1";
	dpm	numeric	tmp_lockedRate11		"tmp_lockedRate11";
	dpm	numeric	tmp_lockedRate12		"tmp_lockedRate12";
	dpm	numeric	tmp_lockedRate21		"tmp_lockedRate21";
	dpm	numeric	tmp_lockedRate22		"tmp_lockedRate22";
	dpm	numeric	tmp_MaxCltv		"tmp_MaxCltv";
	dpm	numeric	tmp_MaxLtv		"tmp_MaxLtv";
	dpm	money	TotalCashFlow		"Total Cash Flow";
	dpm	numeric	TotalCurrentHousingExpenses		"Total Current Housing Expenses";
	dpm	money	TotalIncome		"Total Income";
	dpm	money	TotalIncomeAmt		"Total Income Amt";
	dpm	money	TotalMoPaymts		"Total Mo Paymts";
	dpm	money	TotalNegCashFlow		"Total Neg Cash Flow";




// +++++++++++++++++++++++++++ DSM Definitions +++++++++++++++++++++++++++
		
decision		dpm	numeric	CLTV		"CLTV";
decision		dpm	text	creditGrade		"Credit Grade";
decision		dpm	numeric	creditScore		"Credit Score";
decision		dpm	numeric	cvBaseMargin		"Base Margin";
decision		dpm	numeric	cvBasePrice		"Base Price";
decision		dpm	text	cvCaps		"Caps";
decision		dpm	numeric	cvFloor		"Floor";
decision		dpm	numeric	cvIndexValue		"Index Value";
decision		dpm	text	cvLockExpirationDate		"Lock Expiration Date";
decision		dpm	text	cvLookupName		"Lookup Name";
decision		dpm	numeric	cvMargin		"Margin";
decision		dpm	numeric	cvMaxDTIPI		"Max DTI PI";
decision		dpm	numeric	cvMaxPaymentShockPI		"Max Pymt Shock PI";
decision		dpm	numeric	cvMaxPrice		"Max Price";
decision		dpm	money	cvMtgNoUFMIP		"Loan Amount";
decision		dpm	text	cvPriceSheetID		"Price Sheet ID";
decision		dpm	text	cvProgram		"Program";
decision		dpm	numeric	cvRateQual		"Rate Qual";
decision		dpm	text	Decision		"Decision";
decision		dpm	numeric	DefaultQualRate		"Default Qual Rate";
decision		dpm	numeric	DTI		"DTI";
decision		dpm	boolean	fEnableExceptionPricing		"fEnableExceptionPricing";
decision		dpm	boolean	fEnableExtensions		"fEnableExtensions";
decision		dpm	text	fUsingLockedValues		"fUsingLockedValues";
decision		dpm	numeric	Interest		"Interest";
decision		dpm	numeric	LaMultiplier		"LaMultiplier";
decision		dpm	numeric	LTV		"LTV";
decision		dpm	numeric	Margin1st		"Margin 1st";
decision		dpm	numeric	Margin2nd		"Margin 2nd";
decision		dpm	numeric	marginAdj-40YrTerm		"Margin Adj-40Yr Term";
decision		dpm	numeric	marginAdj-CashOut		"Margin Adj-Cash Out";
decision		dpm	numeric	marginAdj-CLTV		"Margin Adj-CLTV";
decision		dpm	numeric	marginAdj-DocumentType		"Margin Adj-Document Type";
decision		dpm	numeric	marginAdj-FICO		"Margin Adj-FICO";
decision		dpm	numeric	marginAdj-LoanAmount		"Margin Adj-Loan Amount";
decision		dpm	numeric	marginAdj-LTV		"Margin Adj-LTV";
decision		dpm	numeric	marginAdj-NegAm1st		"Margin Adj-Neg Am 1st";
decision		dpm	numeric	marginAdj-NewYorkProperties		"Margin Adj-New York Properties";
decision		dpm	numeric	marginAdj-NoEscrow		"Margin Adj-No Escrow";
decision		dpm	numeric	marginAdj-NumberOfUnits		"Margin Adj-Number of Units";
decision		dpm	numeric	marginAdj-Occupancy		"Margin Adj-Occupancy";
decision		dpm	numeric	marginAdj-Price		"Margin Adj-Price";
decision		dpm	numeric	marginAdj-PropertyType		"Margin Adj-Property Type";
decision		dpm	numeric	marginAdj-Total		"Margin Adj-Total";
decision		dpm	numeric	maxDTI		"Max DTI";
decision		dpm	numeric	minScore		"Min Score";
decision		dpm	numeric	pi1st		"PI 1st";
decision		dpm	numeric	pi2nd		"PI 2nd";
decision		dpm	numeric	PITI		"PITI";
decision		dpm	numeric	priceAdj-2YrPrePay		"Price Adj-2Yr PrePay";
decision		dpm	numeric	priceAdj-40DueIn30		"Price Adj-40 Due In 30";
decision		dpm	numeric	priceAdj-40YrTerm		"Price Adj-40Yr Term";
decision		dpm	numeric	priceAdj-5-6PricingSpecial		"Price Adj-5-6 Pricing Special";
decision		dpm	numeric	priceAdj-AltAPricingSpecial		"Price Adj-AltA Pricing Special";
decision		dpm	numeric	priceAdj-CashOut		"Price Adj-Cash Out";
decision		dpm	numeric	priceAdj-CLTV		"Price Adj-CLTV";
decision		dpm	numeric	priceAdj-CLTV-LoanAmount		"Price Adj-CLTV-LoanAmount";
decision		dpm	numeric	priceAdj-DocumentType		"Price Adj-Document Type";
decision		dpm	numeric	priceAdj-EscrowHoldback		"Price Adj-Escrow Holdback";
decision		dpm	numeric	priceAdj-Exception-Name1		"Price Adj Exception-Name 1";
decision		dpm	numeric	priceAdj-Exception-Name2		"Price Adj Exception-Name 2";
decision		dpm	numeric	priceAdj-Exception-Name3		"Price Adj Exception-Name 3";
decision		dpm	numeric	priceAdj-Exception-Name4		"Price Adj Exception-Name 4";
decision		dpm	numeric	priceAdj-Exception-Name5		"Price Adj Exception-Name 5";
decision		dpm	numeric	priceAdj-Exception-Name6		"Price Adj Exception-Name 6";
decision		dpm	numeric	priceAdj-Exception-Name7		"Price Adj Exception-Name 7";
decision		dpm	numeric	priceAdj-Exception-Name8		"Price Adj Exception-Name 8";
decision		dpm	numeric	priceAdj-Exception-Name9		"Price Adj Exception-Name 9";
decision		dpm	numeric	priceAdj-Exception-Value1		"Price Adj Exception-Value 1";
decision		dpm	numeric	priceAdj-Exception-Value2		"Price Adj Exception-Value 2";
decision		dpm	numeric	priceAdj-Exception-Value3		"Price Adj Exception-Value 3";
decision		dpm	numeric	priceAdj-Exception-Value4		"Price Adj Exception-Value 4";
decision		dpm	numeric	priceAdj-Exception-Value5		"Price Adj Exception-Value 5";
decision		dpm	numeric	priceAdj-Exception-Value6		"Price Adj Exception-Value 6";
decision		dpm	numeric	priceAdj-Exception-Value7		"Price Adj Exception-Value 7";
decision		dpm	numeric	priceAdj-Exception-Value8		"Price Adj Exception-Value 8";
decision		dpm	numeric	priceAdj-Exception-Value9		"Price Adj Exception-Value 9";
decision		dpm	numeric	priceAdj-Extension1		"Price Adj-Extension 1";
decision		dpm	numeric	priceAdj-Extension2		"Price Adj-Extension 2";
decision		dpm	numeric	priceAdj-FICO		"Price Adj-FICO";
decision		dpm	numeric	priceAdj-ForeignNational		"Price Adj-Foreign National";
decision		dpm	numeric	priceAdj-InterestOnly		"Price Adj-Interest Only";
decision		dpm	numeric	priceAdj-Investor		"Price Adj-Investor";
decision		dpm	numeric	priceAdj-LoanAmount		"Price Adj-Loan Amount";
decision		dpm	numeric	priceAdj-LTV		"Price Adj-LTV";
decision		dpm	numeric	priceAdj-MixedUse		"Price Adj-Mixed Use";
decision		dpm	numeric	priceAdj-NewYorkProperties		"Price Adj-New York Properties";
decision		dpm	numeric	priceAdj-NoEscrow		"Price Adj-No Escrow";
decision		dpm	numeric	priceAdj-NonWarrantableCondo		"Price Adj-Non Warrantable Condo";
decision		dpm	numeric	priceAdj-NOOLoanAmount		"Price Adj-NOO Loan Amount";
decision		dpm	numeric	priceAdj-NumberofUnits		"Price Adj-Number of Units";
decision		dpm	numeric	priceAdj-Occupancy		"Price Adj-Occupancy";
decision		dpm	numeric	priceAdj-PrepayTerm		"Price Adj-Prepay Term";
decision		dpm	numeric	priceAdj-PropertyType		"Price Adj-Property Type";
decision		dpm	numeric	priceAdj-Region		"Price Adj-Region";
decision		dpm	numeric	priceAdj-Rural		"Price Adj-Rural";
decision		dpm	numeric	priceAdj-SOACLTV		"Price Adj-SOA CLTV";
decision		dpm	numeric	priceAdj-SOASpecial		"Price Adj-SOA Special";
decision		dpm	numeric	priceAdj-Special		"Price Adj-Special";
decision		dpm	numeric	priceAdj-Special30FX80CLTV		"Price Adj-Special30FX80CLTV";
decision		dpm	numeric	priceAdj-Total		"Price Adj-Total";
decision		dpm	numeric	priceAdj-WaiveEscrow		"Price Adj-Waive Escrow";
decision		dpm	text	programName		"Program Name";
decision		dpm	numeric	qualRate		"QualRate";
decision		dpm	numeric	rateAdj-2YrARMSpecial		"Rate Adj-2Yr ARM Special";
decision		dpm	numeric	rateAdj-30Year		"Rate Adj-30 Year";
decision		dpm	numeric	rateAdj-40DueIn30		"Rate Adj-40 Due In 30";
decision		dpm	numeric	rateAdj-40YrTerm		"Rate Adj-40Yr Term";
decision		dpm	numeric	rateAdj-50DueIn30		"Rate Adj-50 Due In 30";
decision		dpm	numeric	rateAdj-ARM		"Rate Adj-ARM";
decision		dpm	numeric	rateAdj-BKLs24Months		"Rate Adj-BK Ls 24 Months";
decision		dpm	numeric	rateAdj-BKLs24Months1st		"Rate Adj-BK Ls 24 Months 1st";
decision		dpm	numeric	rateAdj-CashOut		"Rate Adj-Cash Out";
decision		dpm	numeric	rateAdj-CLTV		"Rate Adj-CLTV";
decision		dpm	numeric	rateAdj-DocumentType		"Rate Adj-Document Type";
decision		dpm	numeric	rateAdj-DTI		"Rate Adj-DTI";
decision		dpm	numeric	rateAdj-FICO		"Rate Adj-FICO";
decision		dpm	numeric	rateAdj-FullDocSpecial		"Rate Adj-Full Doc Special";
decision		dpm	numeric	rateAdj-InterestOnly		"Rate Adj-Interest Only";
decision		dpm	numeric	rateAdj-LoanAmount		"Rate Adj-Loan Amount";
decision		dpm	numeric	rateAdj-LTV		"Rate Adj-LTV";
decision		dpm	numeric	rateAdj-Margin		"Rate Adj-Margin";
decision		dpm	numeric	rateAdj-NegAm1st		"Rate Adj-Neg Am 1st";
decision		dpm	numeric	rateAdj-NewYorkProperties		"Rate Adj-New York Properties";
decision		dpm	numeric	rateAdj-NoEscrow		"Rate Adj-No Escrow";
decision		dpm	numeric	rateAdj-NonCAProperty		"Rate Adj-Non CA Property";
decision		dpm	numeric	rateAdj-NOOCLTV		"Rate Adj-NOO CLTV";
decision		dpm	numeric	rateAdj-NoPrepay		"Rate Adj-No Prepay";
decision		dpm	numeric	rateAdj-NumberOfUnits		"Rate Adj-Number of Units";
decision		dpm	numeric	rateAdj-Occupancy		"Rate Adj-Occupancy";
decision		dpm	numeric	rateAdj-PrepayTerm		"Rate Adj-Prepay Term";
decision		dpm	numeric	rateAdj-PropertyType		"Rate Adj-Property Type";
decision		dpm	numeric	rateAdj-PurchaseSpecial		"Rate Adj-Purchase Special";
decision		dpm	numeric	rateAdj-Purpose		"Rate Adj-Purpose";
decision		dpm	numeric	rateAdj-Rural		"Rate Adj-Rural";
decision		dpm	numeric	rateAdj-Special		"Rate Adj-Special";
decision		dpm	numeric	rateAdj-State		"Rate Adj-State";
decision		dpm	numeric	rateAdj-Total		"Rate Adj-Total";
decision		dpm	numeric	rateAdj-TXCashOut		"Rate Adj-TX CashOut";
decision		dpm	numeric	rateIndexed		"Rate Indexed";
decision		dpm	numeric	RateIndexed2nd		"Rate Indexed 2nd";
decision		dpm	numeric	RegionCode		"RegionCode";
decision		dpm	numeric	TotalMoPayments		"TotalMoPayments";




// +++++++++++++++++++++++++++ PPM Definitions +++++++++++++++++++++++++++
		
	ppm	text	prd	pAmortizationType		"Amortization Type-PDT";
	ppm	text	app	pApplicationSource		"Application Source";
	ppm	numeric	app	pCombo		"Combo";
	ppm	numeric	app	pConfirmedExtensions		"ConfirmedExtensions";
	ppm	text	app	pDocumentType		"Document Type";
	ppm	numeric	app	pDTI		"DTI";
	ppm	text	app	pExtensionDate1st		"ExtensionDate1st";
	ppm	text	app	pExtensionDate2nd		"ExtensionDate2nd";
	ppm	numeric	app	pExtensionPeriod1st		"ExtensionPeriod1st";
	ppm	numeric	app	pExtensionPeriod2nd		"ExtensionPeriod2nd";
	ppm	text	app	pExtensionRequest		"ExtensionRequest";
	ppm	text	prd	pFirstAdjTerm		"First Adjustment Term-PDT";
	ppm	text	prd	pIndexType		"Index Type";
	ppm	text	app	pIsManualProcess		"IsManualProcess";
	ppm	numeric	prd	pLienNumber		"Lien Number";
	ppm	money	app	pLoanAmount		"Loan Amount";
	ppm	numeric	prd	pLoanTerm		"Loan Term";
	ppm	text	app	pLocation		"Location";
	ppm	money	app	pLockedDate		"Locked Date";
	ppm	numeric	app	pLockedVersionMargin		"LockedVersionMargin";
	ppm	numeric	app	pLockedVersionRate		"LockedVersionRate";
	ppm	text	crd	pLockPeriod		"Lock Period";
	ppm	text	app	pLockRequest		"LockRequest";
	ppm	UNKNOWN	app	pLockType		"LockType";
	ppm	text	app	pManualCredit		"Manual Credit";
	ppm	numeric	crd	pMtgDebtNonREO		"Mort Debt No REO Assoc";
	ppm	numeric	app	pNetMtgDebtRent75		"Recurring Net Mtg Debt-75";
	ppm	text	app	pNoMI		"No MI";
	ppm	numeric	app	pNonPrimaryNetMtgDebtRent75		"Recurring Net Mtg Debt Not Primary-75";
	ppm	text	app	pNonWarrantableCondo		"Non Warrantable Condo";
	ppm	numeric	app	pNumberOfUnits		"No. of Units";
	ppm	text	app	pOccupancy		"Occupancy";
	ppm	text	app	pOtherAmortizationType		"Other Amortization Type";
	ppm	numeric	app	pOtherFirstAdjTerm		"Other First Adjustment Term";
	ppm	text	crd	pOtherIndexType		"Other Index Type";
	ppm	numeric	app	pOtherLoanAmount		"Other Loan Amount";
	ppm	text	crd	pOtherLoanTerm		"Other Loan Duration";
	ppm	text	crd	pOtherLockPeriod		"Other Lock Period";
	ppm	text	app	pOtherPrepayTerm		"Other Prepayment Term";
	ppm	text	crd	pOtherPrice		"Other Price";
	ppm	text	app	pOtherRate		"Other Rate";
	ppm	numeric	crd	pOutsideFinancing		"Outside Financing";
	ppm	numeric	app	pOverrideMaxPrice-Loan1		"OverrideMaxPrice-Loan1";
	ppm	numeric	app	pPrepayTerm-Loan		"Prepay Term-Loan";
	ppm	numeric	app	pPresentHazardInsurance		"Present Hazard Insurance";
	ppm	numeric	app	pPresentHoaDues		"Present Homeowner Assn. Dues";
	ppm	numeric	app	pPresentMonthlyRent		"Present Monthly Rent";
	ppm	numeric	app	pPresentMtgInsurance		"Present Mortgage Insurance";
	ppm	numeric	app	pPresentOtherHousingExpenses		"Present Other Housing Expenses";
	ppm	numeric	app	pPresentRealEstateTaxes		"Present Real Estate Taxes";
	ppm	numeric	app	pPreviousLockPeriod		"PreviousLockPeriod";
	ppm	numeric	app	pPrice		"Price";
	ppm	numeric	app	pPriceAdjName1-Loan1		"PriceAdjName1-Loan1";
	ppm	numeric	prd	pPriceAdjName1-PDT1		"PriceAdjName1-PDT1";
	ppm	numeric	prd	pPriceAdjName1-PGM1		"PriceAdjName1-PGM1";
	ppm	numeric	app	pPriceAdjName2-Loan1		"PriceAdjName2-Loan1";
	ppm	numeric	prd	pPriceAdjName2-PDT1		"PriceAdjName2-PDT1";
	ppm	numeric	prd	pPriceAdjName2-PGM1		"PriceAdjName2-PGM1";
	ppm	numeric	app	pPriceAdjName3-Loan1		"PriceAdjName3-Loan1";
	ppm	numeric	prd	pPriceAdjName3-PDT1		"PriceAdjName3-PDT1";
	ppm	numeric	prd	pPriceAdjName3-PGM1		"PriceAdjName3-PGM1";
	ppm	numeric	app	pPriceAdjValue1-Loan1		"PriceAdjValue1-Loan1";
	ppm	numeric	prd	pPriceAdjValue1-PDT1		"PriceAdjValue1-PDT1";
	ppm	numeric	prd	pPriceAdjValue1-PGM1		"PriceAdjValue1-PGM1";
	ppm	numeric	app	pPriceAdjValue2-Loan1		"PriceAdjValue2-Loan1";
	ppm	numeric	prd	pPriceAdjValue2-PDT1		"PriceAdjValue2-PDT1";
	ppm	numeric	prd	pPriceAdjValue2-PGM1		"PriceAdjValue2-PGM1";
	ppm	numeric	app	pPriceAdjValue3-Loan1		"PriceAdjValue3-Loan1";
	ppm	numeric	prd	pPriceAdjValue3-PDT1		"PriceAdjValue3-PDT1";
	ppm	numeric	prd	pPriceAdjValue3-PGM1		"PriceAdjValue3-PGM1";
	ppm	text	app	pPropertyType		"Property Type";
	ppm	numeric	app	pProposedFloodInsurance		"Proposed Flood insurance";
	ppm	numeric	app	pProposedHazardInsurance		"Proposed Hazard Insurance";
	ppm	numeric	app	pProposedHoaDues		"Proposed Homeowner Assn. Dues";
	ppm	numeric	crd	pProposedInstallmentDebt		"Proposed Installment Debt";
	ppm	numeric	app	pProposedMtgInsurance		"Proposed Mortgage Insurance";
	ppm	numeric	crd	pProposedOtherDebt		"Proposed Other Debt (5%)";
	ppm	numeric	app	pProposedOtherHousingExpenses		"Proposed Other Housing Expenses";
	ppm	numeric	crd	pProposedPrimaryResidencePI		"Proposed P and I on Primary Residence";
	ppm	numeric	app	pProposedRealEstateTaxes		"Proposed Real Estate Taxes";
	ppm	numeric	app	pProposedResidentialPayment		"Proposed Residential Mo Payment";
	ppm	numeric	app	pProposedSubjectPropertyPayment		"Proposed SubProp Mo Payment";
	ppm	numeric	app	pRate		"IR";
	ppm	text	prd	pRateSheetDate1		"RateSheetDate1";
	ppm	text	prd	pRateSheetDate2		"RateSheetDate2";
	ppm	text	app	pRelockVersionDate		"RelockVersionDate";
	ppm	numeric	app	pRequestedExtensionPeriod		"RequestedExtensionPeriod";
	ppm	numeric	app	pSubFinancingPayment		"Sub Fin Mo Payments";
	ppm	numeric	app	pSubjectPropertyNetRent75		"Sub Prop Net Rent REO-75";
	ppm	text	app	pSubjectPropertyState		"State of the Subject Property";
	ppm	text	app	pTierFlag		"TierFlag";
	ppm	text	app	pUserType		"User Type";
	ppm	text	app	pWaiveEscrow		"Waive Escrow";
	ppm	text	app	pZoning		"Zoning";




/* ************************************************************************
                  -- Lookups that need to be imported --                  

lookup("AltA-Caps BRO LK1", amortType1st, globalParam);
lookup("AltA-Caps COR LK1", amortType1st, globalParam);
lookup("AltA-Caps COR LK2", amortType1st, globalParam);
lookup("AltA-Caps RTN LK1", amortType1st, globalParam);
lookup("AltA-FinalPrice1st 10-6 1PP BRO LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 1PP COR LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 1PP COR LK2", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 1PP RTN LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 2PP BRO LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 2PP COR LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 2PP COR LK2", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 2PP RTN LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 3PP BRO LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 3PP COR LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 3PP COR LK2", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 3PP RTN LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 NPP BRO LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 NPP COR LK1", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 NPP COR LK2", rate1st, lockPeriod1st);
lookup("AltA-FinalPrice1st 10-6 NPP RTN LK1", rate1st, lockPeriod1st);
lookup("AltA-MarginByProduct BRO LK1", amortType1st, globalParam);
lookup("AltA-MarginByProduct COR LK1", amortType1st, globalParam);
lookup("AltA-MarginByProduct COR LK2", amortType1st, globalParam);
lookup("AltA-MarginByProduct RTN LK1", amortType1st, globalParam);
lookup("AltA-MaxPrice1st BRO LK1", amortType1st, PrepayTerm1st);
lookup("AltA-MaxPrice1st COR LK1", amortType1st, PrepayTerm1st);
lookup("AltA-MaxPrice1st DocFICO BRO LK1", pDocumentType, creditScore);
lookup("AltA-MaxPrice1st DocFICO COR LK1", pDocumentType, creditScore);
lookup("AltA-MaxPrice1st DocFICO RTN LK1", pDocumentType, creditScore);
lookup("AltA-MaxPrice1st Ln Amt BRO LK1", loanAmount1st, globalParam);
lookup("AltA-MaxPrice1st Ln Amt COR LK1", loanAmount1st, globalParam);
lookup("AltA-MaxPrice1st Ln Amt RTN LK1", loanAmount1st, globalParam);
lookup("AltA-MaxPrice1st NOO BRO LK1", pOccupancy, globalParam);
lookup("AltA-MaxPrice1st NOO COR LK1", pOccupancy, globalParam);
lookup("AltA-MaxPrice1st NOO RTN LK1", pOccupancy, globalParam);
lookup("AltA-MaxPrice1st RTN LK1", amortType1st, PrepayTerm1st);
lookup("AltA-PriceAdj 40due30 BRO LK1", f40due30, CLTV);
lookup("AltA-PriceAdj 40due30 COR LK1", f40due30, CLTV);
lookup("AltA-PriceAdj 40due30 RTN LK1", f40due30, CLTV);
lookup("AltA-PriceAdj Doc Type 660 BRO LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdj Doc Type 660 COR LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdj Doc Type 660 RTN LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdj Doc Type BRO LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdj Doc Type COR LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdj Doc Type RTN LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdj FICO BRO LK1", creditScore, CLTV);
lookup("AltA-PriceAdj FICO COR LK1", creditScore, CLTV);
lookup("AltA-PriceAdj FICO RTN LK1", creditScore, CLTV);
lookup("AltA-PriceAdj ForeNatl BRO LK1", ForeignNationalIndicator, CLTV);
lookup("AltA-PriceAdj ForeNatl COR LK1", ForeignNationalIndicator, CLTV);
lookup("AltA-PriceAdj ForeNatl RTN LK1", ForeignNationalIndicator, CLTV);
lookup("AltA-PriceAdj IO BRO LK1", IOIndicator1st, CLTV);
lookup("AltA-PriceAdj IO COR LK1", IOIndicator1st, CLTV);
lookup("AltA-PriceAdj IO Fixed BRO LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj IO Fixed COR LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj IO Fixed RTN LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj IO RTN LK1", IOIndicator1st, CLTV);
lookup("AltA-PriceAdj LnAmt Fxd BRO LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj LnAmt Fxd COR LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj LnAmt Fxd RTN LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj Loan Amount BRO LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj Loan Amount COR LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj Loan Amount RTN LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj Mixed Use BRO LK1", pZoning, CLTV);
lookup("AltA-PriceAdj Mixed Use COR LK1", pZoning, CLTV);
lookup("AltA-PriceAdj Mixed Use RTN LK1", pZoning, CLTV);
lookup("AltA-PriceAdj No Escrow BRO LK1", pWaiveEscrow, CLTV);
lookup("AltA-PriceAdj No Escrow COR LK1", pWaiveEscrow, CLTV);
lookup("AltA-PriceAdj No Escrow RTN LK1", pWaiveEscrow, CLTV);
lookup("AltA-PriceAdj NOO BRO LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj NOO COR LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj NOO RTN LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdj NY BRO LK1", pSubjectPropertyState, CLTV);
lookup("AltA-PriceAdj NY COR LK1", pSubjectPropertyState, CLTV);
lookup("AltA-PriceAdj NY RTN LK1", pSubjectPropertyState, CLTV);
lookup("AltA-PriceAdj Occ BRO LK1", pOccupancy, CLTV);
lookup("AltA-PriceAdj Occ COR LK1", pOccupancy, CLTV);
lookup("AltA-PriceAdj Occ RTN LK1", pOccupancy, CLTV);
lookup("AltA-PriceAdj Prop Type BRO LK1", pPropertyType, CLTV);
lookup("AltA-PriceAdj Prop Type COR LK1", pPropertyType, CLTV);
lookup("AltA-PriceAdj Prop Type RTN LK1", pPropertyType, CLTV);
lookup("AltA-PriceAdj Purpose BRO LK1", purposeAbbrev, CLTV);
lookup("AltA-PriceAdj Purpose COR LK1", purposeAbbrev, CLTV);
lookup("AltA-PriceAdj Purpose RTN LK1", purposeAbbrev, CLTV);
lookup("AltA-PriceAdj Rural BRO LK1", pLocation, CLTV);
lookup("AltA-PriceAdj Rural COR LK1", pLocation, CLTV);
lookup("AltA-PriceAdj Rural RTN LK1", pLocation, CLTV);
lookup("AltA-PriceAdj Units BRO LK1", pNumberOfUnits, CLTV);
lookup("AltA-PriceAdj Units COR LK1", pNumberOfUnits, CLTV);
lookup("AltA-PriceAdj Units RTN LK1", pNumberOfUnits, CLTV);
lookup("AltA-PriceAdjCombo 40due30 BRO LK1", f40due30, CLTV);
lookup("AltA-PriceAdjCombo 40due30 COR LK1", f40due30, CLTV);
lookup("AltA-PriceAdjCombo 40due30 RTN LK1", f40due30, CLTV);
lookup("AltA-PriceAdjCombo Doc Type 660 BRO LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdjCombo Doc Type 660 COR LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdjCombo Doc Type 660 RTN LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdjCombo Doc Type BRO LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdjCombo Doc Type COR LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdjCombo Doc Type RTN LK1", pDocumentType, CLTV);
lookup("AltA-PriceAdjCombo FICO BRO LK1", creditScore, CLTV);
lookup("AltA-PriceAdjCombo FICO COR LK1", creditScore, CLTV);
lookup("AltA-PriceAdjCombo FICO RTN LK1", creditScore, CLTV);
lookup("AltA-PriceAdjCombo ForeNatl BRO LK1", ForeignNationalIndicator, CLTV);
lookup("AltA-PriceAdjCombo ForeNatl COR LK1", ForeignNationalIndicator, CLTV);
lookup("AltA-PriceAdjCombo ForeNatl RTN LK1", ForeignNationalIndicator, CLTV);
lookup("AltA-PriceAdjCombo IO BRO LK1", IOIndicator1st, CLTV);
lookup("AltA-PriceAdjCombo IO COR LK1", IOIndicator1st, CLTV);
lookup("AltA-PriceAdjCombo IO Fixed BRO LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo IO Fixed COR LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo IO Fixed RTN LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo IO RTN LK1", IOIndicator1st, CLTV);
lookup("AltA-PriceAdjCombo LnAmt Fxd BRO LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo LnAmt Fxd COR LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo LnAmt Fxd RTN LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo Loan Amount BRO LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo Loan Amount COR LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo Loan Amount RTN LK1", loanAmount1st, CLTV);
lookup("AltA-PriceAdjCombo Mixed Use BRO LK1", pZoning, CLTV);
lookup("AltA-PriceAdjCombo Mixed Use COR LK1", pZoning, CLTV);
lookup("AltA-PriceAdjCombo Mixed Use RTN LK1", pZoning, CLTV);
lookup("AltA-PriceAdjCombo No Escrow BRO LK1", pWaiveEscrow, CLTV);
lookup("AltA-PriceAdjCombo No Escrow COR LK1", pWaiveEscrow, CLTV);
lookup("AltA-PriceAdjCombo No Escrow RTN LK1", pWaiveEscrow, CLTV);
lookup("AltA-PriceAdjCombo NY BRO LK1", pSubjectPropertyState, CLTV);
lookup("AltA-PriceAdjCombo NY COR LK1", pSubjectPropertyState, CLTV);
lookup("AltA-PriceAdjCombo NY RTN LK1", pSubjectPropertyState, CLTV);
lookup("AltA-PriceAdjCombo Occ BRO LK1", pOccupancy, CLTV);
lookup("AltA-PriceAdjCombo Occ COR LK1", pOccupancy, CLTV);
lookup("AltA-PriceAdjCombo Occ RTN LK1", pOccupancy, CLTV);
lookup("AltA-PriceAdjCombo Prop Type BRO LK1", pPropertyType, CLTV);
lookup("AltA-PriceAdjCombo Prop Type COR LK1", pPropertyType, CLTV);
lookup("AltA-PriceAdjCombo Prop Type RTN LK1", pPropertyType, CLTV);
lookup("AltA-PriceAdjCombo Purpose BRO LK1", purposeAbbrev, CLTV);
lookup("AltA-PriceAdjCombo Purpose COR LK1", purposeAbbrev, CLTV);
lookup("AltA-PriceAdjCombo Purpose RTN LK1", purposeAbbrev, CLTV);
lookup("AltA-PriceAdjCombo Rural BRO LK1", pLocation, CLTV);
lookup("AltA-PriceAdjCombo Rural COR LK1", pLocation, CLTV);
lookup("AltA-PriceAdjCombo Rural RTN LK1", pLocation, CLTV);
lookup("AltA-PriceAdjCombo Units BRO LK1", pNumberOfUnits, CLTV);
lookup("AltA-PriceAdjCombo Units COR LK1", pNumberOfUnits, CLTV);
lookup("AltA-PriceAdjCombo Units RTN LK1", pNumberOfUnits, CLTV);
lookup("AltA-Rate1st 10-6 15Day 1PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 1PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 1PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 1PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 2PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 2PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 2PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 2PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 3PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 3PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 3PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day 3PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day NPP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day NPP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day NPP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 15Day NPP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 1PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 1PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 1PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 1PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 2PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 2PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 2PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 2PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 3PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 3PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 3PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day 3PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day NPP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day NPP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day NPP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 30Day NPP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 1PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 1PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 1PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 1PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 2PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 2PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 2PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 2PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 3PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 3PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 3PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day 3PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day NPP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day NPP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day NPP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 45Day NPP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 1PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 1PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 1PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 1PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 2PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 2PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 2PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 2PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 3PP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 3PP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 3PP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day 3PP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day NPP BRO LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day NPP COR LK1", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day NPP COR LK2", FinalPrice1st, globalParam);
lookup("AltA-Rate1st 10-6 60Day NPP RTN LK1", FinalPrice1st, globalParam);
lookup("AltA-RateAdjCombo DocType BRO", pDocumentType, globalParam);
lookup("AltA-RateAdjCombo DocType COR", pDocumentType, globalParam);
lookup("AltA-RateAdjCombo DocType RTN", pDocumentType, globalParam);
lookup("AltA-RateAdjCombo NOOCltv BRO", CLTV, globalParam);
lookup("AltA-RateAdjCombo NOOCltv COR", CLTV, globalParam);
lookup("AltA-RateAdjCombo NOOCltv RTN", CLTV, globalParam);
lookup("AltA-RateAdjDocType BRO", pDocumentType, globalParam);
lookup("AltA-RateAdjDocType COR", pDocumentType, globalParam);
lookup("AltA-RateAdjDocType RTN", pDocumentType, globalParam);
lookup("AltA-RateAdjNOOCltv BRO", CLTV, globalParam);
lookup("AltA-RateAdjNOOCltv COR", CLTV, globalParam);
lookup("AltA-RateAdjNOOCltv RTN", CLTV, globalParam);
lookup("AltA-RegAdj-NPP-High-LK", amortType1st, RegionCode);
lookup("AltA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
lookup("AltA-RegAdj-PP-High-LK", amortType1st, RegionCode);
lookup("AltA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
lookup("G-Index-6Mo Libor LK", globalParam, globalParam);
lookup("G-Lifecaps1st", amortType1st, globalParam);
lookup("G-LockExpirationDate BRO LK1", lockPeriod1st, globalParam);
lookup("G-LockExpirationDate BRO LK3", lockPeriod1st, globalParam);
lookup("G-LockExpirationDate COR LK1", lockPeriod1st, globalParam);
lookup("G-LockExpirationDate COR LK2", lockPeriod1st, globalParam);
lookup("G-LockExpirationDate RTN LK1", lockPeriod1st, globalParam);
lookup("G-MaxPrice1mmLnAmt BRO", pLoanAmount, globalParam);
lookup("G-MaxPrice1mmLnAmt COR", pLoanAmount, globalParam);
lookup("G-MaxPrice1mmLnAmt RTN", pLoanAmount, globalParam);
lookup("G-MaxPriceNOOBrokerLK1", pDocumentType, globalParam);
lookup("G-MaxPriceNOOCorrLK1", pDocumentType, globalParam);
lookup("G-MaxPriceNOORetentionLK1", pDocumentType, globalParam);
lookup("G-PriceAdj ExtensionFee1st", dExtensionPeriod1st, pUserType);
lookup("G-PriceAdj ExtensionFee2nd", dExtensionPeriod2nd, pUserType);
lookup("G-PriceSheetID BRO LK1", globalParam, globalParam);
lookup("G-PriceSheetID BRO LK3", globalParam, globalParam);
lookup("G-PriceSheetID COR LK1", globalParam, globalParam);
lookup("G-PriceSheetID COR LK2", globalParam, globalParam);
lookup("G-PriceSheetID RTN LK1", globalParam, globalParam);
lookup("G-RateAdj TX CashOut BRO LK1", cvMtgNoUFMIP, globalParam);
lookup("G-RateAdj TX CashOut RTN LK1", cvMtgNoUFMIP, globalParam);
lookup("G-RegionCode", pSubjectPropertyState, globalParam);
lookup("NoMI-RegAdj-NPP-High-LK", amortType1st, RegionCode);
lookup("NoMI-RegAdj-PP-High-LK", amortType1st, RegionCode);
lookup("OptA-RegAdj-NPP-High-LK", amortType1st, RegionCode);
lookup("OptA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
lookup("OptA-RegAdj-PP-High-LK", amortType1st, RegionCode);
lookup("OptA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
lookup("Pref-RegAdj-NPP-High-LK", amortType1st, RegionCode);
lookup("Pref-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
lookup("Pref-RegAdj-PP-High-LK", amortType1st, RegionCode);
lookup("Pref-RegAdj-PP-Low-LK", amortType1st, RegionCode);
lookup("PrefSOA-RegAdj-NPP-High-LK", amortType1st, RegionCode);
lookup("PrefSOA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
lookup("PrefSOA-RegAdj-PP-High-LK", amortType1st, RegionCode);
lookup("PrefSOA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
lookup("SOA-PriceAdjSOACLTV Broker LK1", CLTV, globalParam);
lookup("SOA-PriceAdjSOACLTV COR LK1", CLTV, globalParam);
lookup("SOA-PriceAdjSOACLTV COR LK2", CLTV, globalParam);
lookup("SOA-PriceAdjSOACLTV RTN LK1", CLTV, globalParam);
lookup("SOA-RegAdj-NPP-High-LK", amortType1st, RegionCode);
lookup("SOA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
lookup("SOA-RegAdj-PP-High-LK", amortType1st, RegionCode);
lookup("SOA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
lookup("SubP-RegAdj-NPP-High-LK", amortType1st, RegionCode);
lookup("SubP-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
lookup("SubP-RegAdj-PP-High-LK", amortType1st, RegionCode);
lookup("SubP-RegAdj-PP-Low-LK", amortType1st, RegionCode);


************************************************************************ */



		




// ++++++++++++++++++++++++++ Rule Definitions ++++++++++++++++++++++++++
		
alias(rule, AltA-6MoReserves, "AltA-6 Mo Reserves");

/* ==========================================================================
 * AltA-6MoReserves
 *
 *
 */
rule AltA-6MoReserves()
    if(
        (pLoanAmount > 0)
      )
    then
        SixMoReserves = 6 * PITI;
		

    end
end	// rule AltA-6MoReserves




alias(rule, ALTA-BaseRate1st, "ALTA-Base Rate 1st");

/* ==========================================================================
 * ALTA-BaseRate1st
 *
 *
 */
rule ALTA-BaseRate1st()
    if(
        (pLoanAmount > 0)
      )
    then
        BaseRate1st = rate1st;
		

    end
end	// rule ALTA-BaseRate1st





/* ==========================================================================
 * AltA-CalcAdjustedPriceCombo
 *
 *
 */
rule AltA-CalcAdjustedPriceCombo()
    if(
        (pLoanAmount > 0)
      )
    then
        cvBasePrice = FinalPrice1st;
		FinalPrice1st = FinalPrice1st + priceAdj-Total;
		cvBaseMargin = cvMargin;
		cvMargin = cvMargin + marginAdj-Total;
		

    end
end	// rule AltA-CalcAdjustedPriceCombo




alias(rule, AltA-FinalMaxPrice1stBRORule1, "AltA-Final Max Price 1st BRO Rule 1");

/* ==========================================================================
 * AltA-FinalMaxPrice1stBRORule1
 *
 *
 */
rule AltA-FinalMaxPrice1stBRORule1()
    if(
        ((pUserType == "Broker") ||
		(pUserType == "Retention")) &&
		(MaxPrice1stNOO != "NULL") &&
		(maxPrice1st < MaxPrice1stNOO)
      )
    then
        maxPrice1st = MaxPrice1stNOO;
		

    end
end	// rule AltA-FinalMaxPrice1stBRORule1




alias(rule, AltA-FinalMaxPrice1stBRORule2, "AltA-Final Max Price 1st BRO Rule 2");

/* ==========================================================================
 * AltA-FinalMaxPrice1stBRORule2
 *
 *
 */
rule AltA-FinalMaxPrice1stBRORule2()
    if(
        ((pUserType == "Broker") ||
		(pUserType == "Retention")) &&
		(MaxPrice1stLnAmt != "NULL") &&
		(maxPrice1st < MaxPrice1stLnAmt)
      )
    then
        maxPrice1st = MaxPrice1stLnAmt;
		

    end
end	// rule AltA-FinalMaxPrice1stBRORule2




alias(rule, AltA-FinalMaxPrice1stBRORule3, "AltA-Final Max Price 1st BRO Rule 3");

/* ==========================================================================
 * AltA-FinalMaxPrice1stBRORule3
 *
 *
 */
rule AltA-FinalMaxPrice1stBRORule3()
    if(
        ((pUserType == "Broker") ||
		(pUserType == "Retention")) &&
		(MaxPrice1stDocFICO != "NULL") &&
		(maxPrice1st < MaxPrice1stDocFICO)
      )
    then
        maxPrice1st = MaxPrice1stDocFICO;
		

    end
end	// rule AltA-FinalMaxPrice1stBRORule3




alias(rule, AltA-FinalMaxPrice1stCORRule1, "AltA-Final Max Price 1st COR Rule 1");

/* ==========================================================================
 * AltA-FinalMaxPrice1stCORRule1
 *
 *
 */
rule AltA-FinalMaxPrice1stCORRule1()
    if(
        (pUserType == "Correspondent") &&
		(MaxPrice1stNOO != "NULL") &&
		(maxPrice1st > MaxPrice1stNOO)
      )
    then
        maxPrice1st = MaxPrice1stNOO;
		

    end
end	// rule AltA-FinalMaxPrice1stCORRule1




alias(rule, AltA-FinalMaxPrice1stCORRule2, "AltA-Final Max Price 1st COR Rule 2");

/* ==========================================================================
 * AltA-FinalMaxPrice1stCORRule2
 *
 *
 */
rule AltA-FinalMaxPrice1stCORRule2()
    if(
        (pUserType == "Correspondent") &&
		(MaxPrice1stLnAmt != "NULL") &&
		(maxPrice1st > MaxPrice1stLnAmt)
      )
    then
        maxPrice1st = MaxPrice1stLnAmt;
		

    end
end	// rule AltA-FinalMaxPrice1stCORRule2




alias(rule, AltA-FinalMaxPrice1stCORRule3, "AltA-Final Max Price 1st COR Rule 3");

/* ==========================================================================
 * AltA-FinalMaxPrice1stCORRule3
 *
 *
 */
rule AltA-FinalMaxPrice1stCORRule3()
    if(
        (pUserType == "Correspondent") &&
		(MaxPrice1stDocFICO != "NULL") &&
		(maxPrice1st > MaxPrice1stDocFICO)
      )
    then
        maxPrice1st = MaxPrice1stDocFICO;
		

    end
end	// rule AltA-FinalMaxPrice1stCORRule3




alias(rule, AltA-FinalPrice1stComparisonRule1, "AltA-Final Price 1st Comparison Rule 1");

/* ==========================================================================
 * AltA-FinalPrice1stComparisonRule1
 *
 *
 */
rule AltA-FinalPrice1stComparisonRule1()
    if(
        (((pUserType == "Broker") ||
		(pUserType == "Retention")) &&
		(FinalPrice1st < maxPrice1st)) ||
		((pUserType == "Correspondent") &&
		(FinalPrice1st > maxPrice1st))
      )
    then
        FinalPrice1st = maxPrice1st;
		

    end
end	// rule AltA-FinalPrice1stComparisonRule1




alias(rule, AltA-FinalPrice1stComparisonRule2, "AltA-Final Price 1st Comparison Rule 2");

/* ==========================================================================
 * AltA-FinalPrice1stComparisonRule2
 *
 *
 */
rule AltA-FinalPrice1stComparisonRule2()
    if(
        (((pUserType == "Broker") ||
		(pUserType == "Retention")) &&
		(FinalPrice1st < maxPrice1st)) ||
		((pUserType == "Correspondent") &&
		(FinalPrice1st > maxPrice1st))
      )
    then
        FinalPrice1st = maxPrice1st;
		

    end
end	// rule AltA-FinalPrice1stComparisonRule2




alias(rule, AltA-FinalPriceAdj1st, "AltA-Final Price Adj 1st");

/* ==========================================================================
 * AltA-FinalPriceAdj1st
 *
 *
 */
rule AltA-FinalPriceAdj1st()
    if(
        (pLoanAmount > 0)
      )
    then
        FinalPrice1st = FinalPrice1st - priceAdj-Total;
		

    end
end	// rule AltA-FinalPriceAdj1st





/* ==========================================================================
 * ALTA-Floor
 *
 *
 */
rule ALTA-Floor()
    if(
        (amortType1st != "Fixed 30") &&
		(amortType1st != "Fixed 15")
      )
    then
        cvFloor = cvMargin;
		

    end
end	// rule ALTA-Floor




alias(rule, AltA-GetFinalPrice1st10-6-1, "AltA-GetFinalPrice1st 10-6.1");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-1
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-1()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-1




alias(rule, AltA-GetFinalPrice1st10-6-10, "AltA-GetFinalPrice1st 10-6.10");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-10
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-10()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 3PP COR LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-10




alias(rule, AltA-GetFinalPrice1st10-6-11, "AltA-GetFinalPrice1st 10-6.11");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-11
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-11()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-11




alias(rule, AltA-GetFinalPrice1st10-6-12, "AltA-GetFinalPrice1st 10-6.12");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-12
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-12()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-12




alias(rule, AltA-GetFinalPrice1st10-6-13, "AltA-GetFinalPrice1st 10-6.13");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-13
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-13()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 1PP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-13




alias(rule, AltA-GetFinalPrice1st10-6-14, "AltA-GetFinalPrice1st 10-6.14");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-14
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-14()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 2PP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-14




alias(rule, AltA-GetFinalPrice1st10-6-15, "AltA-GetFinalPrice1st 10-6.15");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-15
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-15()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 3PP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-15




alias(rule, AltA-GetFinalPrice1st10-6-16, "AltA-GetFinalPrice1st 10-6.16");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-16
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-16()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-16




alias(rule, AltA-GetFinalPrice1st10-6-17, "AltA-GetFinalPrice1st 10-6.17");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-17
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-17()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-17




alias(rule, AltA-GetFinalPrice1st10-6-18, "AltA-GetFinalPrice1st 10-6.18");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-18
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-18()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 1PP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-18




alias(rule, AltA-GetFinalPrice1st10-6-19, "AltA-GetFinalPrice1st 10-6.19");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-19
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-19()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 2PP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-19




alias(rule, AltA-GetFinalPrice1st10-6-2, "AltA-GetFinalPrice1st 10-6.2");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-2
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-2()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-2




alias(rule, AltA-GetFinalPrice1st10-6-20, "AltA-GetFinalPrice1st 10-6.20");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-20
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-20()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 3PP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-20




alias(rule, AltA-GetFinalPrice1st10-6-21, "AltA-GetFinalPrice1st 10-6.21");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-21
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-21()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP COR LK2", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-21




alias(rule, AltA-GetFinalPrice1st10-6-22, "AltA-GetFinalPrice1st 10-6.22");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-22
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-22()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP COR LK2", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-22




alias(rule, AltA-GetFinalPrice1st10-6-23, "AltA-GetFinalPrice1st 10-6.23");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-23
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-23()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 1PP COR LK2", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-23




alias(rule, AltA-GetFinalPrice1st10-6-24, "AltA-GetFinalPrice1st 10-6.24");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-24
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-24()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 2PP COR LK2", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-24




alias(rule, AltA-GetFinalPrice1st10-6-25, "AltA-GetFinalPrice1st 10-6.25");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-25
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-25()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 3PP COR LK2", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-25




alias(rule, AltA-GetFinalPrice1st10-6-26, "AltA-GetFinalPrice1st 10-6.26");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-26
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-26()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-26




alias(rule, AltA-GetFinalPrice1st10-6-27, "AltA-GetFinalPrice1st 10-6.27");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-27
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-27()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-27




alias(rule, AltA-GetFinalPrice1st10-6-28, "AltA-GetFinalPrice1st 10-6.28");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-28
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-28()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 1PP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-28




alias(rule, AltA-GetFinalPrice1st10-6-29, "AltA-GetFinalPrice1st 10-6.29");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-29
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-29()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 2PP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-29




alias(rule, AltA-GetFinalPrice1st10-6-3, "AltA-GetFinalPrice1st 10-6.3");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-3
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-3()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 1PP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-3




alias(rule, AltA-GetFinalPrice1st10-6-30, "AltA-GetFinalPrice1st 10-6.30");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-30
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-30()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T2")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 3PP RTN LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-30




alias(rule, AltA-GetFinalPrice1st10-6-4, "AltA-GetFinalPrice1st 10-6.4");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-4
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-4()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 2PP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-4




alias(rule, AltA-GetFinalPrice1st10-6-5, "AltA-GetFinalPrice1st 10-6.5");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-5
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-5()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 3PP BRO LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-5




alias(rule, AltA-GetFinalPrice1st10-6-6, "AltA-GetFinalPrice1st 10-6.6");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-6
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-6()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP COR LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-6




alias(rule, AltA-GetFinalPrice1st10-6-7, "AltA-GetFinalPrice1st 10-6.7");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-7
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-7()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 NPP COR LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-7




alias(rule, AltA-GetFinalPrice1st10-6-8, "AltA-GetFinalPrice1st 10-6.8");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-8
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-8()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 1PP COR LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-8




alias(rule, AltA-GetFinalPrice1st10-6-9, "AltA-GetFinalPrice1st 10-6.9");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6-9
 *
 *
 */
rule AltA-GetFinalPrice1st10-6-9()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(pTierFlag == "T1")
      )
    then
        FinalPrice1st = lookup("AltA-FinalPrice1st 10-6 2PP COR LK1", rate1st, lockPeriod1st);
		

    end
end	// rule AltA-GetFinalPrice1st10-6-9




alias(rule, AltA-GetMargin-Caps-Index-1, "AltA-GetMargin-Caps-Index.1");

/* ==========================================================================
 * AltA-GetMargin-Caps-Index-1
 *
 *
 */
rule AltA-GetMargin-Caps-Index-1()
    if(
        (pUserType == "Broker") &&
		(pTierFlag == "T1")
      )
    then
        cvMargin = lookup("AltA-MarginByProduct BRO LK1", amortType1st, globalParam);
		cvCaps = lookup("AltA-Caps BRO LK1", amortType1st, globalParam);
		cvIndexValue = lookup("G-Index-6Mo Libor LK", globalParam, globalParam);
		

    end
end	// rule AltA-GetMargin-Caps-Index-1




alias(rule, AltA-GetMargin-Caps-Index-2, "AltA-GetMargin-Caps-Index.2");

/* ==========================================================================
 * AltA-GetMargin-Caps-Index-2
 *
 *
 */
rule AltA-GetMargin-Caps-Index-2()
    if(
        (pUserType == "Correspondent") &&
		(pTierFlag == "T1")
      )
    then
        cvMargin = lookup("AltA-MarginByProduct COR LK1", amortType1st, globalParam);
		cvCaps = lookup("AltA-Caps COR LK1", amortType1st, globalParam);
		cvIndexValue = lookup("G-Index-6Mo Libor LK", globalParam, globalParam);
		

    end
end	// rule AltA-GetMargin-Caps-Index-2




alias(rule, AltA-GetMargin-Caps-Index-3, "AltA-GetMargin-Caps-Index.3");

/* ==========================================================================
 * AltA-GetMargin-Caps-Index-3
 *
 *
 */
rule AltA-GetMargin-Caps-Index-3()
    if(
        (pUserType == "Retention") &&
		(pTierFlag == "T1")
      )
    then
        cvMargin = lookup("AltA-MarginByProduct RTN LK1", amortType1st, globalParam);
		cvCaps = lookup("AltA-Caps RTN LK1", amortType1st, globalParam);
		cvIndexValue = lookup("G-Index-6Mo Libor LK", globalParam, globalParam);
		

    end
end	// rule AltA-GetMargin-Caps-Index-3




alias(rule, AltA-GetMargin-Caps-Index-4, "AltA-GetMargin-Caps-Index.4");

/* ==========================================================================
 * AltA-GetMargin-Caps-Index-4
 *
 *
 */
rule AltA-GetMargin-Caps-Index-4()
    if(
        (pUserType == "Broker") &&
		(pTierFlag == "T2")
      )
    then
        cvMargin = lookup("AltA-MarginByProduct BRO LK1", amortType1st, globalParam);
		cvCaps = lookup("AltA-Caps BRO LK1", amortType1st, globalParam);
		cvIndexValue = lookup("G-Index-6Mo Libor LK", globalParam, globalParam);
		

    end
end	// rule AltA-GetMargin-Caps-Index-4




alias(rule, AltA-GetMargin-Caps-Index-5, "AltA-GetMargin-Caps-Index.5");

/* ==========================================================================
 * AltA-GetMargin-Caps-Index-5
 *
 *
 */
rule AltA-GetMargin-Caps-Index-5()
    if(
        (pUserType == "Correspondent") &&
		(pTierFlag == "T2")
      )
    then
        cvMargin = lookup("AltA-MarginByProduct COR LK2", amortType1st, globalParam);
		cvCaps = lookup("AltA-Caps COR LK2", amortType1st, globalParam);
		cvIndexValue = lookup("G-Index-6Mo Libor LK", globalParam, globalParam);
		

    end
end	// rule AltA-GetMargin-Caps-Index-5




alias(rule, AltA-GetMargin-Caps-Index-6, "AltA-GetMargin-Caps-Index.6");

/* ==========================================================================
 * AltA-GetMargin-Caps-Index-6
 *
 *
 */
rule AltA-GetMargin-Caps-Index-6()
    if(
        (pUserType == "Retention") &&
		(pTierFlag == "T2")
      )
    then
        cvMargin = lookup("AltA-MarginByProduct RTN LK1", amortType1st, globalParam);
		cvCaps = lookup("AltA-Caps RTN LK1", amortType1st, globalParam);
		cvIndexValue = lookup("G-Index-6Mo Libor LK", globalParam, globalParam);
		

    end
end	// rule AltA-GetMargin-Caps-Index-6




alias(rule, AltA-GetPriceAdjsBROT1, "AltA-GetPriceAdjs BRO T1");

/* ==========================================================================
 * AltA-GetPriceAdjsBROT1
 *
 *
 */
rule AltA-GetPriceAdjsBROT1()
    if(
        (pUserType == "Broker")
      )
    then
        priceAdj-CashOut = lookup("AltA-PriceAdj Purpose BRO LK1", purposeAbbrev, CLTV);
		priceAdj-PropertyType = lookup("AltA-PriceAdj Prop Type BRO LK1", pPropertyType, CLTV);
		priceAdj-MixedUse = lookup("AltA-PriceAdj Mixed Use BRO LK1", pZoning, CLTV);
		priceAdj-Rural = lookup("AltA-PriceAdj Rural BRO LK1", pLocation, CLTV);
		priceAdj-ForeignNational = lookup("AltA-PriceAdj ForeNatl BRO LK1", ForeignNationalIndicator, CLTV);
		priceAdj-FICO = lookup("AltA-PriceAdj FICO BRO LK1", creditScore, CLTV);
		priceAdj-LoanAmount = lookup("AltA-PriceAdj Loan Amount BRO LK1", loanAmount1st, CLTV);
		priceAdj-CLTV = 0;
		priceAdj-PrepayTerm = 0;
		priceAdj-Occupancy = lookup("AltA-PriceAdj Occ BRO LK1", pOccupancy, CLTV);
		priceAdj-DocumentType = lookup("AltA-PriceAdj Doc Type BRO LK1", pDocumentType, CLTV);
		priceAdj-NumberofUnits = lookup("AltA-PriceAdj Units BRO LK1", pNumberOfUnits, CLTV);
		priceAdj-NewYorkProperties = lookup("AltA-PriceAdj NY BRO LK1", pSubjectPropertyState, CLTV);
		priceAdj-InterestOnly = lookup("AltA-PriceAdj IO BRO LK1", IOIndicator1st, CLTV);
		

    end
end	// rule AltA-GetPriceAdjsBROT1




alias(rule, AltA-GetPriceAdjsBROT1-SubF, "AltA-GetPriceAdjs BRO T1-SubF");

/* ==========================================================================
 * AltA-GetPriceAdjsBROT1-SubF
 *
 *
 */
rule AltA-GetPriceAdjsBROT1-SubF()
    if(
        (pUserType == "Broker") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-CashOut = lookup("AltA-PriceAdjCombo Purpose BRO LK1", purposeAbbrev, CLTV);
		priceAdj-PropertyType = lookup("AltA-PriceAdjCombo Prop Type BRO LK1", pPropertyType, CLTV);
		priceAdj-MixedUse = lookup("AltA-PriceAdjCombo Mixed Use BRO LK1", pZoning, CLTV);
		priceAdj-Rural = lookup("AltA-PriceAdjCombo Rural BRO LK1", pLocation, CLTV);
		priceAdj-ForeignNational = lookup("AltA-PriceAdjCombo ForeNatl BRO LK1", ForeignNationalIndicator, CLTV);
		priceAdj-FICO = lookup("AltA-PriceAdjCombo FICO BRO LK1", creditScore, CLTV);
		priceAdj-LoanAmount = lookup("AltA-PriceAdjCombo Loan Amount BRO LK1", loanAmount1st, CLTV);
		priceAdj-CLTV = 0;
		priceAdj-InterestOnly = lookup("AltA-PriceAdjCombo IO BRO LK1", IOIndicator1st, CLTV);
		priceAdj-PrepayTerm = 0;
		priceAdj-Occupancy = lookup("AltA-PriceAdjCombo Occ BRO LK1", pOccupancy, CLTV);
		priceAdj-DocumentType = lookup("AltA-PriceAdjCombo Doc Type BRO LK1", pDocumentType, CLTV);
		priceAdj-NumberofUnits = lookup("AltA-PriceAdjCombo Units BRO LK1", pNumberOfUnits, CLTV);
		priceAdj-NewYorkProperties = lookup("AltA-PriceAdjCombo NY BRO LK1", pSubjectPropertyState, CLTV);
		

    end
end	// rule AltA-GetPriceAdjsBROT1-SubF




alias(rule, AltA-GetPriceAdjsCORT1, "AltA-GetPriceAdjs COR T1");

/* ==========================================================================
 * AltA-GetPriceAdjsCORT1
 *
 *
 */
rule AltA-GetPriceAdjsCORT1()
    if(
        (pUserType == "Correspondent")
      )
    then
        priceAdj-CashOut = lookup("AltA-PriceAdj Purpose COR LK1", purposeAbbrev, CLTV);
		priceAdj-PropertyType = lookup("AltA-PriceAdj Prop Type COR LK1", pPropertyType, CLTV);
		priceAdj-MixedUse = lookup("AltA-PriceAdj Mixed Use COR LK1", pZoning, CLTV);
		priceAdj-Rural = lookup("AltA-PriceAdj Rural COR LK1", pLocation, CLTV);
		priceAdj-ForeignNational = lookup("AltA-PriceAdj ForeNatl COR LK1", ForeignNationalIndicator, CLTV);
		priceAdj-FICO = lookup("AltA-PriceAdj FICO COR LK1", creditScore, CLTV);
		priceAdj-LoanAmount = lookup("AltA-PriceAdj Loan Amount COR LK1", loanAmount1st, CLTV);
		priceAdj-CLTV = 0;
		priceAdj-PrepayTerm = 0;
		priceAdj-Occupancy = lookup("AltA-PriceAdj Occ COR LK1", pOccupancy, CLTV);
		priceAdj-DocumentType = lookup("AltA-PriceAdj Doc Type COR LK1", pDocumentType, CLTV);
		priceAdj-NumberofUnits = lookup("AltA-PriceAdj Units COR LK1", pNumberOfUnits, CLTV);
		priceAdj-NewYorkProperties = lookup("AltA-PriceAdj NY COR LK1", pSubjectPropertyState, CLTV);
		priceAdj-InterestOnly = lookup("AltA-PriceAdj IO COR LK1", IOIndicator1st, CLTV);
		

    end
end	// rule AltA-GetPriceAdjsCORT1




alias(rule, AltA-GetPriceAdjsCORT1-SubF, "AltA-GetPriceAdjs COR T1-SubF");

/* ==========================================================================
 * AltA-GetPriceAdjsCORT1-SubF
 *
 *
 */
rule AltA-GetPriceAdjsCORT1-SubF()
    if(
        (pUserType == "Correspondent") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-CashOut = lookup("AltA-PriceAdjCombo Purpose COR LK1", purposeAbbrev, CLTV);
		priceAdj-PropertyType = lookup("AltA-PriceAdjCombo Prop Type COR LK1", pPropertyType, CLTV);
		priceAdj-MixedUse = lookup("AltA-PriceAdjCombo Mixed Use COR LK1", pZoning, CLTV);
		priceAdj-Rural = lookup("AltA-PriceAdjCombo Rural COR LK1", pLocation, CLTV);
		priceAdj-ForeignNational = lookup("AltA-PriceAdjCombo ForeNatl COR LK1", ForeignNationalIndicator, CLTV);
		priceAdj-FICO = lookup("AltA-PriceAdjCombo FICO COR LK1", creditScore, CLTV);
		priceAdj-LoanAmount = lookup("AltA-PriceAdjCombo Loan Amount COR LK1", loanAmount1st, CLTV);
		priceAdj-CLTV = 0;
		priceAdj-InterestOnly = lookup("AltA-PriceAdjCombo IO COR LK1", IOIndicator1st, CLTV);
		priceAdj-PrepayTerm = 0;
		priceAdj-Occupancy = lookup("AltA-PriceAdjCombo Occ COR LK1", pOccupancy, CLTV);
		priceAdj-DocumentType = lookup("AltA-PriceAdjCombo Doc Type COR LK1", pDocumentType, CLTV);
		priceAdj-NumberofUnits = lookup("AltA-PriceAdjCombo Units COR LK1", pNumberOfUnits, CLTV);
		priceAdj-NewYorkProperties = lookup("AltA-PriceAdjCombo NY COR LK1", pSubjectPropertyState, CLTV);
		

    end
end	// rule AltA-GetPriceAdjsCORT1-SubF




alias(rule, AltA-GetPriceAdjsRTNT1, "AltA-GetPriceAdjs RTN T1");

/* ==========================================================================
 * AltA-GetPriceAdjsRTNT1
 *
 *
 */
rule AltA-GetPriceAdjsRTNT1()
    if(
        (pUserType == "Retention")
      )
    then
        priceAdj-CashOut = lookup("AltA-PriceAdj Purpose RTN LK1", purposeAbbrev, CLTV);
		priceAdj-PropertyType = lookup("AltA-PriceAdj Prop Type RTN LK1", pPropertyType, CLTV);
		priceAdj-MixedUse = lookup("AltA-PriceAdj Mixed Use RTN LK1", pZoning, CLTV);
		priceAdj-Rural = lookup("AltA-PriceAdj Rural RTN LK1", pLocation, CLTV);
		priceAdj-ForeignNational = lookup("AltA-PriceAdj ForeNatl RTN LK1", ForeignNationalIndicator, CLTV);
		priceAdj-FICO = lookup("AltA-PriceAdj FICO RTN LK1", creditScore, CLTV);
		priceAdj-LoanAmount = lookup("AltA-PriceAdj Loan Amount RTN LK1", loanAmount1st, CLTV);
		priceAdj-CLTV = 0;
		priceAdj-PrepayTerm = 0;
		priceAdj-Occupancy = lookup("AltA-PriceAdj Occ RTN LK1", pOccupancy, CLTV);
		priceAdj-DocumentType = lookup("AltA-PriceAdj Doc Type RTN LK1", pDocumentType, CLTV);
		priceAdj-NumberofUnits = lookup("AltA-PriceAdj Units RTN LK1", pNumberOfUnits, CLTV);
		priceAdj-NewYorkProperties = lookup("AltA-PriceAdj NY RTN LK1", pSubjectPropertyState, CLTV);
		priceAdj-InterestOnly = lookup("AltA-PriceAdj IO RTN LK1", IOIndicator1st, CLTV);
		

    end
end	// rule AltA-GetPriceAdjsRTNT1




alias(rule, AltA-GetPriceAdjsRTNT1-SubF, "AltA-GetPriceAdjs RTN T1-SubF");

/* ==========================================================================
 * AltA-GetPriceAdjsRTNT1-SubF
 *
 *
 */
rule AltA-GetPriceAdjsRTNT1-SubF()
    if(
        (pUserType == "Retention") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-CashOut = lookup("AltA-PriceAdjCombo Purpose RTN LK1", purposeAbbrev, CLTV);
		priceAdj-PropertyType = lookup("AltA-PriceAdjCombo Prop Type RTN LK1", pPropertyType, CLTV);
		priceAdj-MixedUse = lookup("AltA-PriceAdjCombo Mixed Use RTN LK1", pZoning, CLTV);
		priceAdj-Rural = lookup("AltA-PriceAdjCombo Rural RTN LK1", pLocation, CLTV);
		priceAdj-ForeignNational = lookup("AltA-PriceAdjCombo ForeNatl RTN LK1", ForeignNationalIndicator, CLTV);
		priceAdj-FICO = lookup("AltA-PriceAdjCombo FICO RTN LK1", creditScore, CLTV);
		priceAdj-LoanAmount = lookup("AltA-PriceAdjCombo Loan Amount RTN LK1", loanAmount1st, CLTV);
		priceAdj-CLTV = 0;
		priceAdj-InterestOnly = lookup("AltA-PriceAdjCombo IO RTN LK1", IOIndicator1st, CLTV);
		priceAdj-PrepayTerm = 0;
		priceAdj-Occupancy = lookup("AltA-PriceAdjCombo Occ RTN LK1", pOccupancy, CLTV);
		priceAdj-DocumentType = lookup("AltA-PriceAdjCombo Doc Type RTN LK1", pDocumentType, CLTV);
		priceAdj-NumberofUnits = lookup("AltA-PriceAdjCombo Units RTN LK1", pNumberOfUnits, CLTV);
		priceAdj-NewYorkProperties = lookup("AltA-PriceAdjCombo NY RTN LK1", pSubjectPropertyState, CLTV);
		

    end
end	// rule AltA-GetPriceAdjsRTNT1-SubF




alias(rule, AltA-GetRate1st10-6-1, "AltA-GetRate1st 10-6.1");

/* ==========================================================================
 * AltA-GetRate1st10-6-1
 *
 *
 */
rule AltA-GetRate1st10-6-1()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-1




alias(rule, AltA-GetRate1st10-6-10, "AltA-GetRate1st 10-6.10");

/* ==========================================================================
 * AltA-GetRate1st10-6-10
 *
 *
 */
rule AltA-GetRate1st10-6-10()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 1PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-10




alias(rule, AltA-GetRate1st10-6-100, "AltA-GetRate1st 10-6.100");

/* ==========================================================================
 * AltA-GetRate1st10-6-100
 *
 *
 */
rule AltA-GetRate1st10-6-100()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 3PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-100




alias(rule, AltA-GetRate1st10-6-101, "AltA-GetRate1st 10-6.101");

/* ==========================================================================
 * AltA-GetRate1st10-6-101
 *
 *
 */
rule AltA-GetRate1st10-6-101()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-101




alias(rule, AltA-GetRate1st10-6-102, "AltA-GetRate1st 10-6.102");

/* ==========================================================================
 * AltA-GetRate1st10-6-102
 *
 *
 */
rule AltA-GetRate1st10-6-102()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-102




alias(rule, AltA-GetRate1st10-6-103, "AltA-GetRate1st 10-6.103");

/* ==========================================================================
 * AltA-GetRate1st10-6-103
 *
 *
 */
rule AltA-GetRate1st10-6-103()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-103




alias(rule, AltA-GetRate1st10-6-104, "AltA-GetRate1st 10-6.104");

/* ==========================================================================
 * AltA-GetRate1st10-6-104
 *
 *
 */
rule AltA-GetRate1st10-6-104()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-104




alias(rule, AltA-GetRate1st10-6-105, "AltA-GetRate1st 10-6.105");

/* ==========================================================================
 * AltA-GetRate1st10-6-105
 *
 *
 */
rule AltA-GetRate1st10-6-105()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-105




alias(rule, AltA-GetRate1st10-6-106, "AltA-GetRate1st 10-6.106");

/* ==========================================================================
 * AltA-GetRate1st10-6-106
 *
 *
 */
rule AltA-GetRate1st10-6-106()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-106




alias(rule, AltA-GetRate1st10-6-107, "AltA-GetRate1st 10-6.107");

/* ==========================================================================
 * AltA-GetRate1st10-6-107
 *
 *
 */
rule AltA-GetRate1st10-6-107()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-107




alias(rule, AltA-GetRate1st10-6-108, "AltA-GetRate1st 10-6.108");

/* ==========================================================================
 * AltA-GetRate1st10-6-108
 *
 *
 */
rule AltA-GetRate1st10-6-108()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-108




alias(rule, AltA-GetRate1st10-6-109, "AltA-GetRate1st 10-6.109");

/* ==========================================================================
 * AltA-GetRate1st10-6-109
 *
 *
 */
rule AltA-GetRate1st10-6-109()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 1PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-109




alias(rule, AltA-GetRate1st10-6-11, "AltA-GetRate1st 10-6.11");

/* ==========================================================================
 * AltA-GetRate1st10-6-11
 *
 *
 */
rule AltA-GetRate1st10-6-11()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 1PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-11




alias(rule, AltA-GetRate1st10-6-110, "AltA-GetRate1st 10-6.110");

/* ==========================================================================
 * AltA-GetRate1st10-6-110
 *
 *
 */
rule AltA-GetRate1st10-6-110()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 1PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-110




alias(rule, AltA-GetRate1st10-6-111, "AltA-GetRate1st 10-6.111");

/* ==========================================================================
 * AltA-GetRate1st10-6-111
 *
 *
 */
rule AltA-GetRate1st10-6-111()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 1PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-111




alias(rule, AltA-GetRate1st10-6-112, "AltA-GetRate1st 10-6.112");

/* ==========================================================================
 * AltA-GetRate1st10-6-112
 *
 *
 */
rule AltA-GetRate1st10-6-112()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 1PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-112




alias(rule, AltA-GetRate1st10-6-113, "AltA-GetRate1st 10-6.113");

/* ==========================================================================
 * AltA-GetRate1st10-6-113
 *
 *
 */
rule AltA-GetRate1st10-6-113()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 2PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-113




alias(rule, AltA-GetRate1st10-6-114, "AltA-GetRate1st 10-6.114");

/* ==========================================================================
 * AltA-GetRate1st10-6-114
 *
 *
 */
rule AltA-GetRate1st10-6-114()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 2PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-114




alias(rule, AltA-GetRate1st10-6-115, "AltA-GetRate1st 10-6.115");

/* ==========================================================================
 * AltA-GetRate1st10-6-115
 *
 *
 */
rule AltA-GetRate1st10-6-115()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 2PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-115




alias(rule, AltA-GetRate1st10-6-116, "AltA-GetRate1st 10-6.116");

/* ==========================================================================
 * AltA-GetRate1st10-6-116
 *
 *
 */
rule AltA-GetRate1st10-6-116()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 2PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-116




alias(rule, AltA-GetRate1st10-6-117, "AltA-GetRate1st 10-6.117");

/* ==========================================================================
 * AltA-GetRate1st10-6-117
 *
 *
 */
rule AltA-GetRate1st10-6-117()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 3PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-117




alias(rule, AltA-GetRate1st10-6-118, "AltA-GetRate1st 10-6.118");

/* ==========================================================================
 * AltA-GetRate1st10-6-118
 *
 *
 */
rule AltA-GetRate1st10-6-118()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 3PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-118




alias(rule, AltA-GetRate1st10-6-119, "AltA-GetRate1st 10-6.119");

/* ==========================================================================
 * AltA-GetRate1st10-6-119
 *
 *
 */
rule AltA-GetRate1st10-6-119()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 3PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-119




alias(rule, AltA-GetRate1st10-6-12, "AltA-GetRate1st 10-6.12");

/* ==========================================================================
 * AltA-GetRate1st10-6-12
 *
 *
 */
rule AltA-GetRate1st10-6-12()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 1PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-12




alias(rule, AltA-GetRate1st10-6-120, "AltA-GetRate1st 10-6.120");

/* ==========================================================================
 * AltA-GetRate1st10-6-120
 *
 *
 */
rule AltA-GetRate1st10-6-120()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 3PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-120




alias(rule, AltA-GetRate1st10-6-13, "AltA-GetRate1st 10-6.13");

/* ==========================================================================
 * AltA-GetRate1st10-6-13
 *
 *
 */
rule AltA-GetRate1st10-6-13()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 2PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-13




alias(rule, AltA-GetRate1st10-6-14, "AltA-GetRate1st 10-6.14");

/* ==========================================================================
 * AltA-GetRate1st10-6-14
 *
 *
 */
rule AltA-GetRate1st10-6-14()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 2PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-14




alias(rule, AltA-GetRate1st10-6-15, "AltA-GetRate1st 10-6.15");

/* ==========================================================================
 * AltA-GetRate1st10-6-15
 *
 *
 */
rule AltA-GetRate1st10-6-15()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 2PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-15




alias(rule, AltA-GetRate1st10-6-16, "AltA-GetRate1st 10-6.16");

/* ==========================================================================
 * AltA-GetRate1st10-6-16
 *
 *
 */
rule AltA-GetRate1st10-6-16()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 2PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-16




alias(rule, AltA-GetRate1st10-6-17, "AltA-GetRate1st 10-6.17");

/* ==========================================================================
 * AltA-GetRate1st10-6-17
 *
 *
 */
rule AltA-GetRate1st10-6-17()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 3PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-17




alias(rule, AltA-GetRate1st10-6-18, "AltA-GetRate1st 10-6.18");

/* ==========================================================================
 * AltA-GetRate1st10-6-18
 *
 *
 */
rule AltA-GetRate1st10-6-18()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 3PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-18




alias(rule, AltA-GetRate1st10-6-19, "AltA-GetRate1st 10-6.19");

/* ==========================================================================
 * AltA-GetRate1st10-6-19
 *
 *
 */
rule AltA-GetRate1st10-6-19()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 3PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-19




alias(rule, AltA-GetRate1st10-6-2, "AltA-GetRate1st 10-6.2");

/* ==========================================================================
 * AltA-GetRate1st10-6-2
 *
 *
 */
rule AltA-GetRate1st10-6-2()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-2




alias(rule, AltA-GetRate1st10-6-20, "AltA-GetRate1st 10-6.20");

/* ==========================================================================
 * AltA-GetRate1st10-6-20
 *
 *
 */
rule AltA-GetRate1st10-6-20()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 3PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-20




alias(rule, AltA-GetRate1st10-6-21, "AltA-GetRate1st 10-6.21");

/* ==========================================================================
 * AltA-GetRate1st10-6-21
 *
 *
 */
rule AltA-GetRate1st10-6-21()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-21




alias(rule, AltA-GetRate1st10-6-22, "AltA-GetRate1st 10-6.22");

/* ==========================================================================
 * AltA-GetRate1st10-6-22
 *
 *
 */
rule AltA-GetRate1st10-6-22()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-22




alias(rule, AltA-GetRate1st10-6-23, "AltA-GetRate1st 10-6.23");

/* ==========================================================================
 * AltA-GetRate1st10-6-23
 *
 *
 */
rule AltA-GetRate1st10-6-23()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-23




alias(rule, AltA-GetRate1st10-6-24, "AltA-GetRate1st 10-6.24");

/* ==========================================================================
 * AltA-GetRate1st10-6-24
 *
 *
 */
rule AltA-GetRate1st10-6-24()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-24




alias(rule, AltA-GetRate1st10-6-25, "AltA-GetRate1st 10-6.25");

/* ==========================================================================
 * AltA-GetRate1st10-6-25
 *
 *
 */
rule AltA-GetRate1st10-6-25()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-25




alias(rule, AltA-GetRate1st10-6-26, "AltA-GetRate1st 10-6.26");

/* ==========================================================================
 * AltA-GetRate1st10-6-26
 *
 *
 */
rule AltA-GetRate1st10-6-26()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-26




alias(rule, AltA-GetRate1st10-6-27, "AltA-GetRate1st 10-6.27");

/* ==========================================================================
 * AltA-GetRate1st10-6-27
 *
 *
 */
rule AltA-GetRate1st10-6-27()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-27




alias(rule, AltA-GetRate1st10-6-28, "AltA-GetRate1st 10-6.28");

/* ==========================================================================
 * AltA-GetRate1st10-6-28
 *
 *
 */
rule AltA-GetRate1st10-6-28()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-28




alias(rule, AltA-GetRate1st10-6-29, "AltA-GetRate1st 10-6.29");

/* ==========================================================================
 * AltA-GetRate1st10-6-29
 *
 *
 */
rule AltA-GetRate1st10-6-29()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 1PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-29




alias(rule, AltA-GetRate1st10-6-3, "AltA-GetRate1st 10-6.3");

/* ==========================================================================
 * AltA-GetRate1st10-6-3
 *
 *
 */
rule AltA-GetRate1st10-6-3()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-3




alias(rule, AltA-GetRate1st10-6-30, "AltA-GetRate1st 10-6.30");

/* ==========================================================================
 * AltA-GetRate1st10-6-30
 *
 *
 */
rule AltA-GetRate1st10-6-30()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 1PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-30




alias(rule, AltA-GetRate1st10-6-31, "AltA-GetRate1st 10-6.31");

/* ==========================================================================
 * AltA-GetRate1st10-6-31
 *
 *
 */
rule AltA-GetRate1st10-6-31()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 1PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-31




alias(rule, AltA-GetRate1st10-6-32, "AltA-GetRate1st 10-6.32");

/* ==========================================================================
 * AltA-GetRate1st10-6-32
 *
 *
 */
rule AltA-GetRate1st10-6-32()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 1PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-32




alias(rule, AltA-GetRate1st10-6-33, "AltA-GetRate1st 10-6.33");

/* ==========================================================================
 * AltA-GetRate1st10-6-33
 *
 *
 */
rule AltA-GetRate1st10-6-33()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 2PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-33




alias(rule, AltA-GetRate1st10-6-34, "AltA-GetRate1st 10-6.34");

/* ==========================================================================
 * AltA-GetRate1st10-6-34
 *
 *
 */
rule AltA-GetRate1st10-6-34()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 2PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-34




alias(rule, AltA-GetRate1st10-6-35, "AltA-GetRate1st 10-6.35");

/* ==========================================================================
 * AltA-GetRate1st10-6-35
 *
 *
 */
rule AltA-GetRate1st10-6-35()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 2PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-35




alias(rule, AltA-GetRate1st10-6-36, "AltA-GetRate1st 10-6.36");

/* ==========================================================================
 * AltA-GetRate1st10-6-36
 *
 *
 */
rule AltA-GetRate1st10-6-36()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 2PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-36




alias(rule, AltA-GetRate1st10-6-37, "AltA-GetRate1st 10-6.37");

/* ==========================================================================
 * AltA-GetRate1st10-6-37
 *
 *
 */
rule AltA-GetRate1st10-6-37()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 3PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-37




alias(rule, AltA-GetRate1st10-6-38, "AltA-GetRate1st 10-6.38");

/* ==========================================================================
 * AltA-GetRate1st10-6-38
 *
 *
 */
rule AltA-GetRate1st10-6-38()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 3PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-38




alias(rule, AltA-GetRate1st10-6-39, "AltA-GetRate1st 10-6.39");

/* ==========================================================================
 * AltA-GetRate1st10-6-39
 *
 *
 */
rule AltA-GetRate1st10-6-39()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 3PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-39




alias(rule, AltA-GetRate1st10-6-4, "AltA-GetRate1st 10-6.4");

/* ==========================================================================
 * AltA-GetRate1st10-6-4
 *
 *
 */
rule AltA-GetRate1st10-6-4()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-4




alias(rule, AltA-GetRate1st10-6-40, "AltA-GetRate1st 10-6.40");

/* ==========================================================================
 * AltA-GetRate1st10-6-40
 *
 *
 */
rule AltA-GetRate1st10-6-40()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 3PP COR LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-40




alias(rule, AltA-GetRate1st10-6-41, "AltA-GetRate1st 10-6.41");

/* ==========================================================================
 * AltA-GetRate1st10-6-41
 *
 *
 */
rule AltA-GetRate1st10-6-41()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-41




alias(rule, AltA-GetRate1st10-6-42, "AltA-GetRate1st 10-6.42");

/* ==========================================================================
 * AltA-GetRate1st10-6-42
 *
 *
 */
rule AltA-GetRate1st10-6-42()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-42




alias(rule, AltA-GetRate1st10-6-43, "AltA-GetRate1st 10-6.43");

/* ==========================================================================
 * AltA-GetRate1st10-6-43
 *
 *
 */
rule AltA-GetRate1st10-6-43()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-43




alias(rule, AltA-GetRate1st10-6-44, "AltA-GetRate1st 10-6.44");

/* ==========================================================================
 * AltA-GetRate1st10-6-44
 *
 *
 */
rule AltA-GetRate1st10-6-44()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-44




alias(rule, AltA-GetRate1st10-6-45, "AltA-GetRate1st 10-6.45");

/* ==========================================================================
 * AltA-GetRate1st10-6-45
 *
 *
 */
rule AltA-GetRate1st10-6-45()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-45




alias(rule, AltA-GetRate1st10-6-46, "AltA-GetRate1st 10-6.46");

/* ==========================================================================
 * AltA-GetRate1st10-6-46
 *
 *
 */
rule AltA-GetRate1st10-6-46()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-46




alias(rule, AltA-GetRate1st10-6-47, "AltA-GetRate1st 10-6.47");

/* ==========================================================================
 * AltA-GetRate1st10-6-47
 *
 *
 */
rule AltA-GetRate1st10-6-47()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-47




alias(rule, AltA-GetRate1st10-6-48, "AltA-GetRate1st 10-6.48");

/* ==========================================================================
 * AltA-GetRate1st10-6-48
 *
 *
 */
rule AltA-GetRate1st10-6-48()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-48




alias(rule, AltA-GetRate1st10-6-49, "AltA-GetRate1st 10-6.49");

/* ==========================================================================
 * AltA-GetRate1st10-6-49
 *
 *
 */
rule AltA-GetRate1st10-6-49()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 1PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-49




alias(rule, AltA-GetRate1st10-6-5, "AltA-GetRate1st 10-6.5");

/* ==========================================================================
 * AltA-GetRate1st10-6-5
 *
 *
 */
rule AltA-GetRate1st10-6-5()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-5




alias(rule, AltA-GetRate1st10-6-50, "AltA-GetRate1st 10-6.50");

/* ==========================================================================
 * AltA-GetRate1st10-6-50
 *
 *
 */
rule AltA-GetRate1st10-6-50()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 1PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-50




alias(rule, AltA-GetRate1st10-6-51, "AltA-GetRate1st 10-6.51");

/* ==========================================================================
 * AltA-GetRate1st10-6-51
 *
 *
 */
rule AltA-GetRate1st10-6-51()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 1PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-51




alias(rule, AltA-GetRate1st10-6-52, "AltA-GetRate1st 10-6.52");

/* ==========================================================================
 * AltA-GetRate1st10-6-52
 *
 *
 */
rule AltA-GetRate1st10-6-52()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 1PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-52




alias(rule, AltA-GetRate1st10-6-53, "AltA-GetRate1st 10-6.53");

/* ==========================================================================
 * AltA-GetRate1st10-6-53
 *
 *
 */
rule AltA-GetRate1st10-6-53()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 2PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-53




alias(rule, AltA-GetRate1st10-6-54, "AltA-GetRate1st 10-6.54");

/* ==========================================================================
 * AltA-GetRate1st10-6-54
 *
 *
 */
rule AltA-GetRate1st10-6-54()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 2PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-54




alias(rule, AltA-GetRate1st10-6-55, "AltA-GetRate1st 10-6.55");

/* ==========================================================================
 * AltA-GetRate1st10-6-55
 *
 *
 */
rule AltA-GetRate1st10-6-55()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 2PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-55




alias(rule, AltA-GetRate1st10-6-56, "AltA-GetRate1st 10-6.56");

/* ==========================================================================
 * AltA-GetRate1st10-6-56
 *
 *
 */
rule AltA-GetRate1st10-6-56()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 2PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-56




alias(rule, AltA-GetRate1st10-6-57, "AltA-GetRate1st 10-6.57");

/* ==========================================================================
 * AltA-GetRate1st10-6-57
 *
 *
 */
rule AltA-GetRate1st10-6-57()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 3PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-57




alias(rule, AltA-GetRate1st10-6-58, "AltA-GetRate1st 10-6.58");

/* ==========================================================================
 * AltA-GetRate1st10-6-58
 *
 *
 */
rule AltA-GetRate1st10-6-58()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 3PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-58




alias(rule, AltA-GetRate1st10-6-59, "AltA-GetRate1st 10-6.59");

/* ==========================================================================
 * AltA-GetRate1st10-6-59
 *
 *
 */
rule AltA-GetRate1st10-6-59()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 3PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-59




alias(rule, AltA-GetRate1st10-6-6, "AltA-GetRate1st 10-6.6");

/* ==========================================================================
 * AltA-GetRate1st10-6-6
 *
 *
 */
rule AltA-GetRate1st10-6-6()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-6




alias(rule, AltA-GetRate1st10-6-60, "AltA-GetRate1st 10-6.60");

/* ==========================================================================
 * AltA-GetRate1st10-6-60
 *
 *
 */
rule AltA-GetRate1st10-6-60()
    if(
        (pUserType == "Retention") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 3PP RTN LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-60




alias(rule, AltA-GetRate1st10-6-61, "AltA-GetRate1st 10-6.61");

/* ==========================================================================
 * AltA-GetRate1st10-6-61
 *
 *
 */
rule AltA-GetRate1st10-6-61()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-61




alias(rule, AltA-GetRate1st10-6-62, "AltA-GetRate1st 10-6.62");

/* ==========================================================================
 * AltA-GetRate1st10-6-62
 *
 *
 */
rule AltA-GetRate1st10-6-62()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-62




alias(rule, AltA-GetRate1st10-6-63, "AltA-GetRate1st 10-6.63");

/* ==========================================================================
 * AltA-GetRate1st10-6-63
 *
 *
 */
rule AltA-GetRate1st10-6-63()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-63




alias(rule, AltA-GetRate1st10-6-64, "AltA-GetRate1st 10-6.64");

/* ==========================================================================
 * AltA-GetRate1st10-6-64
 *
 *
 */
rule AltA-GetRate1st10-6-64()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-64




alias(rule, AltA-GetRate1st10-6-65, "AltA-GetRate1st 10-6.65");

/* ==========================================================================
 * AltA-GetRate1st10-6-65
 *
 *
 */
rule AltA-GetRate1st10-6-65()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-65




alias(rule, AltA-GetRate1st10-6-66, "AltA-GetRate1st 10-6.66");

/* ==========================================================================
 * AltA-GetRate1st10-6-66
 *
 *
 */
rule AltA-GetRate1st10-6-66()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-66




alias(rule, AltA-GetRate1st10-6-67, "AltA-GetRate1st 10-6.67");

/* ==========================================================================
 * AltA-GetRate1st10-6-67
 *
 *
 */
rule AltA-GetRate1st10-6-67()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-67




alias(rule, AltA-GetRate1st10-6-68, "AltA-GetRate1st 10-6.68");

/* ==========================================================================
 * AltA-GetRate1st10-6-68
 *
 *
 */
rule AltA-GetRate1st10-6-68()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-68




alias(rule, AltA-GetRate1st10-6-69, "AltA-GetRate1st 10-6.69");

/* ==========================================================================
 * AltA-GetRate1st10-6-69
 *
 *
 */
rule AltA-GetRate1st10-6-69()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 1PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-69




alias(rule, AltA-GetRate1st10-6-7, "AltA-GetRate1st 10-6.7");

/* ==========================================================================
 * AltA-GetRate1st10-6-7
 *
 *
 */
rule AltA-GetRate1st10-6-7()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-7




alias(rule, AltA-GetRate1st10-6-70, "AltA-GetRate1st 10-6.70");

/* ==========================================================================
 * AltA-GetRate1st10-6-70
 *
 *
 */
rule AltA-GetRate1st10-6-70()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 1PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-70




alias(rule, AltA-GetRate1st10-6-71, "AltA-GetRate1st 10-6.71");

/* ==========================================================================
 * AltA-GetRate1st10-6-71
 *
 *
 */
rule AltA-GetRate1st10-6-71()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 1PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-71




alias(rule, AltA-GetRate1st10-6-72, "AltA-GetRate1st 10-6.72");

/* ==========================================================================
 * AltA-GetRate1st10-6-72
 *
 *
 */
rule AltA-GetRate1st10-6-72()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 1PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-72




alias(rule, AltA-GetRate1st10-6-73, "AltA-GetRate1st 10-6.73");

/* ==========================================================================
 * AltA-GetRate1st10-6-73
 *
 *
 */
rule AltA-GetRate1st10-6-73()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 2PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-73




alias(rule, AltA-GetRate1st10-6-74, "AltA-GetRate1st 10-6.74");

/* ==========================================================================
 * AltA-GetRate1st10-6-74
 *
 *
 */
rule AltA-GetRate1st10-6-74()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 2PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-74




alias(rule, AltA-GetRate1st10-6-75, "AltA-GetRate1st 10-6.75");

/* ==========================================================================
 * AltA-GetRate1st10-6-75
 *
 *
 */
rule AltA-GetRate1st10-6-75()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 2PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-75




alias(rule, AltA-GetRate1st10-6-76, "AltA-GetRate1st 10-6.76");

/* ==========================================================================
 * AltA-GetRate1st10-6-76
 *
 *
 */
rule AltA-GetRate1st10-6-76()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 2PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-76




alias(rule, AltA-GetRate1st10-6-77, "AltA-GetRate1st 10-6.77");

/* ==========================================================================
 * AltA-GetRate1st10-6-77
 *
 *
 */
rule AltA-GetRate1st10-6-77()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 3PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-77




alias(rule, AltA-GetRate1st10-6-78, "AltA-GetRate1st 10-6.78");

/* ==========================================================================
 * AltA-GetRate1st10-6-78
 *
 *
 */
rule AltA-GetRate1st10-6-78()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 3PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-78




alias(rule, AltA-GetRate1st10-6-79, "AltA-GetRate1st 10-6.79");

/* ==========================================================================
 * AltA-GetRate1st10-6-79
 *
 *
 */
rule AltA-GetRate1st10-6-79()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 3PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-79




alias(rule, AltA-GetRate1st10-6-8, "AltA-GetRate1st 10-6.8");

/* ==========================================================================
 * AltA-GetRate1st10-6-8
 *
 *
 */
rule AltA-GetRate1st10-6-8()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-8




alias(rule, AltA-GetRate1st10-6-80, "AltA-GetRate1st 10-6.80");

/* ==========================================================================
 * AltA-GetRate1st10-6-80
 *
 *
 */
rule AltA-GetRate1st10-6-80()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 3PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-80




alias(rule, AltA-GetRate1st10-6-81, "AltA-GetRate1st 10-6.81");

/* ==========================================================================
 * AltA-GetRate1st10-6-81
 *
 *
 */
rule AltA-GetRate1st10-6-81()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-81




alias(rule, AltA-GetRate1st10-6-82, "AltA-GetRate1st 10-6.82");

/* ==========================================================================
 * AltA-GetRate1st10-6-82
 *
 *
 */
rule AltA-GetRate1st10-6-82()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-82




alias(rule, AltA-GetRate1st10-6-83, "AltA-GetRate1st 10-6.83");

/* ==========================================================================
 * AltA-GetRate1st10-6-83
 *
 *
 */
rule AltA-GetRate1st10-6-83()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-83




alias(rule, AltA-GetRate1st10-6-84, "AltA-GetRate1st 10-6.84");

/* ==========================================================================
 * AltA-GetRate1st10-6-84
 *
 *
 */
rule AltA-GetRate1st10-6-84()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 0) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-84




alias(rule, AltA-GetRate1st10-6-85, "AltA-GetRate1st 10-6.85");

/* ==========================================================================
 * AltA-GetRate1st10-6-85
 *
 *
 */
rule AltA-GetRate1st10-6-85()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day NPP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-85




alias(rule, AltA-GetRate1st10-6-86, "AltA-GetRate1st 10-6.86");

/* ==========================================================================
 * AltA-GetRate1st10-6-86
 *
 *
 */
rule AltA-GetRate1st10-6-86()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day NPP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-86




alias(rule, AltA-GetRate1st10-6-87, "AltA-GetRate1st 10-6.87");

/* ==========================================================================
 * AltA-GetRate1st10-6-87
 *
 *
 */
rule AltA-GetRate1st10-6-87()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day NPP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-87




alias(rule, AltA-GetRate1st10-6-88, "AltA-GetRate1st 10-6.88");

/* ==========================================================================
 * AltA-GetRate1st10-6-88
 *
 *
 */
rule AltA-GetRate1st10-6-88()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 4) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day NPP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-88




alias(rule, AltA-GetRate1st10-6-89, "AltA-GetRate1st 10-6.89");

/* ==========================================================================
 * AltA-GetRate1st10-6-89
 *
 *
 */
rule AltA-GetRate1st10-6-89()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 1PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-89




alias(rule, AltA-GetRate1st10-6-9, "AltA-GetRate1st 10-6.9");

/* ==========================================================================
 * AltA-GetRate1st10-6-9
 *
 *
 */
rule AltA-GetRate1st10-6-9()
    if(
        (pUserType == "Broker") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T1")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 1PP BRO LK1", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-9




alias(rule, AltA-GetRate1st10-6-90, "AltA-GetRate1st 10-6.90");

/* ==========================================================================
 * AltA-GetRate1st10-6-90
 *
 *
 */
rule AltA-GetRate1st10-6-90()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 1PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-90




alias(rule, AltA-GetRate1st10-6-91, "AltA-GetRate1st 10-6.91");

/* ==========================================================================
 * AltA-GetRate1st10-6-91
 *
 *
 */
rule AltA-GetRate1st10-6-91()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 1PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-91




alias(rule, AltA-GetRate1st10-6-92, "AltA-GetRate1st 10-6.92");

/* ==========================================================================
 * AltA-GetRate1st10-6-92
 *
 *
 */
rule AltA-GetRate1st10-6-92()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 12) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 1PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-92




alias(rule, AltA-GetRate1st10-6-93, "AltA-GetRate1st 10-6.93");

/* ==========================================================================
 * AltA-GetRate1st10-6-93
 *
 *
 */
rule AltA-GetRate1st10-6-93()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 2PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-93




alias(rule, AltA-GetRate1st10-6-94, "AltA-GetRate1st 10-6.94");

/* ==========================================================================
 * AltA-GetRate1st10-6-94
 *
 *
 */
rule AltA-GetRate1st10-6-94()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 2PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-94




alias(rule, AltA-GetRate1st10-6-95, "AltA-GetRate1st 10-6.95");

/* ==========================================================================
 * AltA-GetRate1st10-6-95
 *
 *
 */
rule AltA-GetRate1st10-6-95()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 2PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-95




alias(rule, AltA-GetRate1st10-6-96, "AltA-GetRate1st 10-6.96");

/* ==========================================================================
 * AltA-GetRate1st10-6-96
 *
 *
 */
rule AltA-GetRate1st10-6-96()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 24) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 60) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 60Day 2PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-96




alias(rule, AltA-GetRate1st10-6-97, "AltA-GetRate1st 10-6.97");

/* ==========================================================================
 * AltA-GetRate1st10-6-97
 *
 *
 */
rule AltA-GetRate1st10-6-97()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 15) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 15Day 3PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-97




alias(rule, AltA-GetRate1st10-6-98, "AltA-GetRate1st 10-6.98");

/* ==========================================================================
 * AltA-GetRate1st10-6-98
 *
 *
 */
rule AltA-GetRate1st10-6-98()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 30) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 30Day 3PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-98




alias(rule, AltA-GetRate1st10-6-99, "AltA-GetRate1st 10-6.99");

/* ==========================================================================
 * AltA-GetRate1st10-6-99
 *
 *
 */
rule AltA-GetRate1st10-6-99()
    if(
        (pUserType == "Correspondent") &&
		(PrepayTerm1st == 36) &&
		(amortType1st == "10/6 Mo Libor") &&
		(lockPeriod1st == 45) &&
		(pTierFlag == "T2")
      )
    then
        rate1st = lookup("AltA-Rate1st 10-6 45Day 3PP COR LK2", FinalPrice1st, globalParam);
		

    end
end	// rule AltA-GetRate1st10-6-99





/* ==========================================================================
 * AltA-IneligibleMixedUseLock
 *
 *
 */
rule AltA-IneligibleMixedUseLock()
    if(
        (pZoning == "MixedUse")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Mixed-Use Property is not an eligible property type.");

    end
end	// rule AltA-IneligibleMixedUseLock




alias(rule, AltA-MaxDTIPICalc1, "AltA-Max DTI PI Calc 1");

/* ==========================================================================
 * AltA-MaxDTIPICalc1
 *
 *
 */
rule AltA-MaxDTIPICalc1()
    if(
        (cvMaxDTIPI == "NA")
      )
    then
        

    end
end	// rule AltA-MaxDTIPICalc1




alias(rule, AltA-MaxDTIPICalc2, "AltA-Max DTI PI Calc 2");

/* ==========================================================================
 * AltA-MaxDTIPICalc2
 *
 *
 */
rule AltA-MaxDTIPICalc2()
    if(
        (pOccupancy == "PrimaryResidence")
      )
    then
        cvMaxDTIPI = ((maxDTI * TotalIncome) / 100) - (pi2nd + ProposedExpenses + ConsumerDebt-Proposed + TotalNegCashFlow);
		

    end
end	// rule AltA-MaxDTIPICalc2




alias(rule, AltA-MaxDTIPICalc3, "AltA-Max DTI PI Calc 3");

/* ==========================================================================
 * AltA-MaxDTIPICalc3
 *
 *
 */
rule AltA-MaxDTIPICalc3()
    if(
        (pOccupancy != "PrimaryResidence") &&
		(TotalCashFlow < 0)
      )
    then
        cvMaxDTIPI = ((maxDTI * TotalIncome) / 100) + (pSubjectPropertyNetRent75 + OtherPropCashFlow) - (ProposedHousingCost + ConsumerDebt-Proposed + pi2nd + ProposedExpenses);
		

    end
end	// rule AltA-MaxDTIPICalc3




alias(rule, AltA-MaxPrice1mmLnAmtBRO, "AltA-MaxPrice1mmLnAmt BRO");

/* ==========================================================================
 * AltA-MaxPrice1mmLnAmtBRO
 *
 *
 */
rule AltA-MaxPrice1mmLnAmtBRO()
    if(
        (pUserType == "Broker")
      )
    then
        maxPrice1st = lookup("G-MaxPrice1mmLnAmt BRO", pLoanAmount, globalParam);
		

    end
end	// rule AltA-MaxPrice1mmLnAmtBRO




alias(rule, AltA-MaxPrice1mmLnAmtCOR, "AltA-MaxPrice1mmLnAmt COR");

/* ==========================================================================
 * AltA-MaxPrice1mmLnAmtCOR
 *
 *
 */
rule AltA-MaxPrice1mmLnAmtCOR()
    if(
        (pUserType == "Correspondent")
      )
    then
        maxPrice1st = lookup("G-MaxPrice1mmLnAmt COR", pLoanAmount, globalParam);
		

    end
end	// rule AltA-MaxPrice1mmLnAmtCOR




alias(rule, AltA-MaxPrice1mmLnAmtRTN, "AltA-MaxPrice1mmLnAmt RTN");

/* ==========================================================================
 * AltA-MaxPrice1mmLnAmtRTN
 *
 *
 */
rule AltA-MaxPrice1mmLnAmtRTN()
    if(
        (pUserType == "Retention")
      )
    then
        maxPrice1st = lookup("G-MaxPrice1mmLnAmt RTN", pLoanAmount, globalParam);
		

    end
end	// rule AltA-MaxPrice1mmLnAmtRTN




alias(rule, AltA-MaxPrice1stBROT1, "AltA-MaxPrice1st BRO T1");

/* ==========================================================================
 * AltA-MaxPrice1stBROT1
 *
 *
 */
rule AltA-MaxPrice1stBROT1()
    if(
        (pUserType == "Broker")
      )
    then
        maxPrice1st = lookup("AltA-MaxPrice1st BRO LK1", amortType1st, PrepayTerm1st);
		MaxPrice1stNOO = lookup("AltA-MaxPrice1st NOO BRO LK1", pOccupancy, globalParam);
		MaxPrice1stLnAmt = lookup("AltA-MaxPrice1st Ln Amt BRO LK1", loanAmount1st, globalParam);
		MaxPrice1stDocFICO = lookup("AltA-MaxPrice1st DocFICO BRO LK1", pDocumentType, creditScore);
		

    end
end	// rule AltA-MaxPrice1stBROT1




alias(rule, AltA-MaxPrice1stCORT1, "AltA-MaxPrice1st COR T1");

/* ==========================================================================
 * AltA-MaxPrice1stCORT1
 *
 *
 */
rule AltA-MaxPrice1stCORT1()
    if(
        (pUserType == "Correspondent")
      )
    then
        maxPrice1st = lookup("AltA-MaxPrice1st COR LK1", amortType1st, PrepayTerm1st);
		MaxPrice1stNOO = lookup("AltA-MaxPrice1st NOO COR LK1", pOccupancy, globalParam);
		MaxPrice1stLnAmt = lookup("AltA-MaxPrice1st Ln Amt COR LK1", loanAmount1st, globalParam);
		MaxPrice1stDocFICO = lookup("AltA-MaxPrice1st DocFICO COR LK1", pDocumentType, creditScore);
		

    end
end	// rule AltA-MaxPrice1stCORT1




alias(rule, AltA-MaxPrice1stRTNT1, "AltA-MaxPrice1st RTN T1");

/* ==========================================================================
 * AltA-MaxPrice1stRTNT1
 *
 *
 */
rule AltA-MaxPrice1stRTNT1()
    if(
        (pUserType == "Retention")
      )
    then
        maxPrice1st = lookup("AltA-MaxPrice1st RTN LK1", amortType1st, PrepayTerm1st);
		MaxPrice1stNOO = lookup("AltA-MaxPrice1st NOO RTN LK1", pOccupancy, globalParam);
		MaxPrice1stLnAmt = lookup("AltA-MaxPrice1st Ln Amt RTN LK1", loanAmount1st, globalParam);
		MaxPrice1stDocFICO = lookup("AltA-MaxPrice1st DocFICO RTN LK1", pDocumentType, creditScore);
		

    end
end	// rule AltA-MaxPrice1stRTNT1




alias(rule, AltA-MaxPymtShockPICalc1, "AltA-Max Pymt Shock PI Calc 1");

/* ==========================================================================
 * AltA-MaxPymtShockPICalc1
 *
 *
 */
rule AltA-MaxPymtShockPICalc1()
    if(
        (cvMaxPaymentShockPI == "NA")
      )
    then
        

    end
end	// rule AltA-MaxPymtShockPICalc1




alias(rule, AltA-MaxPymtShockPICalc2, "AltA-Max Pymt Shock PI Calc 2");

/* ==========================================================================
 * AltA-MaxPymtShockPICalc2
 *
 *
 */
rule AltA-MaxPymtShockPICalc2()
    if(
        (pNumberOfUnits >= 2) &&
		(pNumberOfUnits <= 4) &&
		(SubPropCashFlow > 0)
      )
    then
        cvMaxPaymentShockPI = (MaxPaymentShock * TotalCurrentHousingExpenses) + SubPropCashFlow - (pi2nd + ProposedExpenses);
		

    end
end	// rule AltA-MaxPymtShockPICalc2




alias(rule, AltA-MaxPymtShockPICalc3, "AltA-Max Pymt Shock PI Calc 3");

/* ==========================================================================
 * AltA-MaxPymtShockPICalc3
 *
 *
 */
rule AltA-MaxPymtShockPICalc3()
    if(
        (pLoanAmount > 0)
      )
    then
        cvMaxPaymentShockPI = (MaxPaymentShock * TotalCurrentHousingExpenses) - (pi2nd + ProposedExpenses);
		

    end
end	// rule AltA-MaxPymtShockPICalc3




alias(rule, AltA-NoMIFlagSetRule, "AltA-No MI Flag Set Rule");

/* ==========================================================================
 * AltA-NoMIFlagSetRule
 *
 *
 */
rule AltA-NoMIFlagSetRule()
    if(
        (pNoMI == "Y")
      )
    then
        NoMIFlag = "Y";
		

    end
end	// rule AltA-NoMIFlagSetRule




alias(rule, AltA-PaymentShockCalc1, "AltA-Payment Shock Calc 1");

/* ==========================================================================
 * AltA-PaymentShockCalc1
 *
 *
 */
rule AltA-PaymentShockCalc1()
    if(
        (MaxPaymentShock == -1)
      )
    then
        cvMaxPaymentShockPI = "NA";
		

    end
end	// rule AltA-PaymentShockCalc1




alias(rule, AltA-PaymentShockCalc2, "AltA-Payment Shock Calc 2");

/* ==========================================================================
 * AltA-PaymentShockCalc2
 *
 *
 */
rule AltA-PaymentShockCalc2()
    if(
        (pDocumentType != "No Ratio") &&
		(pNumberOfUnits >= 2) &&
		(pNumberOfUnits <= 4) &&
		(SubPropCashFlow > 0)
      )
    then
        PaymentShock = (PITI - SubPropCashFlow) / TotalCurrentHousingExpenses;
		

    end
end	// rule AltA-PaymentShockCalc2




alias(rule, AltA-PaymentShockCalc3, "AltA-Payment Shock Calc 3");

/* ==========================================================================
 * AltA-PaymentShockCalc3
 *
 *
 */
rule AltA-PaymentShockCalc3()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        PaymentShock = PITI / TotalCurrentHousingExpenses;
		

    end
end	// rule AltA-PaymentShockCalc3




alias(rule, AltA-PriceAdj40due30BROT1, "AltA-PriceAdj 40due30 BRO T1");

/* ==========================================================================
 * AltA-PriceAdj40due30BROT1
 *
 *
 */
rule AltA-PriceAdj40due30BROT1()
    if(
        (pUserType == "Broker")
      )
    then
        priceAdj-40DueIn30 = lookup("AltA-PriceAdj 40due30 BRO LK1", f40due30, CLTV);
		

    end
end	// rule AltA-PriceAdj40due30BROT1




alias(rule, AltA-PriceAdj40due30BROT1-SubF, "AltA-PriceAdj 40due30 BRO T1-SubF");

/* ==========================================================================
 * AltA-PriceAdj40due30BROT1-SubF
 *
 *
 */
rule AltA-PriceAdj40due30BROT1-SubF()
    if(
        (pUserType == "Broker") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-40DueIn30 = lookup("AltA-PriceAdjCombo 40due30 BRO LK1", f40due30, CLTV);
		

    end
end	// rule AltA-PriceAdj40due30BROT1-SubF




alias(rule, AltA-PriceAdj40due30CORT1, "AltA-PriceAdj 40due30 COR T1");

/* ==========================================================================
 * AltA-PriceAdj40due30CORT1
 *
 *
 */
rule AltA-PriceAdj40due30CORT1()
    if(
        (pUserType == "Correspondent")
      )
    then
        priceAdj-40DueIn30 = lookup("AltA-PriceAdj 40due30 COR LK1", f40due30, CLTV);
		

    end
end	// rule AltA-PriceAdj40due30CORT1




alias(rule, AltA-PriceAdj40due30CORT1-SubF, "AltA-PriceAdj 40due30 COR T1-SubF");

/* ==========================================================================
 * AltA-PriceAdj40due30CORT1-SubF
 *
 *
 */
rule AltA-PriceAdj40due30CORT1-SubF()
    if(
        (pUserType == "Correspondent") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-40DueIn30 = lookup("AltA-PriceAdjCombo 40due30 COR LK1", f40due30, CLTV);
		

    end
end	// rule AltA-PriceAdj40due30CORT1-SubF




alias(rule, AltA-PriceAdj40due30RTNT1, "AltA-PriceAdj 40due30 RTN T1");

/* ==========================================================================
 * AltA-PriceAdj40due30RTNT1
 *
 *
 */
rule AltA-PriceAdj40due30RTNT1()
    if(
        (pUserType == "Retention")
      )
    then
        priceAdj-40DueIn30 = lookup("AltA-PriceAdj 40due30 RTN LK1", f40due30, CLTV);
		

    end
end	// rule AltA-PriceAdj40due30RTNT1




alias(rule, AltA-PriceAdj40due30RTNT1-SubF, "AltA-PriceAdj 40due30 RTN T1-SubF");

/* ==========================================================================
 * AltA-PriceAdj40due30RTNT1-SubF
 *
 *
 */
rule AltA-PriceAdj40due30RTNT1-SubF()
    if(
        (pUserType == "Retention") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-40DueIn30 = lookup("AltA-PriceAdjCombo 40due30 RTN LK1", f40due30, CLTV);
		

    end
end	// rule AltA-PriceAdj40due30RTNT1-SubF




alias(rule, AltA-PriceAdjComboNoEscrowBROT1-SubF, "AltA-PriceAdjCombo NoEscrow BRO T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjComboNoEscrowBROT1-SubF
 *
 *
 */
rule AltA-PriceAdjComboNoEscrowBROT1-SubF()
    if(
        (pSubjectPropertyState != "CA") &&
		(pUserType == "Broker") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-WaiveEscrow = lookup("AltA-PriceAdjCombo No Escrow BRO LK1", pWaiveEscrow, CLTV);
		

    end
end	// rule AltA-PriceAdjComboNoEscrowBROT1-SubF




alias(rule, AltA-PriceAdjDocTypeLT660BROT1, "AltA-PriceAdj DocType LT660 BRO T1");

/* ==========================================================================
 * AltA-PriceAdjDocTypeLT660BROT1
 *
 *
 */
rule AltA-PriceAdjDocTypeLT660BROT1()
    if(
        (pUserType == "Broker") &&
		(creditScore < 660)
      )
    then
        priceAdj-DocumentType = lookup("AltA-PriceAdj Doc Type 660 BRO LK1", pDocumentType, CLTV);
		

    end
end	// rule AltA-PriceAdjDocTypeLT660BROT1




alias(rule, AltA-PriceAdjDocTypeLT660BROT1-SubF, "AltA-PriceAdj DocType LT660 BRO T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjDocTypeLT660BROT1-SubF
 *
 *
 */
rule AltA-PriceAdjDocTypeLT660BROT1-SubF()
    if(
        (pUserType == "Broker") &&
		(creditScore < 660) &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-DocumentType = lookup("AltA-PriceAdjCombo Doc Type 660 BRO LK1", pDocumentType, CLTV);
		

    end
end	// rule AltA-PriceAdjDocTypeLT660BROT1-SubF




alias(rule, AltA-PriceAdjDocTypeLT660CORT1, "AltA-PriceAdj DocType LT660 COR T1");

/* ==========================================================================
 * AltA-PriceAdjDocTypeLT660CORT1
 *
 *
 */
rule AltA-PriceAdjDocTypeLT660CORT1()
    if(
        (pUserType == "Correspondent") &&
		(creditScore < 660)
      )
    then
        priceAdj-DocumentType = lookup("AltA-PriceAdj Doc Type 660 COR LK1", pDocumentType, CLTV);
		

    end
end	// rule AltA-PriceAdjDocTypeLT660CORT1




alias(rule, AltA-PriceAdjDocTypeLT660CORT1-SubF, "AltA-PriceAdj DocType LT660 COR T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjDocTypeLT660CORT1-SubF
 *
 *
 */
rule AltA-PriceAdjDocTypeLT660CORT1-SubF()
    if(
        (pUserType == "Correspondent") &&
		(creditScore < 660) &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-DocumentType = lookup("AltA-PriceAdjCombo Doc Type 660 COR LK1", pDocumentType, CLTV);
		

    end
end	// rule AltA-PriceAdjDocTypeLT660CORT1-SubF




alias(rule, AltA-PriceAdjDocTypeLT660RTNT1, "AltA-PriceAdj DocType LT660 RTN T1");

/* ==========================================================================
 * AltA-PriceAdjDocTypeLT660RTNT1
 *
 *
 */
rule AltA-PriceAdjDocTypeLT660RTNT1()
    if(
        (pUserType == "Retention") &&
		(creditScore < 660)
      )
    then
        priceAdj-DocumentType = lookup("AltA-PriceAdj Doc Type 660 RTN LK1", pDocumentType, CLTV);
		

    end
end	// rule AltA-PriceAdjDocTypeLT660RTNT1




alias(rule, AltA-PriceAdjDocTypeLT660RTNT1-SubF, "AltA-PriceAdj DocType LT660 RTN T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjDocTypeLT660RTNT1-SubF
 *
 *
 */
rule AltA-PriceAdjDocTypeLT660RTNT1-SubF()
    if(
        (pUserType == "Retention") &&
		(creditScore < 660) &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-DocumentType = lookup("AltA-PriceAdjCombo Doc Type 660 RTN LK1", pDocumentType, CLTV);
		

    end
end	// rule AltA-PriceAdjDocTypeLT660RTNT1-SubF




alias(rule, AltA-PriceAdjFxdLnAmtBROT1, "AltA-PriceAdj Fxd LnAmt BRO T1");

/* ==========================================================================
 * AltA-PriceAdjFxdLnAmtBROT1
 *
 *
 */
rule AltA-PriceAdjFxdLnAmtBROT1()
    if(
        ((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed")) &&
		((loanAmount1st >= 100000) &&
		(loanAmount1st <= 417000)) &&
		(pUserType == "Broker")
      )
    then
        priceAdj-LoanAmount = lookup("AltA-PriceAdj LnAmt Fxd BRO LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjFxdLnAmtBROT1




alias(rule, AltA-PriceAdjFxdLnAmtBROT1-SubF, "AltA-PriceAdj Fxd LnAmt BRO T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjFxdLnAmtBROT1-SubF
 *
 *
 */
rule AltA-PriceAdjFxdLnAmtBROT1-SubF()
    if(
        ((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed")) &&
		((loanAmount1st >= 100000) &&
		(loanAmount1st <= 417000)) &&
		(pUserType == "Broker") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-LoanAmount = lookup("AltA-PriceAdjCombo LnAmt Fxd BRO LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjFxdLnAmtBROT1-SubF




alias(rule, AltA-PriceAdjFxdLnAmtCORT1, "AltA-PriceAdj Fxd LnAmt COR T1");

/* ==========================================================================
 * AltA-PriceAdjFxdLnAmtCORT1
 *
 *
 */
rule AltA-PriceAdjFxdLnAmtCORT1()
    if(
        ((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed")) &&
		((loanAmount1st >= 100000) &&
		(loanAmount1st <= 417000)) &&
		(pUserType == "Correspondent")
      )
    then
        priceAdj-LoanAmount = lookup("AltA-PriceAdj LnAmt Fxd COR LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjFxdLnAmtCORT1




alias(rule, AltA-PriceAdjFxdLnAmtCORT1-SubF, "AltA-PriceAdj Fxd LnAmt COR T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjFxdLnAmtCORT1-SubF
 *
 *
 */
rule AltA-PriceAdjFxdLnAmtCORT1-SubF()
    if(
        ((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed")) &&
		((loanAmount1st >= 100000) &&
		(loanAmount1st <= 417000)) &&
		(pUserType == "Correspondent") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-LoanAmount = lookup("AltA-PriceAdjCombo LnAmt Fxd COR LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjFxdLnAmtCORT1-SubF




alias(rule, AltA-PriceAdjFxdLnAmtRTNT1, "AltA-PriceAdj Fxd LnAmt RTN T1");

/* ==========================================================================
 * AltA-PriceAdjFxdLnAmtRTNT1
 *
 *
 */
rule AltA-PriceAdjFxdLnAmtRTNT1()
    if(
        ((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed")) &&
		((loanAmount1st >= 100000) &&
		(loanAmount1st <= 417000)) &&
		(pUserType == "Retention")
      )
    then
        priceAdj-LoanAmount = lookup("AltA-PriceAdj LnAmt Fxd RTN LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjFxdLnAmtRTNT1




alias(rule, AltA-PriceAdjFxdLnAmtRTNT1-SubF, "AltA-PriceAdj Fxd LnAmt RTN T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjFxdLnAmtRTNT1-SubF
 *
 *
 */
rule AltA-PriceAdjFxdLnAmtRTNT1-SubF()
    if(
        ((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed")) &&
		((loanAmount1st >= 100000) &&
		(loanAmount1st <= 417000)) &&
		(pUserType == "Retention") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-LoanAmount = lookup("AltA-PriceAdjCombo LnAmt Fxd RTN LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjFxdLnAmtRTNT1-SubF




alias(rule, AltA-PriceAdjIOFixedBROT1, "AltA-PriceAdj IO Fixed BRO T1");

/* ==========================================================================
 * AltA-PriceAdjIOFixedBROT1
 *
 *
 */
rule AltA-PriceAdjIOFixedBROT1()
    if(
        (pUserType == "Broker") &&
		(pAmortizationType == "IOFixed")
      )
    then
        priceAdj-InterestOnly = lookup("AltA-PriceAdj IO Fixed BRO LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjIOFixedBROT1




alias(rule, AltA-PriceAdjIOFixedBROT1-SubF, "AltA-PriceAdj IO Fixed BRO T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjIOFixedBROT1-SubF
 *
 *
 */
rule AltA-PriceAdjIOFixedBROT1-SubF()
    if(
        (pUserType == "Broker") &&
		(pAmortizationType == "IOFixed") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-InterestOnly = lookup("AltA-PriceAdjCombo IO Fixed BRO LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjIOFixedBROT1-SubF




alias(rule, AltA-PriceAdjIOFixedCORT1, "AltA-PriceAdj IO Fixed COR T1");

/* ==========================================================================
 * AltA-PriceAdjIOFixedCORT1
 *
 *
 */
rule AltA-PriceAdjIOFixedCORT1()
    if(
        (pUserType == "Correspondent") &&
		(pAmortizationType == "IOFixed")
      )
    then
        priceAdj-InterestOnly = lookup("AltA-PriceAdj IO Fixed COR LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjIOFixedCORT1




alias(rule, AltA-PriceAdjIOFixedCORT1-SubF, "AltA-PriceAdj IO Fixed COR T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjIOFixedCORT1-SubF
 *
 *
 */
rule AltA-PriceAdjIOFixedCORT1-SubF()
    if(
        (pUserType == "Correspondent") &&
		(pAmortizationType == "IOFixed") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-InterestOnly = lookup("AltA-PriceAdjCombo IO Fixed COR LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjIOFixedCORT1-SubF




alias(rule, AltA-PriceAdjIOFixedRTNT1, "AltA-PriceAdj IO Fixed RTN T1");

/* ==========================================================================
 * AltA-PriceAdjIOFixedRTNT1
 *
 *
 */
rule AltA-PriceAdjIOFixedRTNT1()
    if(
        (pUserType == "Retention") &&
		(pAmortizationType == "IOFixed")
      )
    then
        priceAdj-InterestOnly = lookup("AltA-PriceAdj IO Fixed RTN LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjIOFixedRTNT1




alias(rule, AltA-PriceAdjIOFixedRTNT1-SubF, "AltA-PriceAdj IO Fixed RTN T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjIOFixedRTNT1-SubF
 *
 *
 */
rule AltA-PriceAdjIOFixedRTNT1-SubF()
    if(
        (pUserType == "Retention") &&
		(pAmortizationType == "IOFixed") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-InterestOnly = lookup("AltA-PriceAdjCombo IO Fixed RTN LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjIOFixedRTNT1-SubF




alias(rule, AltA-PriceAdjNoEscrowBROT1, "AltA-PriceAdj NoEscrow BRO T1");

/* ==========================================================================
 * AltA-PriceAdjNoEscrowBROT1
 *
 *
 */
rule AltA-PriceAdjNoEscrowBROT1()
    if(
        (pSubjectPropertyState != "CA") &&
		(pUserType == "Broker")
      )
    then
        priceAdj-WaiveEscrow = lookup("AltA-PriceAdj No Escrow BRO LK1", pWaiveEscrow, CLTV);
		

    end
end	// rule AltA-PriceAdjNoEscrowBROT1




alias(rule, AltA-PriceAdjNoEscrowCORT1, "AltA-PriceAdj NoEscrow COR T1");

/* ==========================================================================
 * AltA-PriceAdjNoEscrowCORT1
 *
 *
 */
rule AltA-PriceAdjNoEscrowCORT1()
    if(
        (pSubjectPropertyState != "CA") &&
		(pUserType == "Correspondent")
      )
    then
        priceAdj-WaiveEscrow = lookup("AltA-PriceAdj No Escrow COR LK1", pWaiveEscrow, CLTV);
		

    end
end	// rule AltA-PriceAdjNoEscrowCORT1




alias(rule, AltA-PriceAdjNoEscrowCORT1-SubF, "AltA-PriceAdj NoEscrow COR T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjNoEscrowCORT1-SubF
 *
 *
 */
rule AltA-PriceAdjNoEscrowCORT1-SubF()
    if(
        (pSubjectPropertyState != "CA") &&
		(pUserType == "Correspondent") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-WaiveEscrow = lookup("AltA-PriceAdjCombo No Escrow COR LK1", pWaiveEscrow, CLTV);
		

    end
end	// rule AltA-PriceAdjNoEscrowCORT1-SubF




alias(rule, AltA-PriceAdjNoEscrowRTNT1, "AltA-PriceAdj NoEscrow RTN T1");

/* ==========================================================================
 * AltA-PriceAdjNoEscrowRTNT1
 *
 *
 */
rule AltA-PriceAdjNoEscrowRTNT1()
    if(
        (pSubjectPropertyState != "CA") &&
		(pUserType == "Retention")
      )
    then
        priceAdj-WaiveEscrow = lookup("AltA-PriceAdj No Escrow RTN LK1", pWaiveEscrow, CLTV);
		

    end
end	// rule AltA-PriceAdjNoEscrowRTNT1




alias(rule, AltA-PriceAdjNoEscrowRTNT1-SubF, "AltA-PriceAdj NoEscrow RTN T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjNoEscrowRTNT1-SubF
 *
 *
 */
rule AltA-PriceAdjNoEscrowRTNT1-SubF()
    if(
        (pSubjectPropertyState != "CA") &&
		(pUserType == "Retention") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-WaiveEscrow = lookup("AltA-PriceAdjCombo No Escrow RTN LK1", pWaiveEscrow, CLTV);
		

    end
end	// rule AltA-PriceAdjNoEscrowRTNT1-SubF




alias(rule, AltA-PriceAdjNOOLnAmtBROT1, "AltA-PriceAdj NOO LnAmt BRO T1");

/* ==========================================================================
 * AltA-PriceAdjNOOLnAmtBROT1
 *
 *
 */
rule AltA-PriceAdjNOOLnAmtBROT1()
    if(
        (pUserType == "Broker") &&
		(pOccupancy == "Investment")
      )
    then
        priceAdj-NOOLoanAmount = 0;
		priceAdj-Investor = lookup("AltA-PriceAdj NOO BRO LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjNOOLnAmtBROT1




alias(rule, AltA-PriceAdjNOOLnAmtBROT1-SubF, "AltA-PriceAdj NOO LnAmt BRO T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjNOOLnAmtBROT1-SubF
 *
 *
 */
rule AltA-PriceAdjNOOLnAmtBROT1-SubF()
    if(
        (pUserType == "Broker") &&
		(pOccupancy == "Investment") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-NOOLoanAmount = 0;
		

    end
end	// rule AltA-PriceAdjNOOLnAmtBROT1-SubF




alias(rule, AltA-PriceAdjNOOLnAmtCORT1, "AltA-PriceAdj NOO LnAmt COR T1");

/* ==========================================================================
 * AltA-PriceAdjNOOLnAmtCORT1
 *
 *
 */
rule AltA-PriceAdjNOOLnAmtCORT1()
    if(
        (pUserType == "Correspondent") &&
		(pOccupancy == "Investment")
      )
    then
        priceAdj-NOOLoanAmount = 0;
		priceAdj-Investor = lookup("AltA-PriceAdj NOO COR LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjNOOLnAmtCORT1




alias(rule, AltA-PriceAdjNOOLnAmtCORT1-SubF, "AltA-PriceAdj NOO LnAmt COR T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjNOOLnAmtCORT1-SubF
 *
 *
 */
rule AltA-PriceAdjNOOLnAmtCORT1-SubF()
    if(
        (pUserType == "Correspondent") &&
		(pOccupancy == "Investment") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-NOOLoanAmount = 0;
		

    end
end	// rule AltA-PriceAdjNOOLnAmtCORT1-SubF




alias(rule, AltA-PriceAdjNOOLnAmtRTNT1, "AltA-PriceAdj NOO LnAmt RTN T1");

/* ==========================================================================
 * AltA-PriceAdjNOOLnAmtRTNT1
 *
 *
 */
rule AltA-PriceAdjNOOLnAmtRTNT1()
    if(
        (pUserType == "Retention") &&
		(pOccupancy == "Investment")
      )
    then
        priceAdj-NOOLoanAmount = 0;
		priceAdj-Investor = lookup("AltA-PriceAdj NOO RTN LK1", loanAmount1st, CLTV);
		

    end
end	// rule AltA-PriceAdjNOOLnAmtRTNT1




alias(rule, AltA-PriceAdjNOOLnAmtRTNT1-SubF, "AltA-PriceAdj NOO LnAmt RTN T1-SubF");

/* ==========================================================================
 * AltA-PriceAdjNOOLnAmtRTNT1-SubF
 *
 *
 */
rule AltA-PriceAdjNOOLnAmtRTNT1-SubF()
    if(
        (pUserType == "Retention") &&
		(pOccupancy == "Investment") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-NOOLoanAmount = 0;
		

    end
end	// rule AltA-PriceAdjNOOLnAmtRTNT1-SubF




alias(rule, AltA-PriceAdjRegion-NPP-High, "AltA-PriceAdj Region-NPP-High");

/* ==========================================================================
 * AltA-PriceAdjRegion-NPP-High
 *
 *
 */
rule AltA-PriceAdjRegion-NPP-High()
    if(
        (programType == "AltA") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("AltA-RegAdj-NPP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule AltA-PriceAdjRegion-NPP-High




alias(rule, AltA-PriceAdjRegion-NPP-Low, "AltA-PriceAdj Region-NPP-Low");

/* ==========================================================================
 * AltA-PriceAdjRegion-NPP-Low
 *
 *
 */
rule AltA-PriceAdjRegion-NPP-Low()
    if(
        (programType == "AltA") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("AltA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule AltA-PriceAdjRegion-NPP-Low




alias(rule, AltA-PriceAdjRegion-PP-High, "AltA-PriceAdj Region-PP-High");

/* ==========================================================================
 * AltA-PriceAdjRegion-PP-High
 *
 *
 */
rule AltA-PriceAdjRegion-PP-High()
    if(
        (programType == "AltA") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("AltA-RegAdj-PP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule AltA-PriceAdjRegion-PP-High




alias(rule, AltA-PriceAdjRegion-PP-Low, "AltA-PriceAdj Region-PP-Low");

/* ==========================================================================
 * AltA-PriceAdjRegion-PP-Low
 *
 *
 */
rule AltA-PriceAdjRegion-PP-Low()
    if(
        (programType == "AltA") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("AltA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule AltA-PriceAdjRegion-PP-Low





/* ==========================================================================
 * AltA-ProgramType
 *
 *
 */
rule AltA-ProgramType()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        programType = "AltA";
		

    end
end	// rule AltA-ProgramType




alias(rule, ALTA-PropConsDebtandTotInc, "ALTA-Prop Cons Debt and Tot Inc");

/* ==========================================================================
 * ALTA-PropConsDebtandTotInc
 *
 *
 */
rule ALTA-PropConsDebtandTotInc()
    if(
        (pLoanAmount > 0)
      )
    then
        ConsumerDebt-Proposed = pProposedInstallmentDebt + pProposedOtherDebt + pMtgDebtNonREO;
		TotalIncome = TotalIncomeAmt + TotalCashFlow;
		

    end
end	// rule ALTA-PropConsDebtandTotInc




alias(rule, AltA-RateAdjComboDocTypeBRO, "AltA-RateAdjCombo DocType BRO");

/* ==========================================================================
 * AltA-RateAdjComboDocTypeBRO
 *
 *
 */
rule AltA-RateAdjComboDocTypeBRO()
    if(
        (pUserType == "Broker") &&
		(fIsSubFin == "TRUE") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-DocumentType = lookup("AltA-RateAdjCombo DocType BRO", pDocumentType, globalParam);
		

    end
end	// rule AltA-RateAdjComboDocTypeBRO




alias(rule, AltA-RateAdjComboDocTypeCOR, "AltA-RateAdjCombo DocType COR");

/* ==========================================================================
 * AltA-RateAdjComboDocTypeCOR
 *
 *
 */
rule AltA-RateAdjComboDocTypeCOR()
    if(
        (pUserType == "Correspondent") &&
		(fIsSubFin == "TRUE") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-DocumentType = lookup("AltA-RateAdjCombo DocType COR", pDocumentType, globalParam);
		

    end
end	// rule AltA-RateAdjComboDocTypeCOR




alias(rule, AltA-RateAdjComboDocTypeRTN, "AltA-RateAdjCombo DocType RTN");

/* ==========================================================================
 * AltA-RateAdjComboDocTypeRTN
 *
 *
 */
rule AltA-RateAdjComboDocTypeRTN()
    if(
        (pUserType == "Retention") &&
		(fIsSubFin == "TRUE") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-DocumentType = lookup("AltA-RateAdjCombo DocType RTN", pDocumentType, globalParam);
		

    end
end	// rule AltA-RateAdjComboDocTypeRTN




alias(rule, AltA-RateAdjComboNOOCltvBRO, "AltA-RateAdjCombo NOOCltv BRO");

/* ==========================================================================
 * AltA-RateAdjComboNOOCltvBRO
 *
 *
 */
rule AltA-RateAdjComboNOOCltvBRO()
    if(
        (pUserType == "Broker") &&
		(fIsSubFin == "TRUE") &&
		(pOccupancy == "Investment") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-NOOCLTV = lookup("AltA-RateAdjCombo NOOCltv BRO", CLTV, globalParam);
		

    end
end	// rule AltA-RateAdjComboNOOCltvBRO




alias(rule, AltA-RateAdjComboNOOCltvCOR, "AltA-RateAdjCombo NOOCltv COR");

/* ==========================================================================
 * AltA-RateAdjComboNOOCltvCOR
 *
 *
 */
rule AltA-RateAdjComboNOOCltvCOR()
    if(
        (pUserType == "Correspondent") &&
		(fIsSubFin == "TRUE") &&
		(pOccupancy == "Investment") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-NOOCLTV = lookup("AltA-RateAdjCombo NOOCltv COR", CLTV, globalParam);
		

    end
end	// rule AltA-RateAdjComboNOOCltvCOR




alias(rule, AltA-RateAdjComboNOOCltvRTN, "AltA-RateAdjCombo NOOCltv RTN");

/* ==========================================================================
 * AltA-RateAdjComboNOOCltvRTN
 *
 *
 */
rule AltA-RateAdjComboNOOCltvRTN()
    if(
        (pUserType == "Retention") &&
		(fIsSubFin == "TRUE") &&
		(pOccupancy == "Investment") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-NOOCLTV = lookup("AltA-RateAdjCombo NOOCltv RTN", CLTV, globalParam);
		

    end
end	// rule AltA-RateAdjComboNOOCltvRTN




alias(rule, AltA-RateAdjDocTypeBRO, "AltA-RateAdjDocType BRO");

/* ==========================================================================
 * AltA-RateAdjDocTypeBRO
 *
 *
 */
rule AltA-RateAdjDocTypeBRO()
    if(
        (pUserType == "Broker") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-DocumentType = lookup("AltA-RateAdjDocType BRO", pDocumentType, globalParam);
		

    end
end	// rule AltA-RateAdjDocTypeBRO




alias(rule, AltA-RateAdjDocTypeCOR, "AltA-RateAdjDocType COR");

/* ==========================================================================
 * AltA-RateAdjDocTypeCOR
 *
 *
 */
rule AltA-RateAdjDocTypeCOR()
    if(
        (pUserType == "Correspondent") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-DocumentType = lookup("AltA-RateAdjDocType COR", pDocumentType, globalParam);
		

    end
end	// rule AltA-RateAdjDocTypeCOR




alias(rule, AltA-RateAdjDocTypeRTN, "AltA-RateAdjDocType RTN");

/* ==========================================================================
 * AltA-RateAdjDocTypeRTN
 *
 *
 */
rule AltA-RateAdjDocTypeRTN()
    if(
        (pUserType == "Retention") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-DocumentType = lookup("AltA-RateAdjDocType RTN", pDocumentType, globalParam);
		

    end
end	// rule AltA-RateAdjDocTypeRTN




alias(rule, AltA-RateAdjNOOCltvBRO, "AltA-RateAdjNOOCltv BRO");

/* ==========================================================================
 * AltA-RateAdjNOOCltvBRO
 *
 *
 */
rule AltA-RateAdjNOOCltvBRO()
    if(
        (pUserType == "Broker") &&
		(pOccupancy == "Investment") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-NOOCLTV = lookup("AltA-RateAdjNOOCltv BRO", CLTV, globalParam);
		

    end
end	// rule AltA-RateAdjNOOCltvBRO




alias(rule, AltA-RateAdjNOOCltvCOR, "AltA-RateAdjNOOCltv COR");

/* ==========================================================================
 * AltA-RateAdjNOOCltvCOR
 *
 *
 */
rule AltA-RateAdjNOOCltvCOR()
    if(
        (pUserType == "Correspondent") &&
		(pOccupancy == "Investment") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-NOOCLTV = lookup("AltA-RateAdjNOOCltv COR", CLTV, globalParam);
		

    end
end	// rule AltA-RateAdjNOOCltvCOR




alias(rule, AltA-RateAdjNOOCltvRTN, "AltA-RateAdjNOOCltv RTN");

/* ==========================================================================
 * AltA-RateAdjNOOCltvRTN
 *
 *
 */
rule AltA-RateAdjNOOCltvRTN()
    if(
        (pUserType == "Retention") &&
		(pOccupancy == "Investment") &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed"))
      )
    then
        rateAdj-NOOCLTV = lookup("AltA-RateAdjNOOCltv RTN", CLTV, globalParam);
		

    end
end	// rule AltA-RateAdjNOOCltvRTN




alias(rule, AltA-SetLookupNameT1-1, "AltA-SetLookupNameT1.1");

/* ==========================================================================
 * AltA-SetLookupNameT1-1
 *
 *
 */
rule AltA-SetLookupNameT1-1()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-1




alias(rule, AltA-SetLookupNameT1-10, "AltA-SetLookupNameT1.10");

/* ==========================================================================
 * AltA-SetLookupNameT1-10
 *
 *
 */
rule AltA-SetLookupNameT1-10()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 3PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-10




alias(rule, AltA-SetLookupNameT1-100, "AltA-SetLookupNameT1.100");

/* ==========================================================================
 * AltA-SetLookupNameT1-100
 *
 *
 */
rule AltA-SetLookupNameT1-100()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 3PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-100




alias(rule, AltA-SetLookupNameT1-101, "AltA-SetLookupNameT1.101");

/* ==========================================================================
 * AltA-SetLookupNameT1-101
 *
 *
 */
rule AltA-SetLookupNameT1-101()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-101




alias(rule, AltA-SetLookupNameT1-102, "AltA-SetLookupNameT1.102");

/* ==========================================================================
 * AltA-SetLookupNameT1-102
 *
 *
 */
rule AltA-SetLookupNameT1-102()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-102




alias(rule, AltA-SetLookupNameT1-103, "AltA-SetLookupNameT1.103");

/* ==========================================================================
 * AltA-SetLookupNameT1-103
 *
 *
 */
rule AltA-SetLookupNameT1-103()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 1PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-103




alias(rule, AltA-SetLookupNameT1-104, "AltA-SetLookupNameT1.104");

/* ==========================================================================
 * AltA-SetLookupNameT1-104
 *
 *
 */
rule AltA-SetLookupNameT1-104()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 2PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-104




alias(rule, AltA-SetLookupNameT1-105, "AltA-SetLookupNameT1.105");

/* ==========================================================================
 * AltA-SetLookupNameT1-105
 *
 *
 */
rule AltA-SetLookupNameT1-105()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 3PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-105




alias(rule, AltA-SetLookupNameT1-106, "AltA-SetLookupNameT1.106");

/* ==========================================================================
 * AltA-SetLookupNameT1-106
 *
 *
 */
rule AltA-SetLookupNameT1-106()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-106




alias(rule, AltA-SetLookupNameT1-107, "AltA-SetLookupNameT1.107");

/* ==========================================================================
 * AltA-SetLookupNameT1-107
 *
 *
 */
rule AltA-SetLookupNameT1-107()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-107




alias(rule, AltA-SetLookupNameT1-108, "AltA-SetLookupNameT1.108");

/* ==========================================================================
 * AltA-SetLookupNameT1-108
 *
 *
 */
rule AltA-SetLookupNameT1-108()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 1PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-108




alias(rule, AltA-SetLookupNameT1-109, "AltA-SetLookupNameT1.109");

/* ==========================================================================
 * AltA-SetLookupNameT1-109
 *
 *
 */
rule AltA-SetLookupNameT1-109()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 2PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-109




alias(rule, AltA-SetLookupNameT1-11, "AltA-SetLookupNameT1.11");

/* ==========================================================================
 * AltA-SetLookupNameT1-11
 *
 *
 */
rule AltA-SetLookupNameT1-11()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-11




alias(rule, AltA-SetLookupNameT1-110, "AltA-SetLookupNameT1.110");

/* ==========================================================================
 * AltA-SetLookupNameT1-110
 *
 *
 */
rule AltA-SetLookupNameT1-110()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 3PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-110




alias(rule, AltA-SetLookupNameT1-111, "AltA-SetLookupNameT1.111");

/* ==========================================================================
 * AltA-SetLookupNameT1-111
 *
 *
 */
rule AltA-SetLookupNameT1-111()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-111




alias(rule, AltA-SetLookupNameT1-112, "AltA-SetLookupNameT1.112");

/* ==========================================================================
 * AltA-SetLookupNameT1-112
 *
 *
 */
rule AltA-SetLookupNameT1-112()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-112




alias(rule, AltA-SetLookupNameT1-113, "AltA-SetLookupNameT1.113");

/* ==========================================================================
 * AltA-SetLookupNameT1-113
 *
 *
 */
rule AltA-SetLookupNameT1-113()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 1PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-113




alias(rule, AltA-SetLookupNameT1-114, "AltA-SetLookupNameT1.114");

/* ==========================================================================
 * AltA-SetLookupNameT1-114
 *
 *
 */
rule AltA-SetLookupNameT1-114()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 2PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-114




alias(rule, AltA-SetLookupNameT1-115, "AltA-SetLookupNameT1.115");

/* ==========================================================================
 * AltA-SetLookupNameT1-115
 *
 *
 */
rule AltA-SetLookupNameT1-115()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 3PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-115




alias(rule, AltA-SetLookupNameT1-116, "AltA-SetLookupNameT1.116");

/* ==========================================================================
 * AltA-SetLookupNameT1-116
 *
 *
 */
rule AltA-SetLookupNameT1-116()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-116




alias(rule, AltA-SetLookupNameT1-117, "AltA-SetLookupNameT1.117");

/* ==========================================================================
 * AltA-SetLookupNameT1-117
 *
 *
 */
rule AltA-SetLookupNameT1-117()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-117




alias(rule, AltA-SetLookupNameT1-118, "AltA-SetLookupNameT1.118");

/* ==========================================================================
 * AltA-SetLookupNameT1-118
 *
 *
 */
rule AltA-SetLookupNameT1-118()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 1PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-118




alias(rule, AltA-SetLookupNameT1-119, "AltA-SetLookupNameT1.119");

/* ==========================================================================
 * AltA-SetLookupNameT1-119
 *
 *
 */
rule AltA-SetLookupNameT1-119()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 2PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-119




alias(rule, AltA-SetLookupNameT1-12, "AltA-SetLookupNameT1.12");

/* ==========================================================================
 * AltA-SetLookupNameT1-12
 *
 *
 */
rule AltA-SetLookupNameT1-12()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-12




alias(rule, AltA-SetLookupNameT1-120, "AltA-SetLookupNameT1.120");

/* ==========================================================================
 * AltA-SetLookupNameT1-120
 *
 *
 */
rule AltA-SetLookupNameT1-120()
    if(
        (amortType1st == "7/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 7-6 3PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-120




alias(rule, AltA-SetLookupNameT1-13, "AltA-SetLookupNameT1.13");

/* ==========================================================================
 * AltA-SetLookupNameT1-13
 *
 *
 */
rule AltA-SetLookupNameT1-13()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 1PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-13




alias(rule, AltA-SetLookupNameT1-14, "AltA-SetLookupNameT1.14");

/* ==========================================================================
 * AltA-SetLookupNameT1-14
 *
 *
 */
rule AltA-SetLookupNameT1-14()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 2PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-14




alias(rule, AltA-SetLookupNameT1-15, "AltA-SetLookupNameT1.15");

/* ==========================================================================
 * AltA-SetLookupNameT1-15
 *
 *
 */
rule AltA-SetLookupNameT1-15()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 3PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-15




alias(rule, AltA-SetLookupNameT1-16, "AltA-SetLookupNameT1.16");

/* ==========================================================================
 * AltA-SetLookupNameT1-16
 *
 *
 */
rule AltA-SetLookupNameT1-16()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-16




alias(rule, AltA-SetLookupNameT1-17, "AltA-SetLookupNameT1.17");

/* ==========================================================================
 * AltA-SetLookupNameT1-17
 *
 *
 */
rule AltA-SetLookupNameT1-17()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-17




alias(rule, AltA-SetLookupNameT1-18, "AltA-SetLookupNameT1.18");

/* ==========================================================================
 * AltA-SetLookupNameT1-18
 *
 *
 */
rule AltA-SetLookupNameT1-18()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 1PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-18




alias(rule, AltA-SetLookupNameT1-19, "AltA-SetLookupNameT1.19");

/* ==========================================================================
 * AltA-SetLookupNameT1-19
 *
 *
 */
rule AltA-SetLookupNameT1-19()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 2PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-19




alias(rule, AltA-SetLookupNameT1-2, "AltA-SetLookupNameT1.2");

/* ==========================================================================
 * AltA-SetLookupNameT1-2
 *
 *
 */
rule AltA-SetLookupNameT1-2()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-2




alias(rule, AltA-SetLookupNameT1-20, "AltA-SetLookupNameT1.20");

/* ==========================================================================
 * AltA-SetLookupNameT1-20
 *
 *
 */
rule AltA-SetLookupNameT1-20()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 3PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-20




alias(rule, AltA-SetLookupNameT1-21, "AltA-SetLookupNameT1.21");

/* ==========================================================================
 * AltA-SetLookupNameT1-21
 *
 *
 */
rule AltA-SetLookupNameT1-21()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-21




alias(rule, AltA-SetLookupNameT1-22, "AltA-SetLookupNameT1.22");

/* ==========================================================================
 * AltA-SetLookupNameT1-22
 *
 *
 */
rule AltA-SetLookupNameT1-22()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-22




alias(rule, AltA-SetLookupNameT1-23, "AltA-SetLookupNameT1.23");

/* ==========================================================================
 * AltA-SetLookupNameT1-23
 *
 *
 */
rule AltA-SetLookupNameT1-23()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 1PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-23




alias(rule, AltA-SetLookupNameT1-24, "AltA-SetLookupNameT1.24");

/* ==========================================================================
 * AltA-SetLookupNameT1-24
 *
 *
 */
rule AltA-SetLookupNameT1-24()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 2PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-24




alias(rule, AltA-SetLookupNameT1-25, "AltA-SetLookupNameT1.25");

/* ==========================================================================
 * AltA-SetLookupNameT1-25
 *
 *
 */
rule AltA-SetLookupNameT1-25()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 3PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-25




alias(rule, AltA-SetLookupNameT1-26, "AltA-SetLookupNameT1.26");

/* ==========================================================================
 * AltA-SetLookupNameT1-26
 *
 *
 */
rule AltA-SetLookupNameT1-26()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-26




alias(rule, AltA-SetLookupNameT1-27, "AltA-SetLookupNameT1.27");

/* ==========================================================================
 * AltA-SetLookupNameT1-27
 *
 *
 */
rule AltA-SetLookupNameT1-27()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-27




alias(rule, AltA-SetLookupNameT1-28, "AltA-SetLookupNameT1.28");

/* ==========================================================================
 * AltA-SetLookupNameT1-28
 *
 *
 */
rule AltA-SetLookupNameT1-28()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 1PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-28




alias(rule, AltA-SetLookupNameT1-29, "AltA-SetLookupNameT1.29");

/* ==========================================================================
 * AltA-SetLookupNameT1-29
 *
 *
 */
rule AltA-SetLookupNameT1-29()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 2PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-29




alias(rule, AltA-SetLookupNameT1-3, "AltA-SetLookupNameT1.3");

/* ==========================================================================
 * AltA-SetLookupNameT1-3
 *
 *
 */
rule AltA-SetLookupNameT1-3()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 1PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-3




alias(rule, AltA-SetLookupNameT1-30, "AltA-SetLookupNameT1.30");

/* ==========================================================================
 * AltA-SetLookupNameT1-30
 *
 *
 */
rule AltA-SetLookupNameT1-30()
    if(
        (amortType1st == "Fixed 15") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 15Fxd 3PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-30




alias(rule, AltA-SetLookupNameT1-31, "AltA-SetLookupNameT1.31");

/* ==========================================================================
 * AltA-SetLookupNameT1-31
 *
 *
 */
rule AltA-SetLookupNameT1-31()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-31




alias(rule, AltA-SetLookupNameT1-32, "AltA-SetLookupNameT1.32");

/* ==========================================================================
 * AltA-SetLookupNameT1-32
 *
 *
 */
rule AltA-SetLookupNameT1-32()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-32




alias(rule, AltA-SetLookupNameT1-33, "AltA-SetLookupNameT1.33");

/* ==========================================================================
 * AltA-SetLookupNameT1-33
 *
 *
 */
rule AltA-SetLookupNameT1-33()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 1PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-33




alias(rule, AltA-SetLookupNameT1-34, "AltA-SetLookupNameT1.34");

/* ==========================================================================
 * AltA-SetLookupNameT1-34
 *
 *
 */
rule AltA-SetLookupNameT1-34()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 2PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-34




alias(rule, AltA-SetLookupNameT1-35, "AltA-SetLookupNameT1.35");

/* ==========================================================================
 * AltA-SetLookupNameT1-35
 *
 *
 */
rule AltA-SetLookupNameT1-35()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 3PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-35




alias(rule, AltA-SetLookupNameT1-36, "AltA-SetLookupNameT1.36");

/* ==========================================================================
 * AltA-SetLookupNameT1-36
 *
 *
 */
rule AltA-SetLookupNameT1-36()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-36




alias(rule, AltA-SetLookupNameT1-37, "AltA-SetLookupNameT1.37");

/* ==========================================================================
 * AltA-SetLookupNameT1-37
 *
 *
 */
rule AltA-SetLookupNameT1-37()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-37




alias(rule, AltA-SetLookupNameT1-38, "AltA-SetLookupNameT1.38");

/* ==========================================================================
 * AltA-SetLookupNameT1-38
 *
 *
 */
rule AltA-SetLookupNameT1-38()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 1PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-38




alias(rule, AltA-SetLookupNameT1-39, "AltA-SetLookupNameT1.39");

/* ==========================================================================
 * AltA-SetLookupNameT1-39
 *
 *
 */
rule AltA-SetLookupNameT1-39()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 2PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-39




alias(rule, AltA-SetLookupNameT1-4, "AltA-SetLookupNameT1.4");

/* ==========================================================================
 * AltA-SetLookupNameT1-4
 *
 *
 */
rule AltA-SetLookupNameT1-4()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 2PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-4




alias(rule, AltA-SetLookupNameT1-40, "AltA-SetLookupNameT1.40");

/* ==========================================================================
 * AltA-SetLookupNameT1-40
 *
 *
 */
rule AltA-SetLookupNameT1-40()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 3PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-40




alias(rule, AltA-SetLookupNameT1-41, "AltA-SetLookupNameT1.41");

/* ==========================================================================
 * AltA-SetLookupNameT1-41
 *
 *
 */
rule AltA-SetLookupNameT1-41()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-41




alias(rule, AltA-SetLookupNameT1-42, "AltA-SetLookupNameT1.42");

/* ==========================================================================
 * AltA-SetLookupNameT1-42
 *
 *
 */
rule AltA-SetLookupNameT1-42()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-42




alias(rule, AltA-SetLookupNameT1-43, "AltA-SetLookupNameT1.43");

/* ==========================================================================
 * AltA-SetLookupNameT1-43
 *
 *
 */
rule AltA-SetLookupNameT1-43()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 1PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-43




alias(rule, AltA-SetLookupNameT1-44, "AltA-SetLookupNameT1.44");

/* ==========================================================================
 * AltA-SetLookupNameT1-44
 *
 *
 */
rule AltA-SetLookupNameT1-44()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 2PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-44




alias(rule, AltA-SetLookupNameT1-45, "AltA-SetLookupNameT1.45");

/* ==========================================================================
 * AltA-SetLookupNameT1-45
 *
 *
 */
rule AltA-SetLookupNameT1-45()
    if(
        (amortType1st == "2/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 2-6 3PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-45




alias(rule, AltA-SetLookupNameT1-46, "AltA-SetLookupNameT1.46");

/* ==========================================================================
 * AltA-SetLookupNameT1-46
 *
 *
 */
rule AltA-SetLookupNameT1-46()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-46




alias(rule, AltA-SetLookupNameT1-47, "AltA-SetLookupNameT1.47");

/* ==========================================================================
 * AltA-SetLookupNameT1-47
 *
 *
 */
rule AltA-SetLookupNameT1-47()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-47




alias(rule, AltA-SetLookupNameT1-48, "AltA-SetLookupNameT1.48");

/* ==========================================================================
 * AltA-SetLookupNameT1-48
 *
 *
 */
rule AltA-SetLookupNameT1-48()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 1PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-48




alias(rule, AltA-SetLookupNameT1-49, "AltA-SetLookupNameT1.49");

/* ==========================================================================
 * AltA-SetLookupNameT1-49
 *
 *
 */
rule AltA-SetLookupNameT1-49()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 2PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-49




alias(rule, AltA-SetLookupNameT1-5, "AltA-SetLookupNameT1.5");

/* ==========================================================================
 * AltA-SetLookupNameT1-5
 *
 *
 */
rule AltA-SetLookupNameT1-5()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 3PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-5




alias(rule, AltA-SetLookupNameT1-50, "AltA-SetLookupNameT1.50");

/* ==========================================================================
 * AltA-SetLookupNameT1-50
 *
 *
 */
rule AltA-SetLookupNameT1-50()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 3PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-50




alias(rule, AltA-SetLookupNameT1-51, "AltA-SetLookupNameT1.51");

/* ==========================================================================
 * AltA-SetLookupNameT1-51
 *
 *
 */
rule AltA-SetLookupNameT1-51()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-51




alias(rule, AltA-SetLookupNameT1-52, "AltA-SetLookupNameT1.52");

/* ==========================================================================
 * AltA-SetLookupNameT1-52
 *
 *
 */
rule AltA-SetLookupNameT1-52()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-52




alias(rule, AltA-SetLookupNameT1-53, "AltA-SetLookupNameT1.53");

/* ==========================================================================
 * AltA-SetLookupNameT1-53
 *
 *
 */
rule AltA-SetLookupNameT1-53()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 1PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-53




alias(rule, AltA-SetLookupNameT1-54, "AltA-SetLookupNameT1.54");

/* ==========================================================================
 * AltA-SetLookupNameT1-54
 *
 *
 */
rule AltA-SetLookupNameT1-54()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 2PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-54




alias(rule, AltA-SetLookupNameT1-55, "AltA-SetLookupNameT1.55");

/* ==========================================================================
 * AltA-SetLookupNameT1-55
 *
 *
 */
rule AltA-SetLookupNameT1-55()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 3PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-55




alias(rule, AltA-SetLookupNameT1-56, "AltA-SetLookupNameT1.56");

/* ==========================================================================
 * AltA-SetLookupNameT1-56
 *
 *
 */
rule AltA-SetLookupNameT1-56()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-56




alias(rule, AltA-SetLookupNameT1-57, "AltA-SetLookupNameT1.57");

/* ==========================================================================
 * AltA-SetLookupNameT1-57
 *
 *
 */
rule AltA-SetLookupNameT1-57()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-57




alias(rule, AltA-SetLookupNameT1-58, "AltA-SetLookupNameT1.58");

/* ==========================================================================
 * AltA-SetLookupNameT1-58
 *
 *
 */
rule AltA-SetLookupNameT1-58()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 1PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-58




alias(rule, AltA-SetLookupNameT1-59, "AltA-SetLookupNameT1.59");

/* ==========================================================================
 * AltA-SetLookupNameT1-59
 *
 *
 */
rule AltA-SetLookupNameT1-59()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 2PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-59




alias(rule, AltA-SetLookupNameT1-6, "AltA-SetLookupNameT1.6");

/* ==========================================================================
 * AltA-SetLookupNameT1-6
 *
 *
 */
rule AltA-SetLookupNameT1-6()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-6




alias(rule, AltA-SetLookupNameT1-60, "AltA-SetLookupNameT1.60");

/* ==========================================================================
 * AltA-SetLookupNameT1-60
 *
 *
 */
rule AltA-SetLookupNameT1-60()
    if(
        (amortType1st == "3/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 3-6 3PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-60




alias(rule, AltA-SetLookupNameT1-61, "AltA-SetLookupNameT1.61");

/* ==========================================================================
 * AltA-SetLookupNameT1-61
 *
 *
 */
rule AltA-SetLookupNameT1-61()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-61




alias(rule, AltA-SetLookupNameT1-62, "AltA-SetLookupNameT1.62");

/* ==========================================================================
 * AltA-SetLookupNameT1-62
 *
 *
 */
rule AltA-SetLookupNameT1-62()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-62




alias(rule, AltA-SetLookupNameT1-63, "AltA-SetLookupNameT1.63");

/* ==========================================================================
 * AltA-SetLookupNameT1-63
 *
 *
 */
rule AltA-SetLookupNameT1-63()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 1PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-63




alias(rule, AltA-SetLookupNameT1-64, "AltA-SetLookupNameT1.64");

/* ==========================================================================
 * AltA-SetLookupNameT1-64
 *
 *
 */
rule AltA-SetLookupNameT1-64()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 2PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-64




alias(rule, AltA-SetLookupNameT1-65, "AltA-SetLookupNameT1.65");

/* ==========================================================================
 * AltA-SetLookupNameT1-65
 *
 *
 */
rule AltA-SetLookupNameT1-65()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 3PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-65




alias(rule, AltA-SetLookupNameT1-66, "AltA-SetLookupNameT1.66");

/* ==========================================================================
 * AltA-SetLookupNameT1-66
 *
 *
 */
rule AltA-SetLookupNameT1-66()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-66




alias(rule, AltA-SetLookupNameT1-67, "AltA-SetLookupNameT1.67");

/* ==========================================================================
 * AltA-SetLookupNameT1-67
 *
 *
 */
rule AltA-SetLookupNameT1-67()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-67




alias(rule, AltA-SetLookupNameT1-68, "AltA-SetLookupNameT1.68");

/* ==========================================================================
 * AltA-SetLookupNameT1-68
 *
 *
 */
rule AltA-SetLookupNameT1-68()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 1PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-68




alias(rule, AltA-SetLookupNameT1-69, "AltA-SetLookupNameT1.69");

/* ==========================================================================
 * AltA-SetLookupNameT1-69
 *
 *
 */
rule AltA-SetLookupNameT1-69()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 2PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-69




alias(rule, AltA-SetLookupNameT1-7, "AltA-SetLookupNameT1.7");

/* ==========================================================================
 * AltA-SetLookupNameT1-7
 *
 *
 */
rule AltA-SetLookupNameT1-7()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-7




alias(rule, AltA-SetLookupNameT1-70, "AltA-SetLookupNameT1.70");

/* ==========================================================================
 * AltA-SetLookupNameT1-70
 *
 *
 */
rule AltA-SetLookupNameT1-70()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 3PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-70




alias(rule, AltA-SetLookupNameT1-71, "AltA-SetLookupNameT1.71");

/* ==========================================================================
 * AltA-SetLookupNameT1-71
 *
 *
 */
rule AltA-SetLookupNameT1-71()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-71




alias(rule, AltA-SetLookupNameT1-72, "AltA-SetLookupNameT1.72");

/* ==========================================================================
 * AltA-SetLookupNameT1-72
 *
 *
 */
rule AltA-SetLookupNameT1-72()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-72




alias(rule, AltA-SetLookupNameT1-73, "AltA-SetLookupNameT1.73");

/* ==========================================================================
 * AltA-SetLookupNameT1-73
 *
 *
 */
rule AltA-SetLookupNameT1-73()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 1PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-73




alias(rule, AltA-SetLookupNameT1-74, "AltA-SetLookupNameT1.74");

/* ==========================================================================
 * AltA-SetLookupNameT1-74
 *
 *
 */
rule AltA-SetLookupNameT1-74()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 2PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-74




alias(rule, AltA-SetLookupNameT1-75, "AltA-SetLookupNameT1.75");

/* ==========================================================================
 * AltA-SetLookupNameT1-75
 *
 *
 */
rule AltA-SetLookupNameT1-75()
    if(
        (amortType1st == "Fixed 30") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 30Fxd 3PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-75




alias(rule, AltA-SetLookupNameT1-76, "AltA-SetLookupNameT1.76");

/* ==========================================================================
 * AltA-SetLookupNameT1-76
 *
 *
 */
rule AltA-SetLookupNameT1-76()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-76




alias(rule, AltA-SetLookupNameT1-77, "AltA-SetLookupNameT1.77");

/* ==========================================================================
 * AltA-SetLookupNameT1-77
 *
 *
 */
rule AltA-SetLookupNameT1-77()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-77




alias(rule, AltA-SetLookupNameT1-78, "AltA-SetLookupNameT1.78");

/* ==========================================================================
 * AltA-SetLookupNameT1-78
 *
 *
 */
rule AltA-SetLookupNameT1-78()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 1PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-78




alias(rule, AltA-SetLookupNameT1-79, "AltA-SetLookupNameT1.79");

/* ==========================================================================
 * AltA-SetLookupNameT1-79
 *
 *
 */
rule AltA-SetLookupNameT1-79()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 2PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-79




alias(rule, AltA-SetLookupNameT1-8, "AltA-SetLookupNameT1.8");

/* ==========================================================================
 * AltA-SetLookupNameT1-8
 *
 *
 */
rule AltA-SetLookupNameT1-8()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 1PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-8




alias(rule, AltA-SetLookupNameT1-80, "AltA-SetLookupNameT1.80");

/* ==========================================================================
 * AltA-SetLookupNameT1-80
 *
 *
 */
rule AltA-SetLookupNameT1-80()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 3PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-80




alias(rule, AltA-SetLookupNameT1-81, "AltA-SetLookupNameT1.81");

/* ==========================================================================
 * AltA-SetLookupNameT1-81
 *
 *
 */
rule AltA-SetLookupNameT1-81()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-81




alias(rule, AltA-SetLookupNameT1-82, "AltA-SetLookupNameT1.82");

/* ==========================================================================
 * AltA-SetLookupNameT1-82
 *
 *
 */
rule AltA-SetLookupNameT1-82()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-82




alias(rule, AltA-SetLookupNameT1-83, "AltA-SetLookupNameT1.83");

/* ==========================================================================
 * AltA-SetLookupNameT1-83
 *
 *
 */
rule AltA-SetLookupNameT1-83()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 1PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-83




alias(rule, AltA-SetLookupNameT1-84, "AltA-SetLookupNameT1.84");

/* ==========================================================================
 * AltA-SetLookupNameT1-84
 *
 *
 */
rule AltA-SetLookupNameT1-84()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 2PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-84




alias(rule, AltA-SetLookupNameT1-85, "AltA-SetLookupNameT1.85");

/* ==========================================================================
 * AltA-SetLookupNameT1-85
 *
 *
 */
rule AltA-SetLookupNameT1-85()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 3PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-85




alias(rule, AltA-SetLookupNameT1-86, "AltA-SetLookupNameT1.86");

/* ==========================================================================
 * AltA-SetLookupNameT1-86
 *
 *
 */
rule AltA-SetLookupNameT1-86()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-86




alias(rule, AltA-SetLookupNameT1-87, "AltA-SetLookupNameT1.87");

/* ==========================================================================
 * AltA-SetLookupNameT1-87
 *
 *
 */
rule AltA-SetLookupNameT1-87()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 NPP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-87




alias(rule, AltA-SetLookupNameT1-88, "AltA-SetLookupNameT1.88");

/* ==========================================================================
 * AltA-SetLookupNameT1-88
 *
 *
 */
rule AltA-SetLookupNameT1-88()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 1PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-88




alias(rule, AltA-SetLookupNameT1-89, "AltA-SetLookupNameT1.89");

/* ==========================================================================
 * AltA-SetLookupNameT1-89
 *
 *
 */
rule AltA-SetLookupNameT1-89()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 2PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-89




alias(rule, AltA-SetLookupNameT1-9, "AltA-SetLookupNameT1.9");

/* ==========================================================================
 * AltA-SetLookupNameT1-9
 *
 *
 */
rule AltA-SetLookupNameT1-9()
    if(
        (amortType1st == "10/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 10-6 2PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-9




alias(rule, AltA-SetLookupNameT1-90, "AltA-SetLookupNameT1.90");

/* ==========================================================================
 * AltA-SetLookupNameT1-90
 *
 *
 */
rule AltA-SetLookupNameT1-90()
    if(
        (amortType1st == "5/6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Retention") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 5-6 3PP RTN LK1";
		

    end
end	// rule AltA-SetLookupNameT1-90




alias(rule, AltA-SetLookupNameT1-91, "AltA-SetLookupNameT1.91");

/* ==========================================================================
 * AltA-SetLookupNameT1-91
 *
 *
 */
rule AltA-SetLookupNameT1-91()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-91




alias(rule, AltA-SetLookupNameT1-92, "AltA-SetLookupNameT1.92");

/* ==========================================================================
 * AltA-SetLookupNameT1-92
 *
 *
 */
rule AltA-SetLookupNameT1-92()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 NPP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-92




alias(rule, AltA-SetLookupNameT1-93, "AltA-SetLookupNameT1.93");

/* ==========================================================================
 * AltA-SetLookupNameT1-93
 *
 *
 */
rule AltA-SetLookupNameT1-93()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 1PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-93




alias(rule, AltA-SetLookupNameT1-94, "AltA-SetLookupNameT1.94");

/* ==========================================================================
 * AltA-SetLookupNameT1-94
 *
 *
 */
rule AltA-SetLookupNameT1-94()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 2PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-94




alias(rule, AltA-SetLookupNameT1-95, "AltA-SetLookupNameT1.95");

/* ==========================================================================
 * AltA-SetLookupNameT1-95
 *
 *
 */
rule AltA-SetLookupNameT1-95()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Broker") &&
		(PrepayTerm1st == 36)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 3PP BRO LK1";
		

    end
end	// rule AltA-SetLookupNameT1-95




alias(rule, AltA-SetLookupNameT1-96, "AltA-SetLookupNameT1.96");

/* ==========================================================================
 * AltA-SetLookupNameT1-96
 *
 *
 */
rule AltA-SetLookupNameT1-96()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 0)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-96




alias(rule, AltA-SetLookupNameT1-97, "AltA-SetLookupNameT1.97");

/* ==========================================================================
 * AltA-SetLookupNameT1-97
 *
 *
 */
rule AltA-SetLookupNameT1-97()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 4)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 NPP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-97




alias(rule, AltA-SetLookupNameT1-98, "AltA-SetLookupNameT1.98");

/* ==========================================================================
 * AltA-SetLookupNameT1-98
 *
 *
 */
rule AltA-SetLookupNameT1-98()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 12)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 1PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-98




alias(rule, AltA-SetLookupNameT1-99, "AltA-SetLookupNameT1.99");

/* ==========================================================================
 * AltA-SetLookupNameT1-99
 *
 *
 */
rule AltA-SetLookupNameT1-99()
    if(
        (amortType1st == "6 Mo Libor") &&
		(pLienNumber == 1) &&
		(pUserType == "Correspondent") &&
		(PrepayTerm1st == 24)
      )
    then
        cvLookupName = "AltA-FinalPrice1st 6 2PP COR LK1";
		

    end
end	// rule AltA-SetLookupNameT1-99




alias(rule, AltA-SubFinSetFlag, "AltA-Sub Fin Set Flag");

/* ==========================================================================
 * AltA-SubFinSetFlag
 *
 *
 */
rule AltA-SubFinSetFlag()
    if(
        (pCombo == 0) &&
		(pLienNumber == 1) &&
		(pOutsideFinancing > 0)
      )
    then
        fIsSubFin = "TRUE";
		

    else
        fIsSubFin = "FALSE";
		

    end
end	// rule AltA-SubFinSetFlag




alias(rule, AltA-TotalPriceAdj1st, "AltA-Total Price Adj 1st");

/* ==========================================================================
 * AltA-TotalPriceAdj1st
 *
 *
 */
rule AltA-TotalPriceAdj1st()
    if(
        (pLoanAmount > 0)
      )
    then
        priceAdj-Total = priceAdj-Occupancy + priceAdj-Investor + priceAdj-Region + priceAdj-NoEscrow + priceAdj-SOACLTV + priceAdj-CLTV-LoanAmount + priceAdj-Special30FX80CLTV + priceAdj-5-6PricingSpecial + priceAdj-AltAPricingSpecial + priceAdj-SOASpecial + priceAdj-NOOLoanAmount + priceAdj-CashOut + priceAdj-NumberofUnits + priceAdj-PropertyType + priceAdj-MixedUse + priceAdj-Rural + priceAdj-ForeignNational + priceAdj-DocumentType + priceAdj-FICO + priceAdj-LoanAmount + priceAdj-WaiveEscrow + priceAdj-CLTV + priceAdj-InterestOnly + priceAdj-EscrowHoldback + priceAdj-LTV + priceAdj-NewYorkProperties + priceAdj-PrepayTerm + priceAdj-Special + priceAdj-40DueIn30;
		

    end
end	// rule AltA-TotalPriceAdj1st




alias(rule, AltA-TotalRate1st, "AltA-Total Rate 1st");

/* ==========================================================================
 * AltA-TotalRate1st
 *
 *
 */
rule AltA-TotalRate1st()
    if(
        (pLoanAmount > 0)
      )
    then
        rate1st = rate1st + rateAdj1st-Total;
		

    end
end	// rule AltA-TotalRate1st




alias(rule, AltA-TotalRateAdj1st, "AltA-Total Rate Adj 1st");

/* ==========================================================================
 * AltA-TotalRateAdj1st
 *
 *
 */
rule AltA-TotalRateAdj1st()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        rateAdj1st-Total = rateAdj-DocumentType + rateAdj-NOOCLTV + rateAdj-TXCashOut;
		

    end
end	// rule AltA-TotalRateAdj1st





/* ==========================================================================
 * CMT-GetRequestedRateMargin
 *
 *
 */
rule CMT-GetRequestedRateMargin()
    if(
        (pLoanAmount != pLoanAmount)
      )
    then
        
        message(observation, "GetRequestedRateMargin has been disabled. See patch: G-GetRequestedRateMargin.ORIG.xml for the original version of this ruleset.");

    end
end	// rule CMT-GetRequestedRateMargin




alias(rule, G-1st2ndLoanParameters, "G-1st 2nd Loan Parameters");

/* ==========================================================================
 * G-1st2ndLoanParameters
 *
 *
 */
rule G-1st2ndLoanParameters()
    if(
        (pLienNumber == 1)
      )
    then
        LTV1st = ((pLoanAmount / propertyValue) * 100);
		FinalPrice1st = pPrice;
		PrepayTerm1st = pPrepayTerm-Loan;
		lockPeriod1st = pLockPeriod;
		loanAmount1st = pLoanAmount;
		LoanTerm1st = pLoanTerm;
		LoanTerm2nd = pOtherLoanTerm;
		Margin1st = cvMargin;
		

    else
        LTV1st = ((pOtherLoanAmount / propertyValue) * 100);
		FinalPrice1st = pOtherPrice;
		PrepayTerm1st = pOtherPrepayTerm;
		lockPeriod1st = pOtherLockPeriod;
		loanAmount1st = pOtherLoanAmount;
		loanAmount2nd = pLoanAmount;
		FinalPrice2nd = pPrice;
		PrepayTerm2nd = pPrepayTerm-Loan;
		lockPeriod2nd = pLockPeriod;
		LoanTerm1st = pOtherLoanTerm;
		LoanTerm2nd = pLoanTerm;
		Margin1st = 0;
		cvMargin = "NA";
		cvBaseMargin = "NA";
		

    end
end	// rule G-1st2ndLoanParameters




alias(rule, G-1stAmortType1, "G-1st Amort Type 1");

/* ==========================================================================
 * G-1stAmortType1
 *
 *
 */
rule G-1stAmortType1()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed")) &&
		((pLoanTerm == 360) ||
		(pLoanTerm == 240) ||
		(pLoanTerm == 300) ||
		(pLoanTerm == 480) ||
		(pLoanTerm == 600))) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "Fixed") ||
		(pOtherAmortizationType == "IOFixed")) &&
		((pOtherLoanTerm == 360) ||
		(pOtherLoanTerm == 240) ||
		(pOtherLoanTerm == 300) ||
		(pOtherLoanTerm == 480) ||
		(pOtherLoanTerm == 600)))
      )
    then
        amortType1st = "Fixed 30";
		

    end
end	// rule G-1stAmortType1




alias(rule, G-1stAmortType2, "G-1st Amort Type 2");

/* ==========================================================================
 * G-1stAmortType2
 *
 *
 */
rule G-1stAmortType2()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "Fixed") ||
		(pAmortizationType == "IOFixed")) &&
		((pLoanTerm == 180) ||
		(pLoanTerm == 120))) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "Fixed") ||
		(pOtherAmortizationType == "IOFixed")) &&
		((pOtherLoanTerm == 180) ||
		(pOtherLoanTerm == 120)))
      )
    then
        amortType1st = "Fixed 15";
		

    end
end	// rule G-1stAmortType2




alias(rule, G-1stAmortType3, "G-1st Amort Type 3");

/* ==========================================================================
 * G-1stAmortType3
 *
 *
 */
rule G-1stAmortType3()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "ARM") ||
		(pAmortizationType == "IOARM")) &&
		((pLoanTerm == 360) ||
		(pLoanTerm == 480)) &&
		(pIndexType == "1MonthLIBOR") &&
		(pFirstAdjTerm == 1)) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "ARM") ||
		(pOtherAmortizationType == "IOARM")) &&
		((pOtherLoanTerm == 360) ||
		(pOtherLoanTerm == 480)) ||
		(pOtherIndexType == "1MonthLIBOR") &&
		(pOtherFirstAdjTerm == 1))
      )
    then
        amortType1st = "1 Mo Libor";
		

    end
end	// rule G-1stAmortType3




alias(rule, G-1stAmortType4, "G-1st Amort Type 4");

/* ==========================================================================
 * G-1stAmortType4
 *
 *
 */
rule G-1stAmortType4()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "ARM") ||
		(pAmortizationType == "IOARM")) &&
		((pLoanTerm == 360) ||
		(pLoanTerm == 480) ||
		(pLoanTerm == 600)) &&
		(pIndexType == "6MonthLIBOR") &&
		(pFirstAdjTerm == 24)) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "ARM") ||
		(pOtherAmortizationType == "IOARM")) &&
		((pOtherLoanTerm == 360) ||
		(pOtherLoanTerm == 480) ||
		(pOtherLoanTerm == 600)) ||
		(pOtherIndexType == "6MonthLIBOR") &&
		(pOtherFirstAdjTerm == 24))
      )
    then
        amortType1st = "2/6 Mo Libor";
		

    end
end	// rule G-1stAmortType4




alias(rule, G-1stAmortType5, "G-1st Amort Type 5");

/* ==========================================================================
 * G-1stAmortType5
 *
 *
 */
rule G-1stAmortType5()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "ARM") ||
		(pAmortizationType == "IOARM")) &&
		((pLoanTerm == 360) ||
		(pLoanTerm == 480) ||
		(pLoanTerm == 600)) &&
		(pIndexType == "6MonthLIBOR") &&
		(pFirstAdjTerm == 36)) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "ARM") ||
		(pOtherAmortizationType == "IOARM")) &&
		((pOtherLoanTerm == 360) ||
		(pOtherLoanTerm == 480) ||
		(pOtherLoanTerm == 600)) ||
		(pOtherIndexType == "6MonthLIBOR") &&
		(pOtherFirstAdjTerm == 36))
      )
    then
        amortType1st = "3/6 Mo Libor";
		

    end
end	// rule G-1stAmortType5




alias(rule, G-1stAmortType6, "G-1st Amort Type 6");

/* ==========================================================================
 * G-1stAmortType6
 *
 *
 */
rule G-1stAmortType6()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "ARM") ||
		(pAmortizationType == "IOARM")) &&
		((pLoanTerm == 360) ||
		(pLoanTerm == 480) ||
		(pLoanTerm == 600)) &&
		(pIndexType == "6MonthLIBOR") &&
		(pFirstAdjTerm == 60)) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "ARM") ||
		(pOtherAmortizationType == "IOARM")) &&
		((pOtherLoanTerm == 360) ||
		(pOtherLoanTerm == 480) ||
		(pOtherLoanTerm == 600)) ||
		(pOtherIndexType == "6MonthLIBOR") &&
		(pOtherFirstAdjTerm == 60))
      )
    then
        amortType1st = "5/6 Mo Libor";
		

    end
end	// rule G-1stAmortType6




alias(rule, G-1stAmortType7, "G-1st Amort Type 7");

/* ==========================================================================
 * G-1stAmortType7
 *
 *
 */
rule G-1stAmortType7()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "ARM") ||
		(pAmortizationType == "IOARM")) &&
		((pLoanTerm == 360) ||
		(pLoanTerm == 480)) &&
		(pIndexType == "6MonthLIBOR") &&
		(pFirstAdjTerm == 84)) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "ARM") ||
		(pOtherAmortizationType == "IOARM")) &&
		((pOtherLoanTerm == 360) ||
		(pOtherLoanTerm == 480)) ||
		(pOtherIndexType == "6MonthLIBOR") &&
		(pOtherFirstAdjTerm == 84))
      )
    then
        amortType1st = "7/6 Mo Libor";
		

    end
end	// rule G-1stAmortType7




alias(rule, G-1stAmortType8, "G-1st Amort Type 8");

/* ==========================================================================
 * G-1stAmortType8
 *
 *
 */
rule G-1stAmortType8()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "ARM") ||
		(pAmortizationType == "IOARM")) &&
		((pLoanTerm == 360) ||
		(pLoanTerm == 480)) &&
		(pIndexType == "6MonthLIBOR") &&
		(pFirstAdjTerm == 120)) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "ARM") ||
		(pOtherAmortizationType == "IOARM")) &&
		((pOtherLoanTerm == 360) ||
		(pOtherLoanTerm == 480)) ||
		(pOtherIndexType == "6MonthLIBOR") &&
		(pOtherFirstAdjTerm == 120))
      )
    then
        amortType1st = "10/6 Mo Libor";
		

    end
end	// rule G-1stAmortType8




alias(rule, G-1stAmortType9, "G-1st Amort Type 9");

/* ==========================================================================
 * G-1stAmortType9
 *
 *
 */
rule G-1stAmortType9()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "ARM") ||
		(pAmortizationType == "IOARM")) &&
		((pLoanTerm == 360) ||
		(pLoanTerm == 480)) &&
		(pIndexType == "6MonthLIBOR") &&
		(pFirstAdjTerm == 6)) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "ARM") ||
		(pOtherAmortizationType == "IOARM")) &&
		((pOtherLoanTerm == 360) ||
		(pOtherLoanTerm == 480)) ||
		(pOtherIndexType == "6MonthLIBOR") &&
		(pOtherFirstAdjTerm == 6))
      )
    then
        amortType1st = "6 Mo Libor";
		

    end
end	// rule G-1stAmortType9




alias(rule, G-1stIOIndicator, "G-1st IO Indicator");

/* ==========================================================================
 * G-1stIOIndicator
 *
 *
 */
rule G-1stIOIndicator()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType == "IOFixed") ||
		(pAmortizationType == "IOARM"))) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType == "IOFixed") ||
		(pOtherAmortizationType == "IOARM")))
      )
    then
        IOIndicator1st = "Y";
		

    end
end	// rule G-1stIOIndicator




alias(rule, G-1stLoanCheckRule, "G-1st Loan Check Rule");

/* ==========================================================================
 * G-1stLoanCheckRule
 *
 *
 */
rule G-1stLoanCheckRule()
    if(
        (pLienNumber == 2)
      )
    then
        

    end
end	// rule G-1stLoanCheckRule





/* ==========================================================================
 * G-Calc1stExtensionFee
 *
 *
 */
rule G-Calc1stExtensionFee()
    if(
        (((pExtensionRequest == "Y") &&
		(pConfirmedExtensions == 0)) ||
		((pLockRequest == "Request Lock") &&
		(pConfirmedExtensions >= 1) &&
		(pRateSheetDate2 == "NULL")) ||
		(((pLockRequest == "Request Lock") ||
		(pLockRequest == "Validate Lock") ||
		(pLockRequest == "Request Lock Extension")) &&
		(pConfirmedExtensions >= 1) &&
		((pRelockVersionDate == "NULL") ||
		((pExtensionDate1st > pRelockVersionDate) ||
		(pRateSheetDate2 == "NULL")))))
      )
    then
        priceAdj-Extension1 = lookup("G-PriceAdj ExtensionFee1st", dExtensionPeriod1st, pUserType);
		

    end
end	// rule G-Calc1stExtensionFee





/* ==========================================================================
 * G-Calc2ndExtensionFee
 *
 *
 */
rule G-Calc2ndExtensionFee()
    if(
        (((pExtensionRequest == "Y") &&
		(pConfirmedExtensions == 1)) ||
		((pLockRequest == "Request Relock") &&
		(pConfirmedExtensions >= 2) &&
		(pRateSheetDate2 == "NULL")) ||
		(((pLockRequest == "Request Lock") ||
		(pLockRequest == "Validate Lock") ||
		(pLockRequest == "Request Lock Extension")) &&
		(pConfirmedExtensions >= 2) &&
		((pRelockVersionDate == "NULL") ||
		((pExtensionDate2nd > pRelockVersionDate) ||
		(pRateSheetDate2 == "NULL")))))
      )
    then
        priceAdj-Extension2 = lookup("G-PriceAdj ExtensionFee2nd", dExtensionPeriod2nd, pUserType);
		

    end
end	// rule G-Calc2ndExtensionFee





/* ==========================================================================
 * G-CalcIndexedRate
 *
 *
 */
rule G-CalcIndexedRate()
    if(
        (cvIndexValue > 0) &&
		(Margin1st > 0)
      )
    then
        rateIndexed = Margin1st + cvIndexValue;
		tmp_IndexedRate1 = rateIndexed;
		
        message(observation, "Fully Indexed Rate (margin + index): <DPM>tmp_IndexedRate1</DPM> ");

    end
end	// rule G-CalcIndexedRate





/* ==========================================================================
 * G-CalcInterestFromQual
 *
 *
 */
rule G-CalcInterestFromQual()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        Interest = (qualRate / 1200);
		

    end
end	// rule G-CalcInterestFromQual





/* ==========================================================================
 * G-CalcLaMultiplier-Type1
 *
 *
 */
rule G-CalcLaMultiplier-Type1()
    if(
        (fPICalcType == 1) &&
		(fNegAm1st == "Y")
      )
    then
        LaMultiplier = 1.15;
		

    end
end	// rule G-CalcLaMultiplier-Type1





/* ==========================================================================
 * G-CalcLaMultiplier-Type1-NY
 *
 *
 */
rule G-CalcLaMultiplier-Type1-NY()
    if(
        (fPICalcType == 1) &&
		(fNegAm1st == "Y") &&
		(pSubjectPropertyState == "NY")
      )
    then
        LaMultiplier = "1.10";
		

    end
end	// rule G-CalcLaMultiplier-Type1-NY





/* ==========================================================================
 * G-CalcLoanBalance
 *
 *
 */
rule G-CalcLoanBalance()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        LoanBalance-1 = loanAmount1st * LaMultiplier;
		

    end
end	// rule G-CalcLoanBalance





/* ==========================================================================
 * G-CalcPi1st
 *
 *
 */
rule G-CalcPi1st()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        pi1st = ((LoanBalance-1 * Interest) / (1 - ((1 + Interest) ^ (-1 * LoanTerm1st))));
		

    end
end	// rule G-CalcPi1st





/* ==========================================================================
 * G-CalcPi1st-Type0-IO
 *
 *
 */
rule G-CalcPi1st-Type0-IO()
    if(
        (fPICalcType == 1) &&
		(IOIndicator1st == "Y")
      )
    then
        LaMultiplier = 1;
		

    end
end	// rule G-CalcPi1st-Type0-IO





/* ==========================================================================
 * G-CalcPiSetup
 *
 *
 */
rule G-CalcPiSetup()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        LoanBalance-1 = loanAmount1st;
		LaMultiplier = 1;
		

    end
end	// rule G-CalcPiSetup





/* ==========================================================================
 * G-CalcPiSetup-Type1-IO
 *
 *
 */
rule G-CalcPiSetup-Type1-IO()
    if(
        (fPICalcType == 1) &&
		(IOIndicator1st == "Y") &&
		(pLoanAmount != pLoanAmount)
      )
    then
        pi1st = LoanBalance-1 * Interest;
		

    end
end	// rule G-CalcPiSetup-Type1-IO





/* ==========================================================================
 * G-CalcRateGTE3YrNonIOArm
 *
 *
 */
rule G-CalcRateGTE3YrNonIOArm()
    if(
        (cvProgram != "Subprime") &&
		(pSubjectPropertyState != "NV") &&
		(amortType1st != "5 Yr OptA") &&
		(IOIndicator1st == "N") &&
		((amortType1st == "3/6 Mo Libor") ||
		(amortType1st == "5/6 Mo Libor") ||
		(amortType1st == "7/6 Mo Libor") ||
		(amortType1st == "10/6 Mo Libor")) &&
		(cvIndexValue > 0) &&
		(Margin1st > 0)
      )
    then
        rateIndexed = 0;
		DefaultQualRate = rate1st;
		tmp_DefQualRate2 = DefaultQualRate;
		
        message(observation, "Default Qual Rate is Note Rate: <DPM>tmp_DefQualRate2</DPM> ");

    end
end	// rule G-CalcRateGTE3YrNonIOArm





/* ==========================================================================
 * G-CapIndexRate-SubP-IO
 *
 *
 */
rule G-CapIndexRate-SubP-IO()
    if(
        ((cvProgram == "Subprime") &&
		(IOIndicator1st == "Y")) &&
		(rateIndexed > ceiling1st)
      )
    then
        rateIndexed = ceiling1st;
		
        message(observation, "Product is SubPrime IO. Capping Fully Indexed Rate at <DPM>ceiling1st</DPM>. ");

    end
end	// rule G-CapIndexRate-SubP-IO





/* ==========================================================================
 * G-CeilingSetup
 *
 *
 */
rule G-CeilingSetup()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        lifecap1st = lookup("G-Lifecaps1st", amortType1st, globalParam);
		ceiling1st = rate1st + lifecap1st;
		
        message(observation, "Initializing Ceiling to <DPM>ceiling1st</DPM>. ");

    end
end	// rule G-CeilingSetup





/* ==========================================================================
 * G-ChooseHighestRate
 *
 *
 */
rule G-ChooseHighestRate()
    if(
        (rateIndexed < DefaultQualRate)
      )
    then
        qualRate = DefaultQualRate;
		
        message(observation, "Using Default Qual Rate for qualifying. ");

    else
        qualRate = rateIndexed;
		
        message(observation, "Using Fully Indexed Rate for qualifying. ");

    end
end	// rule G-ChooseHighestRate





/* ==========================================================================
 * G-Clean2ndIndexAndCaps
 *
 *
 */
rule G-Clean2ndIndexAndCaps()
    if(
        (pLienNumber == 2) &&
		(AmortType2nd != "HELOC")
      )
    then
        cvIndexValue = 0;
		cvCaps = "NA";
		

    end
end	// rule G-Clean2ndIndexAndCaps





/* ==========================================================================
 * G-Cleanup4MoPPFlag1st
 *
 *
 */
rule G-Cleanup4MoPPFlag1st()
    if(
        (PrepayTerm1st == 4) &&
		(PrepayIndicator1st == "N")
      )
    then
        PrepayIndicator1st = "Y";
		

    end
end	// rule G-Cleanup4MoPPFlag1st





/* ==========================================================================
 * G-Cleanup4MoPPFlag2nd
 *
 *
 */
rule G-Cleanup4MoPPFlag2nd()
    if(
        (PrepayTerm2nd == 4) &&
		(PrepayIndicator2nd == "N")
      )
    then
        PrepayIndicator2nd = "Y";
		

    end
end	// rule G-Cleanup4MoPPFlag2nd




alias(rule, G-CondLockRequired, "G-Cond LockRequired");

/* ==========================================================================
 * G-CondLockRequired
 *
 *
 */
rule G-CondLockRequired()
    if(
        (pApplicationSource == "UW") &&
		(pLockType == "No Lock")
      )
    then
        
        condition(asset, docs, "Loan must be locked at least 72 hours prior to close.");

    end
end	// rule G-CondLockRequired




alias(rule, G-CorrespondentwithNoPriceRule, "G-Correspondent with No Price Rule");

/* ==========================================================================
 * G-CorrespondentwithNoPriceRule
 *
 *
 */
rule G-CorrespondentwithNoPriceRule()
    if(
        (pUserType == "Correspondent") &&
		((FinalPrice1st == 0) ||
		(FinalPrice1st == "NULL"))
      )
    then
        FinalPrice1st = 100;
		

    end
end	// rule G-CorrespondentwithNoPriceRule




alias(rule, G-DTICalc, "G-DTI Calc");

/* ==========================================================================
 * G-DTICalc
 *
 *
 */
rule G-DTICalc()
    if(
        (pDocumentType != "NINA") &&
		(pDocumentType != "No Ratio") &&
		(pDocumentType != "No Doc") &&
		(pDocumentType != "No Doc with Assets")
      )
    then
        TotalMoPaymts = ProposedHousingCost + ConsumerDebt-Proposed + TotalNegCashFlow;
		DTI = (TotalMoPaymts * 100) / TotalIncome;
		TotalMoPayments = TotalMoPaymts;
		

    else
        DTI = "NA";
		cvMaxDTIPI = "NA";
		

    end
end	// rule G-DTICalc




alias(rule, G-DTIPOSCalc, "G-DTI POS Calc");

/* ==========================================================================
 * G-DTIPOSCalc
 *
 *
 */
rule G-DTIPOSCalc()
    if(
        (pManualCredit == "Y")
      )
    then
        DTI = pDTI;
		cvMaxDTIPI = "NA";
		MaxPaymentShock = -1;
		

    end
end	// rule G-DTIPOSCalc





/* ==========================================================================
 * G-GetExceptionAdj1-Loan1
 *
 *
 */
rule G-GetExceptionAdj1-Loan1()
    if(
        (pPriceAdjName1-Loan1 != "NULL") &&
		(pPriceAdjValue1-Loan1 != "NULL")
      )
    then
        priceAdj-Exception-Name7 = pPriceAdjName1-Loan1;
		priceAdj-Exception-Value7 = pPriceAdjValue1-Loan1;
		

    end
end	// rule G-GetExceptionAdj1-Loan1





/* ==========================================================================
 * G-GetExceptionAdj1-Prod1
 *
 *
 */
rule G-GetExceptionAdj1-Prod1()
    if(
        (pPriceAdjName1-PDT1 != "NULL") &&
		(pPriceAdjValue1-PDT1 != "NULL")
      )
    then
        priceAdj-Exception-Name4 = pPriceAdjName1-PDT1;
		priceAdj-Exception-Value4 = pPriceAdjValue1-PDT1;
		

    end
end	// rule G-GetExceptionAdj1-Prod1





/* ==========================================================================
 * G-GetExceptionAdj1-Prog1
 *
 *
 */
rule G-GetExceptionAdj1-Prog1()
    if(
        (pPriceAdjName1-PGM1 != "NULL") &&
		(pPriceAdjValue1-PGM1 != "NULL")
      )
    then
        priceAdj-Exception-Name1 = pPriceAdjName1-PGM1;
		priceAdj-Exception-Value1 = pPriceAdjValue1-PGM1;
		

    end
end	// rule G-GetExceptionAdj1-Prog1





/* ==========================================================================
 * G-GetExceptionAdj2-Loan1
 *
 *
 */
rule G-GetExceptionAdj2-Loan1()
    if(
        (pPriceAdjName2-Loan1 != "NULL") &&
		(pPriceAdjValue2-Loan1 != "NULL")
      )
    then
        priceAdj-Exception-Name8 = pPriceAdjName2-Loan1;
		priceAdj-Exception-Value8 = pPriceAdjValue2-Loan1;
		

    end
end	// rule G-GetExceptionAdj2-Loan1





/* ==========================================================================
 * G-GetExceptionAdj2-Prod1
 *
 *
 */
rule G-GetExceptionAdj2-Prod1()
    if(
        (pPriceAdjName2-PDT1 != "NULL") &&
		(pPriceAdjValue2-PDT1 != "NULL")
      )
    then
        priceAdj-Exception-Name5 = pPriceAdjName2-PDT1;
		priceAdj-Exception-Value5 = pPriceAdjValue2-PDT1;
		

    end
end	// rule G-GetExceptionAdj2-Prod1





/* ==========================================================================
 * G-GetExceptionAdj2-Prog1
 *
 *
 */
rule G-GetExceptionAdj2-Prog1()
    if(
        (pPriceAdjName2-PGM1 != "NULL") &&
		(pPriceAdjValue2-PGM1 != "NULL")
      )
    then
        priceAdj-Exception-Name2 = pPriceAdjName2-PGM1;
		priceAdj-Exception-Value2 = pPriceAdjValue2-PGM1;
		

    end
end	// rule G-GetExceptionAdj2-Prog1





/* ==========================================================================
 * G-GetExceptionAdj3-Loan1
 *
 *
 */
rule G-GetExceptionAdj3-Loan1()
    if(
        (pPriceAdjName3-Loan1 != "NULL") &&
		(pPriceAdjValue3-Loan1 != "NULL")
      )
    then
        priceAdj-Exception-Name9 = pPriceAdjName3-Loan1;
		priceAdj-Exception-Value9 = pPriceAdjValue3-Loan1;
		

    end
end	// rule G-GetExceptionAdj3-Loan1





/* ==========================================================================
 * G-GetExceptionAdj3-Prod1
 *
 *
 */
rule G-GetExceptionAdj3-Prod1()
    if(
        (pPriceAdjName3-PDT1 != "NULL") &&
		(pPriceAdjValue3-PDT1 != "NULL")
      )
    then
        priceAdj-Exception-Name6 = pPriceAdjName3-PDT1;
		priceAdj-Exception-Value6 = pPriceAdjValue3-PDT1;
		

    end
end	// rule G-GetExceptionAdj3-Prod1





/* ==========================================================================
 * G-GetExceptionAdj3-Prog1
 *
 *
 */
rule G-GetExceptionAdj3-Prog1()
    if(
        (pPriceAdjName3-PGM1 != "NULL") &&
		(pPriceAdjValue3-PGM1 != "NULL")
      )
    then
        priceAdj-Exception-Name3 = pPriceAdjName3-PGM1;
		priceAdj-Exception-Value3 = pPriceAdjValue3-PGM1;
		

    end
end	// rule G-GetExceptionAdj3-Prog1





/* ==========================================================================
 * G-GetExtensionPeriod1st
 *
 *
 */
rule G-GetExtensionPeriod1st()
    if(
        (pExtensionPeriod1st != "NULL")
      )
    then
        dExtensionPeriod1st = pExtensionPeriod1st;
		

    else
        dExtensionPeriod1st = pRequestedExtensionPeriod;
		

    end
end	// rule G-GetExtensionPeriod1st





/* ==========================================================================
 * G-GetExtensionPeriod2nd
 *
 *
 */
rule G-GetExtensionPeriod2nd()
    if(
        (pExtensionPeriod2nd != "NULL")
      )
    then
        dExtensionPeriod2nd = pExtensionPeriod2nd;
		

    else
        dExtensionPeriod2nd = pRequestedExtensionPeriod;
		

    end
end	// rule G-GetExtensionPeriod2nd





/* ==========================================================================
 * G-GetRateSheetDate
 *
 *
 */
rule G-GetRateSheetDate()
    if(
        (pRateSheetDate1 != "NULL")
      )
    then
        dRateSheetDate = pRateSheetDate1;
		

    else
        dRateSheetDate = pRateSheetDate2;
		

    end
end	// rule G-GetRateSheetDate





/* ==========================================================================
 * G-HandleDeprecatedLockPeriod1st-PRICING
 *
 *
 */
rule G-HandleDeprecatedLockPeriod1st-PRICING()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        LockPeriod1st = lockPeriod1st;
		

    end
end	// rule G-HandleDeprecatedLockPeriod1st-PRICING





/* ==========================================================================
 * G-HandleDeprecatedLockPeriod2nd-PRICING
 *
 *
 */
rule G-HandleDeprecatedLockPeriod2nd-PRICING()
    if(
        (pCombo > 0)
      )
    then
        LockPeriod2nd = lockPeriod2nd;
		

    end
end	// rule G-HandleDeprecatedLockPeriod2nd-PRICING





/* ==========================================================================
 * G-Ineligible4MonthPrepayLock
 *
 *
 */
rule G-Ineligible4MonthPrepayLock()
    if(
        (PrepayTerm1st == 4)
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: 4 Month Prepay is no longer available. Select a different prepay period.");

    end
end	// rule G-Ineligible4MonthPrepayLock





/* ==========================================================================
 * G-IsNotManualProcess
 *
 *
 */
rule G-IsNotManualProcess()
    if(
        (pIsManualProcess == "NULL") ||
		(pIsManualProcess != "Manual Process")
      )
    then
        

    end
end	// rule G-IsNotManualProcess





/* ==========================================================================
 * G-JumboFullDocMaxPaymentShock
 *
 *
 */
rule G-JumboFullDocMaxPaymentShock()
    if(
        (combinedLoanAmount > 1000000) &&
		((DocTypeAbbrev == "Full Doc") ||
		(pDocumentType == "Lite Doc") ||
		(pDocumentType == "Limited Doc"))
      )
    then
        MaxPaymentShock = -1;
		

    end
end	// rule G-JumboFullDocMaxPaymentShock





/* ==========================================================================
 * G-LoanTerm2ndWorkAround
 *
 *
 */
rule G-LoanTerm2ndWorkAround()
    if(
        (pCombo < 1)
      )
    then
        LoanTerm2nd = 0;
		

    end
end	// rule G-LoanTerm2ndWorkAround





/* ==========================================================================
 * G-Lock2ndHomeInvestment
 *
 *
 */
rule G-Lock2ndHomeInvestment()
    if(
        (cvProgram == "Subprime") &&
		((pOccupancy == "Investment") ||
		(pOccupancy == "SecondaryResidence"))
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock:Investment properties and second homes not allowed.");

    end
end	// rule G-Lock2ndHomeInvestment




alias(rule, G-LockedRateLien1, "G-Locked Rate Lien 1");

/* ==========================================================================
 * G-LockedRateLien1
 *
 *
 */
rule G-LockedRateLien1()
    if(
        (pApplicationSource == "UW") &&
		(pLockedDate != "NULL") &&
		(pLienNumber == 1)
      )
    then
        rate1st = pRate;
		rate2nd = pOtherRate;
		tmp_lockedRate11 = rate1st;
		tmp_lockedRate12 = rate2nd;
		
        message(observation, "Locked Rate 1st = <DPM>tmp_lockedRate11</DPM>");
        message(observation, "Locked Rate 2nd = <DPM>tmp_lockedRate12</DPM>");

    end
end	// rule G-LockedRateLien1




alias(rule, G-LockedRateLien2, "G-Locked Rate Lien 2");

/* ==========================================================================
 * G-LockedRateLien2
 *
 *
 */
rule G-LockedRateLien2()
    if(
        (pApplicationSource == "UW") &&
		(pLockedDate != "NULL") &&
		(pLienNumber == 2)
      )
    then
        rate1st = pOtherRate;
		rate2nd = pRate;
		tmp_lockedRate21 = rate1st;
		tmp_lockedRate22 = rate2nd;
		
        message(observation, "Locked Rate 1st = <DPM>tmp_lockedRate21</DPM>");
        message(observation, "Locked Rate 2nd = <DPM>tmp_lockedRate22</DPM>");

    end
end	// rule G-LockedRateLien2





/* ==========================================================================
 * G-LockIneligibleForeignNationalBorrowers
 *
 *
 */
rule G-LockIneligibleForeignNationalBorrowers()
    if(
        (ForeignNationalIndicator == "Y")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "LOCK: Foreign National borrowers are ineligible for BSRM Financing.");

    end
end	// rule G-LockIneligibleForeignNationalBorrowers




alias(rule, G-MarginAdjustmentsInit-2-1, "G-Margin Adjustments Init-2.1");

/* ==========================================================================
 * G-MarginAdjustmentsInit-2-1
 *
 *
 */
rule G-MarginAdjustmentsInit-2-1()
    if(
        (pLoanAmount > 0)
      )
    then
        marginAdj-40YrTerm = 0;
		marginAdj-CashOut = 0;
		marginAdj-CLTV = 0;
		marginAdj-DocumentType = 0;
		marginAdj-FICO = 0;
		marginAdj-LoanAmount = 0;
		marginAdj-LTV = 0;
		marginAdj-NegAm1st = 0;
		marginAdj-NewYorkProperties = 0;
		marginAdj-NoEscrow = 0;
		marginAdj-Price = 0;
		marginAdj-PropertyType = 0;
		marginAdj-Occupancy = 0;
		marginAdj-NumberOfUnits = 0;
		marginAdj-Total = 0;
		

    end
end	// rule G-MarginAdjustmentsInit-2-1





/* ==========================================================================
 * G-MaxLoanAmtPrefOptA
 *
 *
 */
rule G-MaxLoanAmtPrefOptA()
    if(
        ((cvProgram == "Prime-Option ARM") ||
		(programName == "Preferred") ||
		(programName == "Preferred 1st") ||
		(programName == "Preferred 2nd") ||
		(programName == "Preferred SOA") ||
		(programName == "Preferred SOA 1st") ||
		(programName == "Preferred SOA 2nd")) &&
		(pLoanAmount > 2000000)
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Max Loan Amount is $2mm.");

    end
end	// rule G-MaxLoanAmtPrefOptA





/* ==========================================================================
 * G-MaxPaymentShockCalcGT1Mil
 *
 *
 */
rule G-MaxPaymentShockCalcGT1Mil()
    if(
        (pOccupancy == "PrimaryResidence") &&
		(combinedLoanAmount > 1000000) &&
		((pDocumentType == "No Ratio") ||
		(pDocumentType == "No Doc") ||
		(pDocumentType == "No Doc with Assets") ||
		(pDocumentType == "SIVA")) &&
		(CLTV > 75)
      )
    then
        MaxPaymentShock = 2;
		

    end
end	// rule G-MaxPaymentShockCalcGT1Mil





/* ==========================================================================
 * G-MaxPaymentShockCalcNoDoc
 *
 *
 */
rule G-MaxPaymentShockCalcNoDoc()
    if(
        (pOccupancy == "PrimaryResidence") &&
		(combinedLoanAmount <= 1000000) &&
		(CLTV > 80) &&
		((pDocumentType == "No Doc") ||
		(pDocumentType == "No Doc with Assets"))
      )
    then
        MaxPaymentShock = 1.5;
		

    end
end	// rule G-MaxPaymentShockCalcNoDoc





/* ==========================================================================
 * G-MaxPaymentShockCalcNoRatio
 *
 *
 */
rule G-MaxPaymentShockCalcNoRatio()
    if(
        (pOccupancy == "PrimaryResidence") &&
		(combinedLoanAmount <= 1000000) &&
		(pDocumentType == "No Ratio")
      )
    then
        MaxPaymentShock = 1.5;
		

    end
end	// rule G-MaxPaymentShockCalcNoRatio





/* ==========================================================================
 * G-MaxPaymentShockCalcSIVA
 *
 *
 */
rule G-MaxPaymentShockCalcSIVA()
    if(
        (pOccupancy == "PrimaryResidence") &&
		(combinedLoanAmount <= 1000000) &&
		(pDocumentType == "SIVA")
      )
    then
        MaxPaymentShock = 2;
		

    end
end	// rule G-MaxPaymentShockCalcSIVA





/* ==========================================================================
 * G-MaxPaymentShockResetPOS
 *
 *
 */
rule G-MaxPaymentShockResetPOS()
    if(
        (pManualCredit == "Y")
      )
    then
        MaxPaymentShock = -1;
		

    end
end	// rule G-MaxPaymentShockResetPOS





/* ==========================================================================
 * G-MaxPriceNOOBroker
 *
 *
 */
rule G-MaxPriceNOOBroker()
    if(
        (pUserType == "Broker") &&
		(pOccupancy == "Investment")
      )
    then
        MaxPrice1stNOO = lookup("G-MaxPriceNOOBrokerLK1", pDocumentType, globalParam);
		

    end
end	// rule G-MaxPriceNOOBroker





/* ==========================================================================
 * G-MaxPriceNOOCorr
 *
 *
 */
rule G-MaxPriceNOOCorr()
    if(
        (pUserType == "Correspondent") &&
		(pOccupancy == "Investment")
      )
    then
        MaxPrice1stNOO = lookup("G-MaxPriceNOOCorrLK1", pDocumentType, globalParam);
		

    end
end	// rule G-MaxPriceNOOCorr





/* ==========================================================================
 * G-MaxPriceNOORetention
 *
 *
 */
rule G-MaxPriceNOORetention()
    if(
        (pUserType == "Retention") &&
		(pOccupancy == "Investment")
      )
    then
        MaxPrice1stNOO = lookup("G-MaxPriceNOORetentionLK1", pDocumentType, globalParam);
		

    end
end	// rule G-MaxPriceNOORetention





/* ==========================================================================
 * G-MinScoreFullDoc
 *
 *
 */
rule G-MinScoreFullDoc()
    if(
        ((cvProgram != "Prime-Option ARM") ||
		(programName != "Subprime")) &&
		(DocTypeAbbrev == "Full Doc") &&
		(minScore < 620)
      )
    then
        minScore = 620;
		

    end
end	// rule G-MinScoreFullDoc





/* ==========================================================================
 * G-MinScoreStatedDoc
 *
 *
 */
rule G-MinScoreStatedDoc()
    if(
        ((cvProgram != "Prime-Option ARM") ||
		(programName != "Subprime")) &&
		(DocTypeAbbrev == "SVLL") &&
		(minScore < 620)
      )
    then
        minScore = 620;
		

    end
end	// rule G-MinScoreStatedDoc





/* ==========================================================================
 * G-NoCombos
 *
 *
 */
rule G-NoCombos()
    if(
        (pCombo > 0)
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Combo loans are ineligible.");

    end
end	// rule G-NoCombos





/* ==========================================================================
 * G-NoDocNoRatioLock
 *
 *
 */
rule G-NoDocNoRatioLock()
    if(
        (DocTypeAbbrev == "No Ratio") ||
		(DocTypeAbbrev == "No Doc with Assets") ||
		(DocTypeAbbrev == "No Doc")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Documentation type is ineligible.");

    end
end	// rule G-NoDocNoRatioLock




alias(rule, G-OtherPropCashFlow, "G-Other Prop Cash Flow");

/* ==========================================================================
 * G-OtherPropCashFlow
 *
 *
 */
rule G-OtherPropCashFlow()
    if(
        (pOccupancy == "PrimaryResidence")
      )
    then
        OtherPropCashFlow = pNetMtgDebtRent75;
		

    else
        OtherPropCashFlow = pNonPrimaryNetMtgDebtRent75;
		

    end
end	// rule G-OtherPropCashFlow





/* ==========================================================================
 * G-OverrideMaxPrice-Broker1
 *
 *
 */
rule G-OverrideMaxPrice-Broker1()
    if(
        (pOverrideMaxPrice-Loan1 != "NULL") &&
		(pOverrideMaxPrice-Loan1 == "Y") &&
		(pUserType == "Broker")
      )
    then
        cvMaxPrice = cvMaxPrice - 100;
		maxPrice1st = maxPrice1st - 100;
		

    end
end	// rule G-OverrideMaxPrice-Broker1





/* ==========================================================================
 * G-OverrideMaxPrice-Correspondent1
 *
 *
 */
rule G-OverrideMaxPrice-Correspondent1()
    if(
        (pOverrideMaxPrice-Loan1 != "NULL") &&
		(pOverrideMaxPrice-Loan1 == "Y") &&
		(pUserType == "Correspondent")
      )
    then
        cvMaxPrice = cvMaxPrice + 100;
		maxPrice1st = maxPrice1st + 100;
		

    end
end	// rule G-OverrideMaxPrice-Correspondent1




alias(rule, G-PITICalcRule, "G-PITI Calc Rule");

/* ==========================================================================
 * G-PITICalcRule
 *
 *
 */
rule G-PITICalcRule()
    if(
        (pLoanAmount > 0)
      )
    then
        PITI = pi1st + pi2nd + pProposedHazardInsurance + pProposedRealEstateTaxes + pProposedHoaDues + pProposedMtgInsurance + pProposedOtherHousingExpenses + pProposedSubjectPropertyPayment + pProposedFloodInsurance + pSubFinancingPayment;
		

    end
end	// rule G-PITICalcRule




alias(rule, G-PriceAdjIOSOA, "G-PriceAdj IO SOA");

/* ==========================================================================
 * G-PriceAdjIOSOA
 *
 *
 */
rule G-PriceAdjIOSOA()
    if(
        (priceAdj-InterestOnly != 0) &&
		(amortType1st == "5 Yr OptA")
      )
    then
        priceAdj-InterestOnly = 0;
		

    end
end	// rule G-PriceAdjIOSOA




alias(rule, G-PriceAdjustmentsInit-2-1, "G-Price Adjustments Init-2.1");

/* ==========================================================================
 * G-PriceAdjustmentsInit-2-1
 *
 *
 */
rule G-PriceAdjustmentsInit-2-1()
    if(
        (pLoanAmount > 0)
      )
    then
        priceAdj-2YrPrePay = 0;
		priceAdj-40DueIn30 = 0;
		priceAdj-40YrTerm = 0;
		priceAdj-AltAPricingSpecial = 0;
		priceAdj-CashOut = 0;
		priceAdj-CLTV = 0;
		priceAdj-CLTV-LoanAmount = 0;
		priceAdj-DocumentType = 0;
		priceAdj-EscrowHoldback = 0;
		priceAdj-FICO = 0;
		priceAdj-ForeignNational = 0;
		priceAdj-InterestOnly = 0;
		priceAdj-Investor = 0;
		priceAdj-LoanAmount = 0;
		priceAdj-LTV = 0;
		priceAdj-MixedUse = 0;
		priceAdj-NewYorkProperties = 0;
		priceAdj-NoEscrow = 0;
		priceAdj-NonWarrantableCondo = 0;
		priceAdj-NOOLoanAmount = 0;
		priceAdj-NumberofUnits = 0;
		priceAdj-Occupancy = 0;
		priceAdj-PrepayTerm = 0;
		priceAdj-PropertyType = 0;
		priceAdj-Region = 0;
		priceAdj-Rural = 0;
		priceAdj-SOASpecial = 0;
		priceAdj-SOACLTV = 0;
		priceAdj-Total = 0;
		priceAdj-WaiveEscrow = 0;
		priceAdj-Extension1 = 0;
		priceAdj-Extension2 = 0;
		priceAdj-Exception-Name1 = 0;
		priceAdj-Exception-Name2 = 0;
		priceAdj-Exception-Name3 = 0;
		priceAdj-Exception-Name4 = 0;
		priceAdj-Exception-Name5 = 0;
		priceAdj-Exception-Name6 = 0;
		priceAdj-Exception-Name7 = 0;
		priceAdj-Exception-Name8 = 0;
		priceAdj-Exception-Name9 = 0;
		priceAdj-Exception-Value1 = 0;
		priceAdj-Exception-Value2 = 0;
		priceAdj-Exception-Value3 = 0;
		priceAdj-Exception-Value4 = 0;
		priceAdj-Exception-Value5 = 0;
		priceAdj-Exception-Value6 = 0;
		priceAdj-Exception-Value7 = 0;
		priceAdj-Exception-Value8 = 0;
		priceAdj-Exception-Value9 = 0;
		priceAdj-Special = 0;
		priceAdj-5-6PricingSpecial = 0;
		priceAdj-Special30FX80CLTV = 0;
		

    end
end	// rule G-PriceAdjustmentsInit-2-1




alias(rule, G-PricingInitialization, "G-Pricing Initialization");

/* ==========================================================================
 * G-PricingInitialization
 *
 *
 */
rule G-PricingInitialization()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        PrepayIndicator1st = "N";
		PrepayIndicator2nd = "N";
		IOIndicator1st = "N";
		IOIndicator2nd = "N";
		amortType1st = "NA";
		AmortType2nd = "NA";
		rate1st = 0;
		rate2nd = 0;
		cvMaxDTIPI = "Not NA";
		pi1st = 0;
		pi2nd = 0;
		MaxPrice2nd = "NA";
		cvBaseMargin = "NA";
		cvMargin = "NA";
		FinalPrice2nd = 0;
		PaymentShock = 0;
		NoMIFlag = "N";
		cvMaxPaymentShockPI = "Not NA";
		cvIndexValue = 0;
		HLK-MaxNegMargin = 0;
		Index-2 = 0;
		MaxPrice1stCombo = "NULL";
		fEnableExceptionPricing = "TRUE";
		fEnableExtensions = "TRUE";
		fRestrictLocksByCLTV = 0;
		BaseRate1st = 0;
		BaseRate2nd = 0;
		LoanTerm2nd = 0;
		Margin1st = 0;
		Margin2nd = 0;
		maxPrice1st = "NA";
		FinalPrice1st = 0;
		FinalPrice2nd = 0;
		OptA2YrPPStateFlag = "N";
		rateIndexed = 0;
		RateIndexed2nd = 0;
		rateAdj1st-Total = 0;
		tmp_MaxLtv = 0;
		tmp_MaxCltv = 0;
		MarginOverride-Name = "NA";
		MarginOverride-Value = 0;
		RegionCode = 0;
		

    end
end	// rule G-PricingInitialization




alias(rule, G-PropHsgCostCalc, "G-Prop Hsg Cost Calc");

/* ==========================================================================
 * G-PropHsgCostCalc
 *
 *
 */
rule G-PropHsgCostCalc()
    if(
        (pOccupancy == "PrimaryResidence")
      )
    then
        ProposedHousingCost = pi1st + pi2nd + pProposedHazardInsurance + pProposedRealEstateTaxes + pProposedHoaDues + pProposedMtgInsurance + pProposedOtherHousingExpenses + pProposedResidentialPayment + pSubFinancingPayment + pProposedFloodInsurance;
		

    else
        ProposedHousingCost = pPresentMonthlyRent + pPresentHazardInsurance + pPresentRealEstateTaxes + pPresentHoaDues + pPresentMtgInsurance + pPresentOtherHousingExpenses + pProposedPrimaryResidencePI;
		

    end
end	// rule G-PropHsgCostCalc





/* ==========================================================================
 * G-QualRateSetup
 *
 *
 */
rule G-QualRateSetup()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        DefaultQualRate = rate1st;
		fOverrideDefQualRate = "N";
		
        message(observation, "Initializing Default Qual Rate to Note Rate. ");

    end
end	// rule G-QualRateSetup





/* ==========================================================================
 * G-QualRateSetup-Fixed
 *
 *
 */
rule G-QualRateSetup-Fixed()
    if(
        (amortType1st == "Fixed 15") ||
		(amortType1st == "Fixed 30")
      )
    then
        Margin1st = 0;
		DefaultQualRate = rate1st;
		tmp_DefQualRate2 = DefaultQualRate;
		
        message(observation, "Product has FIXED amortization. Default Qual Rate is Note Rate: <DPM>tmp_DefQualRate2</DPM> ");

    end
end	// rule G-QualRateSetup-Fixed





/* ==========================================================================
 * G-QualRateSetup-MN-Override
 *
 *
 */
rule G-QualRateSetup-MN-Override()
    if(
        (pSubjectPropertyState == "MN") &&
		((pOccupancy == "PrimaryResidence") ||
		(pOccupancy == "SecondaryResidence")) &&
		((amortType1st != "Fixed 15") &&
		(amortType1st != "Fixed 30"))
      )
    then
        DefaultQualRate = rate1st;
		fOverrideDefQualRate = "Y";
		tmp_DefQualRate1 = DefaultQualRate;
		
        message(observation, "[Override] MN property: Default Qual Rate is Note Rate: <DPM>tmp_DefQualRate1</DPM>");

    end
end	// rule G-QualRateSetup-MN-Override





/* ==========================================================================
 * G-QualRateSetup-NonIO-NVStateSiva
 *
 *
 */
rule G-QualRateSetup-NonIO-NVStateSiva()
    if(
        (pSubjectPropertyState == "NV") &&
		(fOverrideDefQualRate != "Y") &&
		(cvProgram != "Subprime") &&
		(IOIndicator1st == "N") &&
		((pDocumentType == "SIVA") ||
		(pDocumentType == "Lite Doc"))
      )
    then
        DefaultQualRate = rate1st;
		tmp_DefQualRate5 = DefaultQualRate;
		
        message(observation, "Nevada Stated Doc (SIVA or Lite Doc). Default Qual Rate is Note Rate: <DPM>tmp_DefQualRate5</DPM> ");

    end
end	// rule G-QualRateSetup-NonIO-NVStateSiva





/* ==========================================================================
 * G-QualRateSetup-ShortTermArm
 *
 *
 */
rule G-QualRateSetup-ShortTermArm()
    if(
        (fOverrideDefQualRate != "Y") &&
		(cvProgram != "Subprime") &&
		((amortType1st == "1 Mo Libor") ||
		(amortType1st == "6 Mo Libor") ||
		(amortType1st == "2/6 Mo Libor"))
      )
    then
        DefaultQualRate = rate1st + 2;
		cvRateQual = 2;
		tmp_DefQualRate1 = DefaultQualRate;
		
        message(observation, "Default Qual Rate is Note Rate + 2: <DPM>tmp_DefQualRate1</DPM>");

    end
end	// rule G-QualRateSetup-ShortTermArm





/* ==========================================================================
 * G-QualRateSetup-SubP-NonIO
 *
 *
 */
rule G-QualRateSetup-SubP-NonIO()
    if(
        (fOverrideDefQualRate != "Y") &&
		(cvProgram == "Subprime") &&
		(IOIndicator1st == "N") &&
		((amortType1st != "2/6 Mo Libor") &&
		(amortType1st != "5/6 Mo Libor"))
      )
    then
        rateIndexed = 0;
		DefaultQualRate = rate1st;
		tmp_DefQualRate3 = DefaultQualRate;
		
        message(observation, "Product is SubPrime non-IO. Default Qual Rate is Note Rate: <DPM>tmp_DefQualRate3</DPM> ");

    end
end	// rule G-QualRateSetup-SubP-NonIO





/* ==========================================================================
 * G-QualRateSetup-SubP-NonIO-Full56
 *
 *
 */
rule G-QualRateSetup-SubP-NonIO-Full56()
    if(
        (fOverrideDefQualRate != "Y") &&
		(cvProgram == "Subprime") &&
		(IOIndicator1st == "N") &&
		(amortType1st == "5/6 Mo Libor") &&
		(pDocumentType != "SIVA") &&
		(pDocumentType != "Lite Doc")
      )
    then
        rateIndexed = 0;
		DefaultQualRate = rate1st;
		tmp_DefQualRate3 = DefaultQualRate;
		
        message(observation, "Product is SubPrime non-IO 5/6 Mo Libor (Full Doc). Default Qual Rate is Note Rate: <DPM>tmp_DefQualRate3</DPM> ");

    end
end	// rule G-QualRateSetup-SubP-NonIO-Full56





/* ==========================================================================
 * G-QualRateSetup-SubP-NonIO-Siva56
 *
 *
 */
rule G-QualRateSetup-SubP-NonIO-Siva56()
    if(
        (fOverrideDefQualRate != "Y") &&
		(cvProgram == "Subprime") &&
		(IOIndicator1st == "N") &&
		(amortType1st == "5/6 Mo Libor") &&
		((pDocumentType == "SIVA") ||
		(pDocumentType == "Lite Doc"))
      )
    then
        DefaultQualRate = rate1st;
		tmp_DefQualRate4 = DefaultQualRate;
		
        message(observation, "Product is SubPrime non-IO 5/6 Mo Libor (SIVA or Lite Doc). Default Qual Rate is Note Rate: <DPM>tmp_DefQualRate4</DPM> ");

    end
end	// rule G-QualRateSetup-SubP-NonIO-Siva56




alias(rule, G-RateAdjTXCashOutBROT1, "G-Rate Adj TX CashOut BRO T1");

/* ==========================================================================
 * G-RateAdjTXCashOutBROT1
 *
 *
 */
rule G-RateAdjTXCashOutBROT1()
    if(
        (pUserType == "Broker") &&
		(pLienNumber == 1) &&
		(pSubjectPropertyState == "TX") &&
		(pOccupancy == "PrimaryResidence") &&
		(purposeAbbrev == "CO")
      )
    then
        rateAdj-TXCashOut = lookup("G-RateAdj TX CashOut BRO LK1", cvMtgNoUFMIP, globalParam);
		

    end
end	// rule G-RateAdjTXCashOutBROT1




alias(rule, G-RateAdjTXCashOutRTNT1, "G-Rate Adj TX CashOut RTN T1");

/* ==========================================================================
 * G-RateAdjTXCashOutRTNT1
 *
 *
 */
rule G-RateAdjTXCashOutRTNT1()
    if(
        (pUserType == "Retention") &&
		(pLienNumber == 1) &&
		(pSubjectPropertyState == "TX") &&
		(pOccupancy == "PrimaryResidence") &&
		(purposeAbbrev == "CO")
      )
    then
        rateAdj-TXCashOut = lookup("G-RateAdj TX CashOut RTN LK1", cvMtgNoUFMIP, globalParam);
		

    end
end	// rule G-RateAdjTXCashOutRTNT1




alias(rule, G-RateAdjustmentsInit-2-1, "G-Rate Adjustments Init-2.1");

/* ==========================================================================
 * G-RateAdjustmentsInit-2-1
 *
 *
 */
rule G-RateAdjustmentsInit-2-1()
    if(
        (pLoanAmount > 0)
      )
    then
        rateAdj-40DueIn30 = 0;
		rateAdj-40YrTerm = 0;
		rateAdj-50DueIn30 = 0;
		rateAdj-CashOut = 0;
		rateAdj-CLTV = 0;
		rateAdj-DocumentType = 0;
		rateAdj-FICO = 0;
		rateAdj-LoanAmount = 0;
		rateAdj-LTV = 0;
		rateAdj-Margin = 0;
		rateAdj-NewYorkProperties = 0;
		rateAdj-NoEscrow = 0;
		rateAdj-PropertyType = 0;
		rateAdj-NOOCLTV = 0;
		rateAdj-InterestOnly = 0;
		rateAdj-PrepayTerm = 0;
		rateAdj-30Year = 0;
		rateAdj-NumberOfUnits = 0;
		rateAdj-NoPrepay = 0;
		rateAdj-Occupancy = 0;
		rateAdj-NewYorkProperties = 0;
		rateAdj-Total = 0;
		rateAdj-Purpose = 0;
		rateAdj-NonCAProperty = 0;
		rateAdj-NegAm1st = 0;
		rateAdj-Special = 0;
		rateAdj-BKLs24Months = 0;
		rateAdj-BKLs24Months1st = 0;
		rateAdj-2YrARMSpecial = 0;
		rateAdj-PurchaseSpecial = 0;
		rateAdj-DTI = 0;
		rateAdj-ARM = 0;
		rateAdj-TXCashOut = 0;
		rateAdj-State = 0;
		rateAdj-Rural = 0;
		rateAdj-FullDocSpecial = 0;
		

    end
end	// rule G-RateAdjustmentsInit-2-1





/* ==========================================================================
 * G-ReferLockFlag
 *
 *
 */
rule G-ReferLockFlag()
    if(
        (fRestrictLocksByCLTV > 0) &&
		(CLTV > fRestrictLocksByCLTV)
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: CLTV of <DPM>CLTV</DPM> exceeds the max allowed CLTV of <DPM>fRestrictLocksByCLTV</DPM>.");

    end
end	// rule G-ReferLockFlag





/* ==========================================================================
 * G-RegionalBroker
 *
 *
 */
rule G-RegionalBroker()
    if(
        (pUserType != "Broker")
      )
    then
        

    end
end	// rule G-RegionalBroker





/* ==========================================================================
 * G-RegionCode
 *
 *
 */
rule G-RegionCode()
    if(
        (pLoanAmount == pLoanAmount)
      )
    then
        RegionCode = lookup("G-RegionCode", pSubjectPropertyState, globalParam);
		

    end
end	// rule G-RegionCode





/* ==========================================================================
 * G-RegionCodeNull
 *
 *
 */
rule G-RegionCodeNull()
    if(
        (RegionCode == "NULL")
      )
    then
        RegionCode = 0;
		

    end
end	// rule G-RegionCodeNull





/* ==========================================================================
 * G-RemovePriorExtensionFee1
 *
 *
 */
rule G-RemovePriorExtensionFee1()
    if(
        (fEnableExtensions == "TRUE") &&
		(pConfirmedExtensions > 0)
      )
    then
        FinalPrice1st = FinalPrice1st - priceAdj-Extension1;
		

    end
end	// rule G-RemovePriorExtensionFee1





/* ==========================================================================
 * G-RemovePriorExtensionFee2
 *
 *
 */
rule G-RemovePriorExtensionFee2()
    if(
        (fEnableExtensions == "TRUE") &&
		(pConfirmedExtensions > 1)
      )
    then
        FinalPrice1st = FinalPrice1st - priceAdj-Extension2;
		

    end
end	// rule G-RemovePriorExtensionFee2





/* ==========================================================================
 * G-RestrictNoRatio
 *
 *
 */
rule G-RestrictNoRatio()
    if(
        (pDocumentType == "No Ratio") &&
		(LTV > 90)
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: No Ratio doc type is not allowed for LTVs > 90");

    end
end	// rule G-RestrictNoRatio





/* ==========================================================================
 * G-RetentionNoRestrictLock
 *
 *
 */
rule G-RetentionNoRestrictLock()
    if(
        (pUserType == "Retention")
      )
    then
        fRestrictLocksByCLTV = 0;
		

    end
end	// rule G-RetentionNoRestrictLock




alias(rule, G-Set40due30Flag, "G-Set 40due30 Flag");

/* ==========================================================================
 * G-Set40due30Flag
 *
 *
 */
rule G-Set40due30Flag()
    if(
        ((pLienNumber == 1) &&
		((pAmortizationType != "IOARM") &&
		(pAmortizationType != "IOFixed")) &&
		(pLoanTerm == 480)) ||
		((pLienNumber == 2) &&
		((pOtherAmortizationType != "IOARM") &&
		(pOtherAmortizationType != "IOFixed")) &&
		(pOtherLoanTerm == 480))
      )
    then
        f40due30 = "Y";
		

    end
end	// rule G-Set40due30Flag





/* ==========================================================================
 * G-SetFullDocFlag
 *
 *
 */
rule G-SetFullDocFlag()
    if(
        (pDocumentType == "Full Doc") ||
		(pDocumentType == "1Yr Full Doc") ||
		(pDocumentType == "24 Mth Bank Stmt")
      )
    then
        fIsFullDoc = "TRUE";
		

    else
        fIsFullDoc = "FALSE";
		

    end
end	// rule G-SetFullDocFlag





/* ==========================================================================
 * G-SetMargin1st
 *
 *
 */
rule G-SetMargin1st()
    if(
        (amortType1st != "1 Mo OptA") &&
		(amortType1st != "3 Mo OptA")
      )
    then
        Margin1st = cvMargin;
		

    end
end	// rule G-SetMargin1st





/* ==========================================================================
 * G-SetNegAm1stFlag
 *
 *
 */
rule G-SetNegAm1stFlag()
    if(
        (amortType1st == "5 Yr OptA") ||
		(amortType1st == "1 Mo OptA") ||
		(amortType1st == "3 Mo OptA")
      )
    then
        fNegAm1st = "Y";
		

    else
        fNegAm1st = "N";
		

    end
end	// rule G-SetNegAm1stFlag





/* ==========================================================================
 * G-SetPICalcType
 *
 *
 */
rule G-SetPICalcType()
    if(
        pLoanAmount == pLoanAmount
      )
    then
        fPICalcType = 1;
		

    end
end	// rule G-SetPICalcType





/* ==========================================================================
 * G-SetPpIndicator1st
 *
 *
 */
rule G-SetPpIndicator1st()
    if(
        ((pLienNumber == 1) &&
		((pPrepayTerm-Loan != 0) &&
		(pPrepayTerm-Loan != 4) &&
		(pPrepayTerm-Loan != "NULL"))) ||
		((pLienNumber == 2) &&
		((pOtherPrepayTerm != 0) &&
		(pOtherPrepayTerm != 4) &&
		(pOtherPrepayTerm != "NULL")))
      )
    then
        PrepayIndicator1st = "Y";
		

    end
end	// rule G-SetPpIndicator1st





/* ==========================================================================
 * G-SetPreferredProgramFlag
 *
 *
 */
rule G-SetPreferredProgramFlag()
    if(
        (programName == "Preferred") ||
		(programName == "Preferred 1st") ||
		(programName == "Preferred 2nd") ||
		(programName == "Preferred SOA") ||
		(programName == "Preferred SOA 1st") ||
		(programName == "Preferred SOA 2nd")
      )
    then
        fIsPreferredPgm = "Y";
		

    else
        fIsPreferredPgm = "N";
		

    end
end	// rule G-SetPreferredProgramFlag




alias(rule, G-SetPriceSheetID-LockExpDate-1, "G-SetPriceSheetID-LockExpDate.1");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-1
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-1()
    if(
        (pUserType == "Broker") &&
		(pTierFlag == "T1")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate BRO LK1", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID BRO LK1", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-1




alias(rule, G-SetPriceSheetID-LockExpDate-2, "G-SetPriceSheetID-LockExpDate.2");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-2
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-2()
    if(
        (pUserType == "Broker") &&
		(pTierFlag == "T2")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate BRO LK1", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID BRO LK1", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-2




alias(rule, G-SetPriceSheetID-LockExpDate-3, "G-SetPriceSheetID-LockExpDate.3");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-3
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-3()
    if(
        (pUserType == "Broker") &&
		(pTierFlag == "T3")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate BRO LK3", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID BRO LK3", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-3




alias(rule, G-SetPriceSheetID-LockExpDate-4, "G-SetPriceSheetID-LockExpDate.4");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-4
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-4()
    if(
        (pUserType == "Correspondent") &&
		(pTierFlag == "T1")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate COR LK1", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID COR LK1", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-4




alias(rule, G-SetPriceSheetID-LockExpDate-5, "G-SetPriceSheetID-LockExpDate.5");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-5
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-5()
    if(
        (pUserType == "Correspondent") &&
		(pTierFlag == "T2")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate COR LK2", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID COR LK2", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-5




alias(rule, G-SetPriceSheetID-LockExpDate-6, "G-SetPriceSheetID-LockExpDate.6");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-6
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-6()
    if(
        (pUserType == "Correspondent") &&
		(pTierFlag == "T3")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate COR LK1", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID COR LK1", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-6




alias(rule, G-SetPriceSheetID-LockExpDate-7, "G-SetPriceSheetID-LockExpDate.7");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-7
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-7()
    if(
        (pUserType == "Retention") &&
		(pTierFlag == "T1")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate RTN LK1", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID RTN LK1", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-7




alias(rule, G-SetPriceSheetID-LockExpDate-8, "G-SetPriceSheetID-LockExpDate.8");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-8
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-8()
    if(
        (pUserType == "Retention") &&
		(pTierFlag == "T2")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate RTN LK1", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID RTN LK1", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-8




alias(rule, G-SetPriceSheetID-LockExpDate-9, "G-SetPriceSheetID-LockExpDate.9");

/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate-9
 *
 *
 */
rule G-SetPriceSheetID-LockExpDate-9()
    if(
        (pUserType == "Retention") &&
		(pTierFlag == "T3")
      )
    then
        cvLockExpirationDate = lookup("G-LockExpirationDate RTN LK1", lockPeriod1st, globalParam);
		cvPriceSheetID = lookup("G-PriceSheetID RTN LK1", globalParam, globalParam);
		

    end
end	// rule G-SetPriceSheetID-LockExpDate-9





/* ==========================================================================
 * G-StatedFthb-Lock
 *
 *
 */
rule G-StatedFthb-Lock()
    if(
        ((pDocumentType == "SIVA") ||
		(pDocumentType == "Lite Doc")) &&
		(FTHB != "N")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: First time home buyers are not allowed with Lite Doc or SIVA doc types");

    end
end	// rule G-StatedFthb-Lock




alias(rule, G-SubPropCashFlow1, "G-Sub Prop Cash Flow 1");

/* ==========================================================================
 * G-SubPropCashFlow1
 *
 *
 */
rule G-SubPropCashFlow1()
    if(
        (pOccupancy == "PrimaryResidence")
      )
    then
        SubPropCashFlow = pSubjectPropertyNetRent75;
		

    end
end	// rule G-SubPropCashFlow1




alias(rule, G-SubPropCashFlow2, "G-Sub Prop Cash Flow 2");

/* ==========================================================================
 * G-SubPropCashFlow2
 *
 *
 */
rule G-SubPropCashFlow2()
    if(
        (pOccupancy != "PrimaryResidence")
      )
    then
        SubPropCashFlow = pSubjectPropertyNetRent75 - PITI;
		

    end
end	// rule G-SubPropCashFlow2




alias(rule, G-TotalCashFlowCalc1, "G-Total Cash Flow Calc 1");

/* ==========================================================================
 * G-TotalCashFlowCalc1
 *
 *
 */
rule G-TotalCashFlowCalc1()
    if(
        (pLoanAmount > 0)
      )
    then
        TotalCashFlow = SubPropCashFlow + OtherPropCashFlow;
		

    end
end	// rule G-TotalCashFlowCalc1




alias(rule, G-TotalCashFlowCalc2, "G-Total Cash Flow Calc 2");

/* ==========================================================================
 * G-TotalCashFlowCalc2
 *
 *
 */
rule G-TotalCashFlowCalc2()
    if(
        (TotalCashFlow < 0)
      )
    then
        TotalNegCashFlow = -1 * TotalCashFlow;
		TotalCashFlow = 0;
		

    else
        TotalNegCashFlow = 0;
		

    end
end	// rule G-TotalCashFlowCalc2




alias(rule, G-TotalIncome, "G-Total Income");

/* ==========================================================================
 * G-TotalIncome
 *
 *
 */
rule G-TotalIncome()
    if(
        (pLoanAmount > 0)
      )
    then
        TotalIncome = TotalIncomeAmt + TotalCashFlow;
		

    end
end	// rule G-TotalIncome





/* ==========================================================================
 * G-TotalPriceAdjExceptions
 *
 *
 */
rule G-TotalPriceAdjExceptions()
    if(
        (fEnableExceptionPricing == "TRUE")
      )
    then
        priceAdj-Total = priceAdj-Total + priceAdj-Exception-Value1 + priceAdj-Exception-Value2 + priceAdj-Exception-Value3 + priceAdj-Exception-Value4 + priceAdj-Exception-Value5 + priceAdj-Exception-Value6 + priceAdj-Exception-Value7 + priceAdj-Exception-Value8 + priceAdj-Exception-Value9;
		

    end
end	// rule G-TotalPriceAdjExceptions





/* ==========================================================================
 * G-TotalPriceAdjExtensions
 *
 *
 */
rule G-TotalPriceAdjExtensions()
    if(
        (fEnableExtensions == "TRUE")
      )
    then
        priceAdj-Total = priceAdj-Total + priceAdj-Extension1 + priceAdj-Extension2;
		

    end
end	// rule G-TotalPriceAdjExtensions





/* ==========================================================================
 * NoMI-NONoMILock
 *
 *
 */
rule NoMI-NONoMILock()
    if(
        (programName == "NoMI First Lien")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: NoMI product is ineligible.  ");

    end
end	// rule NoMI-NONoMILock




alias(rule, NoMI-PriceAdjRegion-NPP-High, "NoMI-PriceAdj Region-NPP-High");

/* ==========================================================================
 * NoMI-PriceAdjRegion-NPP-High
 *
 *
 */
rule NoMI-PriceAdjRegion-NPP-High()
    if(
        (programType == "NoMI") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("NoMI-RegAdj-NPP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule NoMI-PriceAdjRegion-NPP-High




alias(rule, NoMI-PriceAdjRegion-NPP-Low, "NoMI-PriceAdj Region-NPP-Low");

/* ==========================================================================
 * NoMI-PriceAdjRegion-NPP-Low
 *
 *
 */
rule NoMI-PriceAdjRegion-NPP-Low()
    if(
        (programType == "NoMI") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("OptA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule NoMI-PriceAdjRegion-NPP-Low




alias(rule, NoMI-PriceAdjRegion-PP-High, "NoMI-PriceAdj Region-PP-High");

/* ==========================================================================
 * NoMI-PriceAdjRegion-PP-High
 *
 *
 */
rule NoMI-PriceAdjRegion-PP-High()
    if(
        (programType == "NoMI") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("NoMI-RegAdj-PP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule NoMI-PriceAdjRegion-PP-High




alias(rule, NoMI-PriceAdjRegion-PP-Low, "NoMI-PriceAdj Region-PP-Low");

/* ==========================================================================
 * NoMI-PriceAdjRegion-PP-Low
 *
 *
 */
rule NoMI-PriceAdjRegion-PP-Low()
    if(
        (programType == "NoMI") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("OptA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule NoMI-PriceAdjRegion-PP-Low





/* ==========================================================================
 * OptA-LockProgramInvalid
 *
 *
 */
rule OptA-LockProgramInvalid()
    if(
        (cvProgram == "Prime-Option ARM")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: OptA program has been suspended until further notice.");

    end
end	// rule OptA-LockProgramInvalid





/* ==========================================================================
 * OptA-No3MoOptA
 *
 *
 */
rule OptA-No3MoOptA()
    if(
        (amortType1st == "3 Mo OptA")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: 3 Month Option ARM is an ineligible product selection.  ");

    end
end	// rule OptA-No3MoOptA





/* ==========================================================================
 * OptA-NonWarrantableCondoRestriction-Lock
 *
 *
 */
rule OptA-NonWarrantableCondoRestriction-Lock()
    if(
        (cvProgram == "Prime-Option ARM") &&
		(pNonWarrantableCondo == "Y")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Non-warrantable condos not allowed");

    end
end	// rule OptA-NonWarrantableCondoRestriction-Lock




alias(rule, OptA-PriceAdjRegion-NPP-High, "OptA-PriceAdj Region-NPP-High");

/* ==========================================================================
 * OptA-PriceAdjRegion-NPP-High
 *
 *
 */
rule OptA-PriceAdjRegion-NPP-High()
    if(
        (programType == "OptA") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("OptA-RegAdj-NPP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule OptA-PriceAdjRegion-NPP-High




alias(rule, OptA-PriceAdjRegion-NPP-Low, "OptA-PriceAdj Region-NPP-Low");

/* ==========================================================================
 * OptA-PriceAdjRegion-NPP-Low
 *
 *
 */
rule OptA-PriceAdjRegion-NPP-Low()
    if(
        (programType == "OptA") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("OptA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule OptA-PriceAdjRegion-NPP-Low




alias(rule, OptA-PriceAdjRegion-PP-High, "OptA-PriceAdj Region-PP-High");

/* ==========================================================================
 * OptA-PriceAdjRegion-PP-High
 *
 *
 */
rule OptA-PriceAdjRegion-PP-High()
    if(
        (programType == "OptA") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("OptA-RegAdj-PP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule OptA-PriceAdjRegion-PP-High




alias(rule, OptA-PriceAdjRegion-PP-Low, "OptA-PriceAdj Region-PP-Low");

/* ==========================================================================
 * OptA-PriceAdjRegion-PP-Low
 *
 *
 */
rule OptA-PriceAdjRegion-PP-Low()
    if(
        (programType == "OptA") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("OptA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule OptA-PriceAdjRegion-PP-Low





/* ==========================================================================
 * OptA-RestrictNoRatioLock
 *
 *
 */
rule OptA-RestrictNoRatioLock()
    if(
        (pDocumentType == "No Ratio") &&
		(cvProgram == "Prime-Option ARM")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: No Ratio doc type is not allowed for OptA program");

    end
end	// rule OptA-RestrictNoRatioLock




alias(rule, Pref-PriceAdjRegion-NPP-High, "Pref-PriceAdj Region-NPP-High");

/* ==========================================================================
 * Pref-PriceAdjRegion-NPP-High
 *
 *
 */
rule Pref-PriceAdjRegion-NPP-High()
    if(
        (programType == "Pref") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("Pref-RegAdj-NPP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule Pref-PriceAdjRegion-NPP-High




alias(rule, Pref-PriceAdjRegion-NPP-Low, "Pref-PriceAdj Region-NPP-Low");

/* ==========================================================================
 * Pref-PriceAdjRegion-NPP-Low
 *
 *
 */
rule Pref-PriceAdjRegion-NPP-Low()
    if(
        (programType == "Pref") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("Pref-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule Pref-PriceAdjRegion-NPP-Low




alias(rule, Pref-PriceAdjRegion-PP-High, "Pref-PriceAdj Region-PP-High");

/* ==========================================================================
 * Pref-PriceAdjRegion-PP-High
 *
 *
 */
rule Pref-PriceAdjRegion-PP-High()
    if(
        (programType == "Pref") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("Pref-RegAdj-PP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule Pref-PriceAdjRegion-PP-High




alias(rule, Pref-PriceAdjRegion-PP-Low, "Pref-PriceAdj Region-PP-Low");

/* ==========================================================================
 * Pref-PriceAdjRegion-PP-Low
 *
 *
 */
rule Pref-PriceAdjRegion-PP-Low()
    if(
        (programType == "Pref") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("Pref-RegAdj-PP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule Pref-PriceAdjRegion-PP-Low




alias(rule, PrefSOA-PriceAdjRegion-NPP-High, "PrefSOA-PriceAdj Region-NPP-High");

/* ==========================================================================
 * PrefSOA-PriceAdjRegion-NPP-High
 *
 *
 */
rule PrefSOA-PriceAdjRegion-NPP-High()
    if(
        (programType == "PrefSOA") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("PrefSOA-RegAdj-NPP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule PrefSOA-PriceAdjRegion-NPP-High




alias(rule, PrefSOA-PriceAdjRegion-NPP-Low, "PrefSOA-PriceAdj Region-NPP-Low");

/* ==========================================================================
 * PrefSOA-PriceAdjRegion-NPP-Low
 *
 *
 */
rule PrefSOA-PriceAdjRegion-NPP-Low()
    if(
        (programType == "PrefSOA") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("PrefSOA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule PrefSOA-PriceAdjRegion-NPP-Low




alias(rule, PrefSOA-PriceAdjRegion-PP-High, "PrefSOA-PriceAdj Region-PP-High");

/* ==========================================================================
 * PrefSOA-PriceAdjRegion-PP-High
 *
 *
 */
rule PrefSOA-PriceAdjRegion-PP-High()
    if(
        (programType == "PrefSOA") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("PrefSOA-RegAdj-PP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule PrefSOA-PriceAdjRegion-PP-High




alias(rule, PrefSOA-PriceAdjRegion-PP-Low, "PrefSOA-PriceAdj Region-PP-Low");

/* ==========================================================================
 * PrefSOA-PriceAdjRegion-PP-Low
 *
 *
 */
rule PrefSOA-PriceAdjRegion-PP-Low()
    if(
        (programType == "PrefSOA") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("PrefSOA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule PrefSOA-PriceAdjRegion-PP-Low





/* ==========================================================================
 * SOA-LockProgramInvalid
 *
 *
 */
rule SOA-LockProgramInvalid()
    if(
        (pLienNumber == 1) &&
		(amortType1st == "5 Yr OptA")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Secure Option Arm program has been suspended until further notice.");

    end
end	// rule SOA-LockProgramInvalid





/* ==========================================================================
 * SOA-MaxDTiGtCltvof80
 *
 *
 */
rule SOA-MaxDTiGtCltvof80()
    if(
        (amortType1st == "5 Yr OptA") &&
		(CLTV > 80) &&
		(maxDTI > 50)
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Max DTI of 50% for the SOA Program with CLTV > 80");

    end
end	// rule SOA-MaxDTiGtCltvof80




alias(rule, SOA-PriceAdjRegion-NPP-High, "SOA-PriceAdj Region-NPP-High");

/* ==========================================================================
 * SOA-PriceAdjRegion-NPP-High
 *
 *
 */
rule SOA-PriceAdjRegion-NPP-High()
    if(
        (programType == "SOA") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("SOA-RegAdj-NPP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule SOA-PriceAdjRegion-NPP-High




alias(rule, SOA-PriceAdjRegion-NPP-Low, "SOA-PriceAdj Region-NPP-Low");

/* ==========================================================================
 * SOA-PriceAdjRegion-NPP-Low
 *
 *
 */
rule SOA-PriceAdjRegion-NPP-Low()
    if(
        (programType == "SOA") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("SOA-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule SOA-PriceAdjRegion-NPP-Low




alias(rule, SOA-PriceAdjRegion-PP-High, "SOA-PriceAdj Region-PP-High");

/* ==========================================================================
 * SOA-PriceAdjRegion-PP-High
 *
 *
 */
rule SOA-PriceAdjRegion-PP-High()
    if(
        (programType == "SOA") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("SOA-RegAdj-PP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule SOA-PriceAdjRegion-PP-High




alias(rule, SOA-PriceAdjRegion-PP-Low, "SOA-PriceAdj Region-PP-Low");

/* ==========================================================================
 * SOA-PriceAdjRegion-PP-Low
 *
 *
 */
rule SOA-PriceAdjRegion-PP-Low()
    if(
        (programType == "SOA") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("SOA-RegAdj-PP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule SOA-PriceAdjRegion-PP-Low




alias(rule, SOA-PriceAdjSOACLTVBROLK1, "SOA-PriceAdj SOA CLTV BRO LK1");

/* ==========================================================================
 * SOA-PriceAdjSOACLTVBROLK1
 *
 *
 */
rule SOA-PriceAdjSOACLTVBROLK1()
    if(
        (amortType1st == "5 Yr OptA")
      )
    then
        priceAdj-SOACLTV = lookup("SOA-PriceAdjSOACLTV Broker LK1", CLTV, globalParam);
		

    end
end	// rule SOA-PriceAdjSOACLTVBROLK1




alias(rule, SOA-PriceAdjSOACLTVBROLK1SubF, "SOA-PriceAdj SOA CLTV BRO LK1SubF");

/* ==========================================================================
 * SOA-PriceAdjSOACLTVBROLK1SubF
 *
 *
 */
rule SOA-PriceAdjSOACLTVBROLK1SubF()
    if(
        (amortType1st == "5 Yr OptA") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-SOACLTV = lookup("SOA-PriceAdjSOACLTV Broker LK1", CLTV, globalParam);
		

    end
end	// rule SOA-PriceAdjSOACLTVBROLK1SubF




alias(rule, SOA-PriceAdjSOACLTVCORLK1, "SOA-PriceAdj SOA CLTV COR LK1");

/* ==========================================================================
 * SOA-PriceAdjSOACLTVCORLK1
 *
 *
 */
rule SOA-PriceAdjSOACLTVCORLK1()
    if(
        (amortType1st == "5 Yr OptA")
      )
    then
        priceAdj-SOACLTV = lookup("SOA-PriceAdjSOACLTV COR LK1", CLTV, globalParam);
		

    end
end	// rule SOA-PriceAdjSOACLTVCORLK1




alias(rule, SOA-PriceAdjSOACLTVCORLK1SubF, "SOA-PriceAdj SOA CLTV COR LK1SubF");

/* ==========================================================================
 * SOA-PriceAdjSOACLTVCORLK1SubF
 *
 *
 */
rule SOA-PriceAdjSOACLTVCORLK1SubF()
    if(
        (amortType1st == "5 Yr OptA") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-SOACLTV = lookup("SOA-PriceAdjSOACLTV COR LK1", CLTV, globalParam);
		

    end
end	// rule SOA-PriceAdjSOACLTVCORLK1SubF




alias(rule, SOA-PriceAdjSOACLTVCORLK2, "SOA-PriceAdj SOA CLTV COR LK2");

/* ==========================================================================
 * SOA-PriceAdjSOACLTVCORLK2
 *
 *
 */
rule SOA-PriceAdjSOACLTVCORLK2()
    if(
        (amortType1st == "5 Yr OptA")
      )
    then
        priceAdj-SOACLTV = lookup("SOA-PriceAdjSOACLTV COR LK2", CLTV, globalParam);
		

    end
end	// rule SOA-PriceAdjSOACLTVCORLK2




alias(rule, SOA-PriceAdjSOACLTVCORLK2SubF, "SOA-PriceAdj SOA CLTV COR LK2SubF");

/* ==========================================================================
 * SOA-PriceAdjSOACLTVCORLK2SubF
 *
 *
 */
rule SOA-PriceAdjSOACLTVCORLK2SubF()
    if(
        (amortType1st == "5 Yr OptA") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-SOACLTV = lookup("SOA-PriceAdjSOACLTV COR LK2", CLTV, globalParam);
		

    end
end	// rule SOA-PriceAdjSOACLTVCORLK2SubF




alias(rule, SOA-PriceAdjSOACLTVRTNLK1, "SOA-PriceAdj SOA CLTV RTN LK1");

/* ==========================================================================
 * SOA-PriceAdjSOACLTVRTNLK1
 *
 *
 */
rule SOA-PriceAdjSOACLTVRTNLK1()
    if(
        (amortType1st == "5 Yr OptA")
      )
    then
        priceAdj-SOACLTV = lookup("SOA-PriceAdjSOACLTV RTN LK1", CLTV, globalParam);
		

    end
end	// rule SOA-PriceAdjSOACLTVRTNLK1




alias(rule, SOA-PriceAdjSOACLTVRTNLK1SubF, "SOA-PriceAdj SOA CLTV RTN LK1SubF");

/* ==========================================================================
 * SOA-PriceAdjSOACLTVRTNLK1SubF
 *
 *
 */
rule SOA-PriceAdjSOACLTVRTNLK1SubF()
    if(
        (amortType1st == "5 Yr OptA") &&
		(fIsSubFin == "TRUE")
      )
    then
        priceAdj-SOACLTV = lookup("SOA-PriceAdjSOACLTV RTN LK1", CLTV, globalParam);
		

    end
end	// rule SOA-PriceAdjSOACLTVRTNLK1SubF





/* ==========================================================================
 * SubP-LockCreditGradeFull
 *
 *
 */
rule SubP-LockCreditGradeFull()
    if(
        (cvProgram == "Subprime") &&
		((creditGrade == "C") ||
		(creditGrade == "C-")) &&
		((fIsFullDoc == "TRUE") ||
		(pDocumentType == "Limited Doc"))
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Ineligible credit grade for Full Doc");

    end
end	// rule SubP-LockCreditGradeFull





/* ==========================================================================
 * SubP-LockCreditGradeSIVA
 *
 *
 */
rule SubP-LockCreditGradeSIVA()
    if(
        (cvProgram == "Subprime") &&
		((creditGrade == "C") ||
		(creditGrade == "B")) &&
		((pDocumentType == "SIVA") ||
		(pDocumentType == "Lite Doc"))
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Ineligible credit grade for SIVA or Lite Doc");

    end
end	// rule SubP-LockCreditGradeSIVA





/* ==========================================================================
 * SubP-LockMaxLTVFLLowCondo
 *
 *
 */
rule SubP-LockMaxLTVFLLowCondo()
    if(
        (cvProgram == "Subprime") &&
		(pPropertyType == "LowRiseCondo") &&
		(LTV > 80) &&
		(pSubjectPropertyState == "FL")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Check guidelines for program restrictions.");

    end
end	// rule SubP-LockMaxLTVFLLowCondo





/* ==========================================================================
 * SubP-LockMaxLTVFLMidHighCondo
 *
 *
 */
rule SubP-LockMaxLTVFLMidHighCondo()
    if(
        (cvProgram == "Subprime") &&
		((pPropertyType == "MidRiseCondo") ||
		(pPropertyType == "HighRiseCondo")) &&
		(LTV > 75) &&
		(pSubjectPropertyState == "FL")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Check guidelines for program restrictions.");

    end
end	// rule SubP-LockMaxLTVFLMidHighCondo





/* ==========================================================================
 * SubP-LockMaxLTVNOO3-4Unit
 *
 *
 */
rule SubP-LockMaxLTVNOO3-4Unit()
    if(
        (cvProgram == "Subprime") &&
		((pPropertyType == "LowRiseCondo") ||
		(pPropertyType == "MidRiseCondo") ||
		(pPropertyType == "HighRiseCondo")) &&
		(LTV > 70) &&
		(pOccupancy == "Investment")
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Check guidelines for program restrictions.");

    end
end	// rule SubP-LockMaxLTVNOO3-4Unit





/* ==========================================================================
 * SubP-LockProgramDocStateofNV
 *
 *
 */
rule SubP-LockProgramDocStateofNV()
    if(
        (pSubjectPropertyState == "NV") &&
		(cvProgram == "Subprime") &&
		((pDocumentType == "SIVA") ||
		(pDocumentType == "Lite Doc"))
      )
    then
        Decision = "Referred";
		
        message(exception,  exception, "Lock: Selected doc type with SubPrime program is NOT allowed in the State of Nevada.");

    end
end	// rule SubP-LockProgramDocStateofNV




alias(rule, SubP-PriceAdjRegion-NPP-High, "SubP-PriceAdj Region-NPP-High");

/* ==========================================================================
 * SubP-PriceAdjRegion-NPP-High
 *
 *
 */
rule SubP-PriceAdjRegion-NPP-High()
    if(
        (programType == "SubP") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("SubP-RegAdj-NPP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule SubP-PriceAdjRegion-NPP-High




alias(rule, SubP-PriceAdjRegion-NPP-Low, "SubP-PriceAdj Region-NPP-Low");

/* ==========================================================================
 * SubP-PriceAdjRegion-NPP-Low
 *
 *
 */
rule SubP-PriceAdjRegion-NPP-Low()
    if(
        (programType == "SubP") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan < 12)
      )
    then
        priceAdj-Region = lookup("SubP-RegAdj-NPP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule SubP-PriceAdjRegion-NPP-Low




alias(rule, SubP-PriceAdjRegion-PP-High, "SubP-PriceAdj Region-PP-High");

/* ==========================================================================
 * SubP-PriceAdjRegion-PP-High
 *
 *
 */
rule SubP-PriceAdjRegion-PP-High()
    if(
        (programType == "SubP") &&
		(loanAmount1st > 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("SubP-RegAdj-PP-High-LK", amortType1st, RegionCode);
		

    end
end	// rule SubP-PriceAdjRegion-PP-High




alias(rule, SubP-PriceAdjRegion-PP-Low, "SubP-PriceAdj Region-PP-Low");

/* ==========================================================================
 * SubP-PriceAdjRegion-PP-Low
 *
 *
 */
rule SubP-PriceAdjRegion-PP-Low()
    if(
        (programType == "SubP") &&
		(loanAmount1st <= 417000) &&
		(pPrepayTerm-Loan >= 12)
      )
    then
        priceAdj-Region = lookup("SubP-RegAdj-PP-Low-LK", amortType1st, RegionCode);
		

    end
end	// rule SubP-PriceAdjRegion-PP-Low





/* ==========================================================================
 * WC-DetermineLockPeriod
 *
 *
 */
rule WC-DetermineLockPeriod()
    if(
        (pRateSheetDate2 == "NULL") &&
		(pPreviousLockPeriod != "NULL")
      )
    then
        lockPeriod1st = pPreviousLockPeriod;
		

    end
end	// rule WC-DetermineLockPeriod





/* ==========================================================================
 * WC-RemoveRateAdjs
 *
 *
 */
rule WC-RemoveRateAdjs()
    if(
        ((fUsingLockedValues == "TRUE") &&
		(rateAdj-Total != 0))
      )
    then
        rate1st = rate1st - rateAdj-Total;
		

    end
end	// rule WC-RemoveRateAdjs





/* ==========================================================================
 * WC-SetToLockedRate
 *
 *
 */
rule WC-SetToLockedRate()
    if(
        (fUsingLockedValues == "TRUE")
      )
    then
        rate1st = pLockedVersionRate;
		

    end
end	// rule WC-SetToLockedRate





/* ==========================================================================
 * WC-SetToLockedRateAdj
 *
 *
 */
rule WC-SetToLockedRateAdj()
    if(
        (fUsingLockedValues == "TRUE")
      )
    then
        rateAdj-Total = rateAdj1st-Total;
		

    end
end	// rule WC-SetToLockedRateAdj





/* ==========================================================================
 * WC-SetUsingLockedValuesFlag
 *
 *
 */
rule WC-SetUsingLockedValuesFlag()
    if(
        (((pLockedVersionRate != "NULL") &&
		((cvProgram == "Prime") ||
		(cvProgram == "Subprime"))) ||
		((pLockedVersionMargin != "NULL") &&
		(cvProgram == "Prime-Option ARM")))
      )
    then
        fUsingLockedValues = "TRUE";
		

    else
        fUsingLockedValues = "FALSE";
		

    end
end	// rule WC-SetUsingLockedValuesFlag




alias(rule, ZAltA-MaxDTIPICalc4, "ZAltA-Max DTI PI Calc 4");

/* ==========================================================================
 * ZAltA-MaxDTIPICalc4
 *
 *
 */
rule ZAltA-MaxDTIPICalc4()
    if(
        (pOccupancy != "PrimaryResidence") &&
		(TotalCashFlow >= 0)
      )
    then
        cvMaxDTIPI = (-1 * (((TotalMoPaymts * 100) / maxDTI) - (TotalIncomeAmt + OtherPropCashFlow + pSubjectPropertyNetRent75) + pi2nd + ProposedExpenses));
		

    end
end	// rule ZAltA-MaxDTIPICalc4








// +++++++++++++++++++++++++ Ruleset Definitions +++++++++++++++++++++++++
		
alias(ruleset, AltA-AmortType1stRuleset, "AltA-Amort Type 1st Ruleset");

/* ==========================================================================
 * AltA-AmortType1stRuleset 
 *
 *
 */
ruleset AltA-AmortType1stRuleset(true)
    rule  G-1stAmortType1();
    rule  G-1stAmortType2();
    rule  G-1stAmortType3();
    rule  G-1stAmortType4();
    rule  G-1stAmortType5();
    rule  G-1stAmortType6();
    rule  G-1stAmortType7();
    rule  G-1stAmortType8();
    rule  G-1stAmortType9();

end // ruleset AltA-AmortType1stRuleset




alias(ruleset, AltA-FinalMaxPrice1stBRORuleset, "AltA-Final Max Price 1st BRO Ruleset");

/* ==========================================================================
 * AltA-FinalMaxPrice1stBRORuleset 
 *
 *
 */
ruleset AltA-FinalMaxPrice1stBRORuleset(continue)
    rule  AltA-FinalMaxPrice1stBRORule1();
    rule  AltA-FinalMaxPrice1stBRORule2();
    rule  AltA-FinalMaxPrice1stBRORule3();

end // ruleset AltA-FinalMaxPrice1stBRORuleset




alias(ruleset, AltA-FinalMaxPrice1stCORRuleset, "AltA-Final Max Price 1st COR Ruleset");

/* ==========================================================================
 * AltA-FinalMaxPrice1stCORRuleset 
 *
 *
 */
ruleset AltA-FinalMaxPrice1stCORRuleset(continue)
    rule  AltA-FinalMaxPrice1stCORRule1();
    rule  AltA-FinalMaxPrice1stCORRule2();
    rule  AltA-FinalMaxPrice1stCORRule3();

end // ruleset AltA-FinalMaxPrice1stCORRuleset




alias(ruleset, AltA-GetFinalPrice1st10-6, "AltA-GetFinalPrice1st 10-6");

/* ==========================================================================
 * AltA-GetFinalPrice1st10-6 (PowerLookup)
 *
 *
 */
ruleset AltA-GetFinalPrice1st10-6(true, PL)
    rule  AltA-GetFinalPrice1st10-6-1();
    rule  AltA-GetFinalPrice1st10-6-2();
    rule  AltA-GetFinalPrice1st10-6-3();
    rule  AltA-GetFinalPrice1st10-6-4();
    rule  AltA-GetFinalPrice1st10-6-5();
    rule  AltA-GetFinalPrice1st10-6-6();
    rule  AltA-GetFinalPrice1st10-6-7();
    rule  AltA-GetFinalPrice1st10-6-8();
    rule  AltA-GetFinalPrice1st10-6-9();
    rule  AltA-GetFinalPrice1st10-6-10();
    rule  AltA-GetFinalPrice1st10-6-11();
    rule  AltA-GetFinalPrice1st10-6-12();
    rule  AltA-GetFinalPrice1st10-6-13();
    rule  AltA-GetFinalPrice1st10-6-14();
    rule  AltA-GetFinalPrice1st10-6-15();
    rule  AltA-GetFinalPrice1st10-6-16();
    rule  AltA-GetFinalPrice1st10-6-17();
    rule  AltA-GetFinalPrice1st10-6-18();
    rule  AltA-GetFinalPrice1st10-6-19();
    rule  AltA-GetFinalPrice1st10-6-20();
    rule  AltA-GetFinalPrice1st10-6-21();
    rule  AltA-GetFinalPrice1st10-6-22();
    rule  AltA-GetFinalPrice1st10-6-23();
    rule  AltA-GetFinalPrice1st10-6-24();
    rule  AltA-GetFinalPrice1st10-6-25();
    rule  AltA-GetFinalPrice1st10-6-26();
    rule  AltA-GetFinalPrice1st10-6-27();
    rule  AltA-GetFinalPrice1st10-6-28();
    rule  AltA-GetFinalPrice1st10-6-29();
    rule  AltA-GetFinalPrice1st10-6-30();

end // ruleset AltA-GetFinalPrice1st10-6





/* ==========================================================================
 * AltA-GetMargin-Caps-Index (PowerLookup)
 *
 *
 */
ruleset AltA-GetMargin-Caps-Index(true, PL)
    rule  AltA-GetMargin-Caps-Index-1();
    rule  AltA-GetMargin-Caps-Index-2();
    rule  AltA-GetMargin-Caps-Index-3();
    rule  AltA-GetMargin-Caps-Index-4();
    rule  AltA-GetMargin-Caps-Index-5();
    rule  AltA-GetMargin-Caps-Index-6();

end // ruleset AltA-GetMargin-Caps-Index




alias(ruleset, AltA-GetMaxPrice1stT1, "AltA-GetMaxPrice1st T1");

/* ==========================================================================
 * AltA-GetMaxPrice1stT1 
 *
 *
 */
ruleset AltA-GetMaxPrice1stT1(continue)
    rule  AltA-MaxPrice1stBROT1();
    rule  AltA-MaxPrice1stCORT1();
    rule  AltA-MaxPrice1stRTNT1();
    rule  G-MaxPriceNOOBroker();
    rule  G-MaxPriceNOOCorr();
    rule  G-MaxPriceNOORetention();
    rule  AltA-MaxPrice1mmLnAmtBRO();
    rule  AltA-MaxPrice1mmLnAmtCOR();
    rule  AltA-MaxPrice1mmLnAmtRTN();

end // ruleset AltA-GetMaxPrice1stT1




alias(ruleset, AltA-GetRate1st10-6, "AltA-GetRate1st 10-6");

/* ==========================================================================
 * AltA-GetRate1st10-6 (PowerLookup)
 *
 *
 */
ruleset AltA-GetRate1st10-6(true, PL)
    rule  AltA-GetRate1st10-6-1();
    rule  AltA-GetRate1st10-6-2();
    rule  AltA-GetRate1st10-6-3();
    rule  AltA-GetRate1st10-6-4();
    rule  AltA-GetRate1st10-6-5();
    rule  AltA-GetRate1st10-6-6();
    rule  AltA-GetRate1st10-6-7();
    rule  AltA-GetRate1st10-6-8();
    rule  AltA-GetRate1st10-6-9();
    rule  AltA-GetRate1st10-6-10();
    rule  AltA-GetRate1st10-6-11();
    rule  AltA-GetRate1st10-6-12();
    rule  AltA-GetRate1st10-6-13();
    rule  AltA-GetRate1st10-6-14();
    rule  AltA-GetRate1st10-6-15();
    rule  AltA-GetRate1st10-6-16();
    rule  AltA-GetRate1st10-6-17();
    rule  AltA-GetRate1st10-6-18();
    rule  AltA-GetRate1st10-6-19();
    rule  AltA-GetRate1st10-6-20();
    rule  AltA-GetRate1st10-6-21();
    rule  AltA-GetRate1st10-6-22();
    rule  AltA-GetRate1st10-6-23();
    rule  AltA-GetRate1st10-6-24();
    rule  AltA-GetRate1st10-6-25();
    rule  AltA-GetRate1st10-6-26();
    rule  AltA-GetRate1st10-6-27();
    rule  AltA-GetRate1st10-6-28();
    rule  AltA-GetRate1st10-6-29();
    rule  AltA-GetRate1st10-6-30();
    rule  AltA-GetRate1st10-6-31();
    rule  AltA-GetRate1st10-6-32();
    rule  AltA-GetRate1st10-6-33();
    rule  AltA-GetRate1st10-6-34();
    rule  AltA-GetRate1st10-6-35();
    rule  AltA-GetRate1st10-6-36();
    rule  AltA-GetRate1st10-6-37();
    rule  AltA-GetRate1st10-6-38();
    rule  AltA-GetRate1st10-6-39();
    rule  AltA-GetRate1st10-6-40();
    rule  AltA-GetRate1st10-6-41();
    rule  AltA-GetRate1st10-6-42();
    rule  AltA-GetRate1st10-6-43();
    rule  AltA-GetRate1st10-6-44();
    rule  AltA-GetRate1st10-6-45();
    rule  AltA-GetRate1st10-6-46();
    rule  AltA-GetRate1st10-6-47();
    rule  AltA-GetRate1st10-6-48();
    rule  AltA-GetRate1st10-6-49();
    rule  AltA-GetRate1st10-6-50();
    rule  AltA-GetRate1st10-6-51();
    rule  AltA-GetRate1st10-6-52();
    rule  AltA-GetRate1st10-6-53();
    rule  AltA-GetRate1st10-6-54();
    rule  AltA-GetRate1st10-6-55();
    rule  AltA-GetRate1st10-6-56();
    rule  AltA-GetRate1st10-6-57();
    rule  AltA-GetRate1st10-6-58();
    rule  AltA-GetRate1st10-6-59();
    rule  AltA-GetRate1st10-6-60();
    rule  AltA-GetRate1st10-6-61();
    rule  AltA-GetRate1st10-6-62();
    rule  AltA-GetRate1st10-6-63();
    rule  AltA-GetRate1st10-6-64();
    rule  AltA-GetRate1st10-6-65();
    rule  AltA-GetRate1st10-6-66();
    rule  AltA-GetRate1st10-6-67();
    rule  AltA-GetRate1st10-6-68();
    rule  AltA-GetRate1st10-6-69();
    rule  AltA-GetRate1st10-6-70();
    rule  AltA-GetRate1st10-6-71();
    rule  AltA-GetRate1st10-6-72();
    rule  AltA-GetRate1st10-6-73();
    rule  AltA-GetRate1st10-6-74();
    rule  AltA-GetRate1st10-6-75();
    rule  AltA-GetRate1st10-6-76();
    rule  AltA-GetRate1st10-6-77();
    rule  AltA-GetRate1st10-6-78();
    rule  AltA-GetRate1st10-6-79();
    rule  AltA-GetRate1st10-6-80();
    rule  AltA-GetRate1st10-6-81();
    rule  AltA-GetRate1st10-6-82();
    rule  AltA-GetRate1st10-6-83();
    rule  AltA-GetRate1st10-6-84();
    rule  AltA-GetRate1st10-6-85();
    rule  AltA-GetRate1st10-6-86();
    rule  AltA-GetRate1st10-6-87();
    rule  AltA-GetRate1st10-6-88();
    rule  AltA-GetRate1st10-6-89();
    rule  AltA-GetRate1st10-6-90();
    rule  AltA-GetRate1st10-6-91();
    rule  AltA-GetRate1st10-6-92();
    rule  AltA-GetRate1st10-6-93();
    rule  AltA-GetRate1st10-6-94();
    rule  AltA-GetRate1st10-6-95();
    rule  AltA-GetRate1st10-6-96();
    rule  AltA-GetRate1st10-6-97();
    rule  AltA-GetRate1st10-6-98();
    rule  AltA-GetRate1st10-6-99();
    rule  AltA-GetRate1st10-6-100();
    rule  AltA-GetRate1st10-6-101();
    rule  AltA-GetRate1st10-6-102();
    rule  AltA-GetRate1st10-6-103();
    rule  AltA-GetRate1st10-6-104();
    rule  AltA-GetRate1st10-6-105();
    rule  AltA-GetRate1st10-6-106();
    rule  AltA-GetRate1st10-6-107();
    rule  AltA-GetRate1st10-6-108();
    rule  AltA-GetRate1st10-6-109();
    rule  AltA-GetRate1st10-6-110();
    rule  AltA-GetRate1st10-6-111();
    rule  AltA-GetRate1st10-6-112();
    rule  AltA-GetRate1st10-6-113();
    rule  AltA-GetRate1st10-6-114();
    rule  AltA-GetRate1st10-6-115();
    rule  AltA-GetRate1st10-6-116();
    rule  AltA-GetRate1st10-6-117();
    rule  AltA-GetRate1st10-6-118();
    rule  AltA-GetRate1st10-6-119();
    rule  AltA-GetRate1st10-6-120();

end // ruleset AltA-GetRate1st10-6




alias(ruleset, AltA-MaxDTIPICalcRuleset, "AltA-Max DTI PI Calc Ruleset");

/* ==========================================================================
 * AltA-MaxDTIPICalcRuleset 
 *
 *
 */
ruleset AltA-MaxDTIPICalcRuleset(true)
    rule  G-1stLoanCheckRule();
    rule  AltA-MaxDTIPICalc1();
    rule  AltA-MaxDTIPICalc2();
    rule  AltA-MaxDTIPICalc3();
    rule  ZAltA-MaxDTIPICalc4();

end // ruleset AltA-MaxDTIPICalcRuleset




alias(ruleset, AltA-MaxPymtShockPICalcRuleset, "AltA-Max Pymt Shock PI Calc Ruleset");

/* ==========================================================================
 * AltA-MaxPymtShockPICalcRuleset 
 *
 *
 */
ruleset AltA-MaxPymtShockPICalcRuleset(true)
    rule  G-1stLoanCheckRule();
    rule  AltA-MaxPymtShockPICalc1();
    rule  AltA-MaxPymtShockPICalc2();
    rule  AltA-MaxPymtShockPICalc3();

end // ruleset AltA-MaxPymtShockPICalcRuleset




alias(ruleset, AltA-PaymentShockCalcRuleset, "AltA-Payment Shock Calc Ruleset");

/* ==========================================================================
 * AltA-PaymentShockCalcRuleset 
 *
 *
 */
ruleset AltA-PaymentShockCalcRuleset(true)
    rule  AltA-PaymentShockCalc2();
    rule  AltA-PaymentShockCalc3();

end // ruleset AltA-PaymentShockCalcRuleset





/* ==========================================================================
 * AltA-ProgramType 
 *
 *
 */
ruleset AltA-ProgramType(continue)
    rule  AltA-ProgramType();

end // ruleset AltA-ProgramType




alias(ruleset, AltA-RateAdj1struleset, "AltA-RateAdj 1st ruleset");

/* ==========================================================================
 * AltA-RateAdj1struleset 
 *
 *
 */
ruleset AltA-RateAdj1struleset(continue)
    rule  AltA-RateAdjComboDocTypeBRO();
    rule  AltA-RateAdjComboDocTypeCOR();
    rule  AltA-RateAdjComboDocTypeRTN();
    rule  AltA-RateAdjComboNOOCltvBRO();
    rule  AltA-RateAdjComboNOOCltvCOR();
    rule  AltA-RateAdjComboNOOCltvRTN();
    rule  AltA-RateAdjDocTypeBRO();
    rule  AltA-RateAdjDocTypeCOR();
    rule  AltA-RateAdjDocTypeRTN();
    rule  AltA-RateAdjNOOCltvBRO();
    rule  AltA-RateAdjNOOCltvCOR();
    rule  AltA-RateAdjNOOCltvRTN();

end // ruleset AltA-RateAdj1struleset





/* ==========================================================================
 * AltA-SetLookupNameT1 (PowerLookup)
 *
 *
 */
ruleset AltA-SetLookupNameT1(true, PL)
    rule  AltA-SetLookupNameT1-1();
    rule  AltA-SetLookupNameT1-2();
    rule  AltA-SetLookupNameT1-3();
    rule  AltA-SetLookupNameT1-4();
    rule  AltA-SetLookupNameT1-5();
    rule  AltA-SetLookupNameT1-6();
    rule  AltA-SetLookupNameT1-7();
    rule  AltA-SetLookupNameT1-8();
    rule  AltA-SetLookupNameT1-9();
    rule  AltA-SetLookupNameT1-10();
    rule  AltA-SetLookupNameT1-11();
    rule  AltA-SetLookupNameT1-12();
    rule  AltA-SetLookupNameT1-13();
    rule  AltA-SetLookupNameT1-14();
    rule  AltA-SetLookupNameT1-15();
    rule  AltA-SetLookupNameT1-16();
    rule  AltA-SetLookupNameT1-17();
    rule  AltA-SetLookupNameT1-18();
    rule  AltA-SetLookupNameT1-19();
    rule  AltA-SetLookupNameT1-20();
    rule  AltA-SetLookupNameT1-21();
    rule  AltA-SetLookupNameT1-22();
    rule  AltA-SetLookupNameT1-23();
    rule  AltA-SetLookupNameT1-24();
    rule  AltA-SetLookupNameT1-25();
    rule  AltA-SetLookupNameT1-26();
    rule  AltA-SetLookupNameT1-27();
    rule  AltA-SetLookupNameT1-28();
    rule  AltA-SetLookupNameT1-29();
    rule  AltA-SetLookupNameT1-30();
    rule  AltA-SetLookupNameT1-31();
    rule  AltA-SetLookupNameT1-32();
    rule  AltA-SetLookupNameT1-33();
    rule  AltA-SetLookupNameT1-34();
    rule  AltA-SetLookupNameT1-35();
    rule  AltA-SetLookupNameT1-36();
    rule  AltA-SetLookupNameT1-37();
    rule  AltA-SetLookupNameT1-38();
    rule  AltA-SetLookupNameT1-39();
    rule  AltA-SetLookupNameT1-40();
    rule  AltA-SetLookupNameT1-41();
    rule  AltA-SetLookupNameT1-42();
    rule  AltA-SetLookupNameT1-43();
    rule  AltA-SetLookupNameT1-44();
    rule  AltA-SetLookupNameT1-45();
    rule  AltA-SetLookupNameT1-46();
    rule  AltA-SetLookupNameT1-47();
    rule  AltA-SetLookupNameT1-48();
    rule  AltA-SetLookupNameT1-49();
    rule  AltA-SetLookupNameT1-50();
    rule  AltA-SetLookupNameT1-51();
    rule  AltA-SetLookupNameT1-52();
    rule  AltA-SetLookupNameT1-53();
    rule  AltA-SetLookupNameT1-54();
    rule  AltA-SetLookupNameT1-55();
    rule  AltA-SetLookupNameT1-56();
    rule  AltA-SetLookupNameT1-57();
    rule  AltA-SetLookupNameT1-58();
    rule  AltA-SetLookupNameT1-59();
    rule  AltA-SetLookupNameT1-60();
    rule  AltA-SetLookupNameT1-61();
    rule  AltA-SetLookupNameT1-62();
    rule  AltA-SetLookupNameT1-63();
    rule  AltA-SetLookupNameT1-64();
    rule  AltA-SetLookupNameT1-65();
    rule  AltA-SetLookupNameT1-66();
    rule  AltA-SetLookupNameT1-67();
    rule  AltA-SetLookupNameT1-68();
    rule  AltA-SetLookupNameT1-69();
    rule  AltA-SetLookupNameT1-70();
    rule  AltA-SetLookupNameT1-71();
    rule  AltA-SetLookupNameT1-72();
    rule  AltA-SetLookupNameT1-73();
    rule  AltA-SetLookupNameT1-74();
    rule  AltA-SetLookupNameT1-75();
    rule  AltA-SetLookupNameT1-76();
    rule  AltA-SetLookupNameT1-77();
    rule  AltA-SetLookupNameT1-78();
    rule  AltA-SetLookupNameT1-79();
    rule  AltA-SetLookupNameT1-80();
    rule  AltA-SetLookupNameT1-81();
    rule  AltA-SetLookupNameT1-82();
    rule  AltA-SetLookupNameT1-83();
    rule  AltA-SetLookupNameT1-84();
    rule  AltA-SetLookupNameT1-85();
    rule  AltA-SetLookupNameT1-86();
    rule  AltA-SetLookupNameT1-87();
    rule  AltA-SetLookupNameT1-88();
    rule  AltA-SetLookupNameT1-89();
    rule  AltA-SetLookupNameT1-90();
    rule  AltA-SetLookupNameT1-91();
    rule  AltA-SetLookupNameT1-92();
    rule  AltA-SetLookupNameT1-93();
    rule  AltA-SetLookupNameT1-94();
    rule  AltA-SetLookupNameT1-95();
    rule  AltA-SetLookupNameT1-96();
    rule  AltA-SetLookupNameT1-97();
    rule  AltA-SetLookupNameT1-98();
    rule  AltA-SetLookupNameT1-99();
    rule  AltA-SetLookupNameT1-100();
    rule  AltA-SetLookupNameT1-101();
    rule  AltA-SetLookupNameT1-102();
    rule  AltA-SetLookupNameT1-103();
    rule  AltA-SetLookupNameT1-104();
    rule  AltA-SetLookupNameT1-105();
    rule  AltA-SetLookupNameT1-106();
    rule  AltA-SetLookupNameT1-107();
    rule  AltA-SetLookupNameT1-108();
    rule  AltA-SetLookupNameT1-109();
    rule  AltA-SetLookupNameT1-110();
    rule  AltA-SetLookupNameT1-111();
    rule  AltA-SetLookupNameT1-112();
    rule  AltA-SetLookupNameT1-113();
    rule  AltA-SetLookupNameT1-114();
    rule  AltA-SetLookupNameT1-115();
    rule  AltA-SetLookupNameT1-116();
    rule  AltA-SetLookupNameT1-117();
    rule  AltA-SetLookupNameT1-118();
    rule  AltA-SetLookupNameT1-119();
    rule  AltA-SetLookupNameT1-120();

end // ruleset AltA-SetLookupNameT1




alias(ruleset, AltA-SetPriceAdjustments1stT1, "AltA-SetPriceAdjustments1st T1");

/* ==========================================================================
 * AltA-SetPriceAdjustments1stT1 
 *
 *
 */
ruleset AltA-SetPriceAdjustments1stT1(continue)
    rule  AltA-GetPriceAdjsBROT1();
    rule  AltA-PriceAdjFxdLnAmtBROT1();
    rule  AltA-PriceAdjNoEscrowBROT1();
    rule  AltA-PriceAdjIOFixedBROT1();
    rule  AltA-PriceAdjNOOLnAmtBROT1();
    rule  AltA-PriceAdjDocTypeLT660BROT1();
    rule  AltA-PriceAdj40due30BROT1();
    rule  AltA-GetPriceAdjsCORT1();
    rule  AltA-PriceAdjFxdLnAmtCORT1();
    rule  AltA-PriceAdjNoEscrowCORT1();
    rule  AltA-PriceAdjIOFixedCORT1();
    rule  AltA-PriceAdjNOOLnAmtCORT1();
    rule  AltA-PriceAdjDocTypeLT660CORT1();
    rule  AltA-PriceAdj40due30CORT1();
    rule  AltA-GetPriceAdjsRTNT1();
    rule  AltA-PriceAdjFxdLnAmtRTNT1();
    rule  AltA-PriceAdjNoEscrowRTNT1();
    rule  AltA-PriceAdjIOFixedRTNT1();
    rule  AltA-PriceAdjNOOLnAmtRTNT1();
    rule  AltA-PriceAdjDocTypeLT660RTNT1();
    rule  AltA-PriceAdj40due30RTNT1();
    rule  SOA-PriceAdjSOACLTVBROLK1();
    rule  SOA-PriceAdjSOACLTVCORLK1();
    rule  SOA-PriceAdjSOACLTVCORLK2();
    rule  SOA-PriceAdjSOACLTVRTNLK1();
    rule  G-PriceAdjIOSOA();

end // ruleset AltA-SetPriceAdjustments1stT1




alias(ruleset, AltA-SetPriceAdjustments1stT1-SubF, "AltA-SetPriceAdjustments1st T1-SubF");

/* ==========================================================================
 * AltA-SetPriceAdjustments1stT1-SubF 
 *
 *
 */
ruleset AltA-SetPriceAdjustments1stT1-SubF(continue)
    rule  AltA-SubFinSetFlag();
    rule  AltA-GetPriceAdjsBROT1-SubF();
    rule  AltA-PriceAdjFxdLnAmtBROT1-SubF();
    rule  AltA-PriceAdjComboNoEscrowBROT1-SubF();
    rule  AltA-PriceAdjIOFixedBROT1-SubF();
    rule  AltA-PriceAdjNOOLnAmtBROT1-SubF();
    rule  AltA-PriceAdjDocTypeLT660BROT1-SubF();
    rule  AltA-PriceAdj40due30BROT1-SubF();
    rule  AltA-GetPriceAdjsCORT1-SubF();
    rule  AltA-PriceAdjFxdLnAmtCORT1-SubF();
    rule  AltA-PriceAdjNoEscrowCORT1-SubF();
    rule  AltA-PriceAdjIOFixedCORT1-SubF();
    rule  AltA-PriceAdjNOOLnAmtCORT1-SubF();
    rule  AltA-PriceAdjDocTypeLT660CORT1-SubF();
    rule  AltA-PriceAdj40due30CORT1-SubF();
    rule  AltA-GetPriceAdjsRTNT1-SubF();
    rule  AltA-PriceAdjFxdLnAmtRTNT1-SubF();
    rule  AltA-PriceAdjNoEscrowRTNT1-SubF();
    rule  AltA-PriceAdjIOFixedRTNT1-SubF();
    rule  AltA-PriceAdjNOOLnAmtRTNT1-SubF();
    rule  AltA-PriceAdjDocTypeLT660RTNT1-SubF();
    rule  AltA-PriceAdj40due30RTNT1-SubF();
    rule  SOA-PriceAdjSOACLTVBROLK1SubF();
    rule  SOA-PriceAdjSOACLTVCORLK1SubF();
    rule  SOA-PriceAdjSOACLTVCORLK2SubF();
    rule  SOA-PriceAdjSOACLTVRTNLK1SubF();
    rule  G-PriceAdjIOSOA();

end // ruleset AltA-SetPriceAdjustments1stT1-SubF





/* ==========================================================================
 * G-CalcExtensionFees 
 *
 *
 */
ruleset G-CalcExtensionFees(continue)
    rule  G-GetExtensionPeriod1st();
    rule  G-GetExtensionPeriod2nd();
    rule  G-Calc1stExtensionFee();
    rule  G-Calc2ndExtensionFee();

end // ruleset G-CalcExtensionFees





/* ==========================================================================
 * G-CalcPi1st-BasedOnType 
 *
 *
 */
ruleset G-CalcPi1st-BasedOnType(continue)
    rule  G-CalcPiSetup();
    rule  G-CalcLaMultiplier-Type1();
    rule  G-CalcLaMultiplier-Type1-NY();
    rule  G-CalcPiSetup-Type1-IO();
    rule  G-CalcLoanBalance();
    rule  G-CalcPi1st();
    rule  G-CalcPi1st-Type0-IO();

end // ruleset G-CalcPi1st-BasedOnType





/* ==========================================================================
 * G-CalcQualRate 
 *
 *
 */
ruleset G-CalcQualRate(continue)
    rule  G-QualRateSetup();
    rule  G-CeilingSetup();
    rule  G-SetMargin1st();
    rule  G-QualRateSetup-MN-Override();
    rule  G-QualRateSetup-ShortTermArm();
    rule  G-QualRateSetup-Fixed();
    rule  G-CalcIndexedRate();
    rule  G-CalcRateGTE3YrNonIOArm();
    rule  G-QualRateSetup-NonIO-NVStateSiva();
    rule  G-QualRateSetup-SubP-NonIO();
    rule  G-QualRateSetup-SubP-NonIO-Siva56();
    rule  G-QualRateSetup-SubP-NonIO-Full56();
    rule  G-CapIndexRate-SubP-IO();
    rule  G-ChooseHighestRate();
    rule  G-CalcInterestFromQual();

end // ruleset G-CalcQualRate





/* ==========================================================================
 * G-GetExceptionAdjs-Lien1 
 *
 *
 */
ruleset G-GetExceptionAdjs-Lien1(continue)
    rule  G-GetExceptionAdj1-Prog1();
    rule  G-GetExceptionAdj2-Prog1();
    rule  G-GetExceptionAdj3-Prog1();
    rule  G-GetExceptionAdj1-Prod1();
    rule  G-GetExceptionAdj2-Prod1();
    rule  G-GetExceptionAdj3-Prod1();
    rule  G-GetExceptionAdj1-Loan1();
    rule  G-GetExceptionAdj2-Loan1();
    rule  G-GetExceptionAdj3-Loan1();

end // ruleset G-GetExceptionAdjs-Lien1





/* ==========================================================================
 * G-GetRequestedRateMarginLien1 
 *
 *
 */
ruleset G-GetRequestedRateMarginLien1(continue)
    rule  CMT-GetRequestedRateMargin();

end // ruleset G-GetRequestedRateMarginLien1




alias(ruleset, G-LockedRateRuleset, "G-Locked Rate Ruleset");

/* ==========================================================================
 * G-LockedRateRuleset 
 *
 *
 */
ruleset G-LockedRateRuleset(true)
    rule  G-IsNotManualProcess();
    rule  G-LockedRateLien1();
    rule  G-LockedRateLien2();

end // ruleset G-LockedRateRuleset




alias(ruleset, G-MarginAdjustmentsInit-2, "G-Margin Adjustments Init-2");

/* ==========================================================================
 * G-MarginAdjustmentsInit-2 (PowerLookup)
 *
 *
 */
ruleset G-MarginAdjustmentsInit-2(true, PL)
    rule  G-MarginAdjustmentsInit-2-1();

end // ruleset G-MarginAdjustmentsInit-2





/* ==========================================================================
 * G-MaxPaymentShockCalc 
 *
 *
 */
ruleset G-MaxPaymentShockCalc(true)
    rule  G-MaxPaymentShockCalcNoRatio();
    rule  G-MaxPaymentShockCalcSIVA();
    rule  G-MaxPaymentShockCalcNoDoc();
    rule  G-MaxPaymentShockCalcGT1Mil();
    rule  G-JumboFullDocMaxPaymentShock();

end // ruleset G-MaxPaymentShockCalc





/* ==========================================================================
 * G-OverrideMaxPrice 
 *
 *
 */
ruleset G-OverrideMaxPrice(continue)
    rule  G-OverrideMaxPrice-Broker1();
    rule  G-OverrideMaxPrice-Correspondent1();

end // ruleset G-OverrideMaxPrice




alias(ruleset, G-PriceAdjRegionRuleset, "G-PriceAdj Region Ruleset");

/* ==========================================================================
 * G-PriceAdjRegionRuleset 
 *
 *
 */
ruleset G-PriceAdjRegionRuleset(true)
    rule  G-RegionalBroker();
    rule  AltA-PriceAdjRegion-NPP-High();
    rule  AltA-PriceAdjRegion-NPP-Low();
    rule  AltA-PriceAdjRegion-PP-High();
    rule  AltA-PriceAdjRegion-PP-Low();
    rule  OptA-PriceAdjRegion-NPP-High();
    rule  OptA-PriceAdjRegion-NPP-Low();
    rule  OptA-PriceAdjRegion-PP-High();
    rule  OptA-PriceAdjRegion-PP-Low();
    rule  Pref-PriceAdjRegion-NPP-High();
    rule  Pref-PriceAdjRegion-NPP-Low();
    rule  Pref-PriceAdjRegion-PP-High();
    rule  Pref-PriceAdjRegion-PP-Low();
    rule  PrefSOA-PriceAdjRegion-NPP-High();
    rule  PrefSOA-PriceAdjRegion-NPP-Low();
    rule  PrefSOA-PriceAdjRegion-PP-High();
    rule  PrefSOA-PriceAdjRegion-PP-Low();
    rule  SOA-PriceAdjRegion-NPP-High();
    rule  SOA-PriceAdjRegion-NPP-Low();
    rule  SOA-PriceAdjRegion-PP-High();
    rule  SOA-PriceAdjRegion-PP-Low();
    rule  NoMI-PriceAdjRegion-NPP-High();
    rule  NoMI-PriceAdjRegion-NPP-Low();
    rule  NoMI-PriceAdjRegion-PP-High();
    rule  NoMI-PriceAdjRegion-PP-Low();
    rule  SubP-PriceAdjRegion-NPP-High();
    rule  SubP-PriceAdjRegion-NPP-Low();
    rule  SubP-PriceAdjRegion-PP-High();
    rule  SubP-PriceAdjRegion-PP-Low();

end // ruleset G-PriceAdjRegionRuleset




alias(ruleset, G-PriceAdjustmentsInit-2, "G-Price Adjustments Init-2");

/* ==========================================================================
 * G-PriceAdjustmentsInit-2 (PowerLookup)
 *
 *
 */
ruleset G-PriceAdjustmentsInit-2(true, PL)
    rule  G-PriceAdjustmentsInit-2-1();

end // ruleset G-PriceAdjustmentsInit-2





/* ==========================================================================
 * G-PricingCleanup 
 *
 *
 */
ruleset G-PricingCleanup(continue)
    rule  G-SetPreferredProgramFlag();
    rule  G-LoanTerm2ndWorkAround();
    rule  G-Cleanup4MoPPFlag1st();
    rule  G-Cleanup4MoPPFlag2nd();
    rule  G-Clean2ndIndexAndCaps();
    rule  G-RetentionNoRestrictLock();
    rule  G-ReferLockFlag();
    rule  G-NoCombos();
    rule  NoMI-NONoMILock();
    rule  OptA-No3MoOptA();
    rule  G-NoDocNoRatioLock();
    rule  G-RestrictNoRatio();
    rule  OptA-RestrictNoRatioLock();
    rule  SOA-MaxDTiGtCltvof80();
    rule  SubP-LockMaxLTVFLLowCondo();
    rule  SubP-LockMaxLTVFLMidHighCondo();
    rule  SubP-LockMaxLTVNOO3-4Unit();
    rule  G-MinScoreFullDoc();
    rule  G-MinScoreStatedDoc();
    rule  G-MaxLoanAmtPrefOptA();
    rule  OptA-NonWarrantableCondoRestriction-Lock();
    rule  AltA-IneligibleMixedUseLock();
    rule  G-StatedFthb-Lock();
    rule  SubP-LockCreditGradeFull();
    rule  SubP-LockCreditGradeSIVA();
    rule  OptA-LockProgramInvalid();
    rule  SOA-LockProgramInvalid();
    rule  G-LockIneligibleForeignNationalBorrowers();
    rule  SubP-LockProgramDocStateofNV();
    rule  G-Lock2ndHomeInvestment();
    rule  G-Ineligible4MonthPrepayLock();
    rule  G-HandleDeprecatedLockPeriod1st-PRICING();
    rule  G-HandleDeprecatedLockPeriod2nd-PRICING();

end // ruleset G-PricingCleanup




alias(ruleset, G-RateAdjTXCashOut, "G-Rate Adj TX CashOut");

/* ==========================================================================
 * G-RateAdjTXCashOut 
 *
 *
 */
ruleset G-RateAdjTXCashOut(true)
    rule  G-RateAdjTXCashOutBROT1();
    rule  G-RateAdjTXCashOutRTNT1();

end // ruleset G-RateAdjTXCashOut




alias(ruleset, G-RateAdjustmentsInit-2, "G-Rate Adjustments Init-2");

/* ==========================================================================
 * G-RateAdjustmentsInit-2 (PowerLookup)
 *
 *
 */
ruleset G-RateAdjustmentsInit-2(true, PL)
    rule  G-RateAdjustmentsInit-2-1();

end // ruleset G-RateAdjustmentsInit-2




alias(ruleset, G-RegionCodeRuleset, "G-RegionCode Ruleset");

/* ==========================================================================
 * G-RegionCodeRuleset 
 *
 *
 */
ruleset G-RegionCodeRuleset(continue)
    rule  G-RegionCode();
    rule  G-RegionCodeNull();

end // ruleset G-RegionCodeRuleset





/* ==========================================================================
 * G-RemoveExtensionFees 
 *
 *
 */
ruleset G-RemoveExtensionFees(continue)
    rule  G-RemovePriorExtensionFee1();
    rule  G-RemovePriorExtensionFee2();

end // ruleset G-RemoveExtensionFees





/* ==========================================================================
 * G-SetPriceSheetID-LockExpDate (PowerLookup)
 *
 *
 */
ruleset G-SetPriceSheetID-LockExpDate(true, PL)
    rule  G-SetPriceSheetID-LockExpDate-1();
    rule  G-SetPriceSheetID-LockExpDate-2();
    rule  G-SetPriceSheetID-LockExpDate-3();
    rule  G-SetPriceSheetID-LockExpDate-4();
    rule  G-SetPriceSheetID-LockExpDate-5();
    rule  G-SetPriceSheetID-LockExpDate-6();
    rule  G-SetPriceSheetID-LockExpDate-7();
    rule  G-SetPriceSheetID-LockExpDate-8();
    rule  G-SetPriceSheetID-LockExpDate-9();

end // ruleset G-SetPriceSheetID-LockExpDate




alias(ruleset, G-SubPropCashFlowRuleset, "G-Sub Prop Cash Flow Ruleset");

/* ==========================================================================
 * G-SubPropCashFlowRuleset 
 *
 *
 */
ruleset G-SubPropCashFlowRuleset(true)
    rule  G-SubPropCashFlow1();
    rule  G-SubPropCashFlow2();

end // ruleset G-SubPropCashFlowRuleset





/* ==========================================================================
 * WC-WorstCasePricing-Rate 
 *
 *
 */
ruleset WC-WorstCasePricing-Rate(continue)
    rule  WC-SetUsingLockedValuesFlag();
    rule  WC-DetermineLockPeriod();
    rule  WC-SetToLockedRateAdj();
    rule  WC-SetToLockedRate();
    rule  WC-RemoveRateAdjs();

end // ruleset WC-WorstCasePricing-Rate








// ++++++++++++++++++++++++ Guideline Definition ++++++++++++++++++++++++
		
/* ==========================================================================
 * AltA-Pricing 10-6 Mo Libor T1 Guideline
 *
 * ID:         48
 * Version:    53120
 * Start Date: Oct 12 2007 10:11PM
 *
 */
guideline("AltA-Pricing 10-6 Mo Libor T1 Guideline")

    ruleset  AltA-ProgramType();
    rule  G-PricingInitialization();
    ruleset  G-PriceAdjustmentsInit-2();
    ruleset  G-MarginAdjustmentsInit-2();
    ruleset  G-RateAdjustmentsInit-2();
    ruleset  G-RegionCodeRuleset();
    rule  G-SetPICalcType();
    rule  G-SetFullDocFlag();
    rule  G-SetPpIndicator1st();
    rule  G-1st2ndLoanParameters();
    rule  G-CorrespondentwithNoPriceRule();
    rule  G-1stIOIndicator();
    ruleset  AltA-AmortType1stRuleset();
    rule  G-SetNegAm1stFlag();
    rule  G-Set40due30Flag();
    rule  G-GetRateSheetDate();
    ruleset  G-CalcExtensionFees();
    ruleset  G-RemoveExtensionFees();
    ruleset  AltA-GetMaxPrice1stT1();
    ruleset  AltA-FinalMaxPrice1stBRORuleset();
    ruleset  AltA-FinalMaxPrice1stCORRuleset();
    ruleset  G-OverrideMaxPrice();
    rule  AltA-FinalPrice1stComparisonRule1();
    ruleset  AltA-SetPriceAdjustments1stT1();
    ruleset  AltA-SetPriceAdjustments1stT1-SubF();
    ruleset  G-PriceAdjRegionRuleset();
    rule  AltA-TotalPriceAdj1st();
    ruleset  G-GetExceptionAdjs-Lien1();
    rule  G-TotalPriceAdjExceptions();
    rule  AltA-FinalPriceAdj1st();
    ruleset  AltA-GetRate1st10-6();
    rule  AltA-NoMIFlagSetRule();
    ruleset  AltA-RateAdj1struleset();
    ruleset  G-RateAdjTXCashOut();
    rule  AltA-TotalRateAdj1st();
    ruleset  WC-WorstCasePricing-Rate();
    rule  ALTA-BaseRate1st();
    ruleset  AltA-GetFinalPrice1st10-6();
    ruleset  AltA-GetMargin-Caps-Index();
    rule  AltA-TotalRate1st();
    rule  G-TotalPriceAdjExtensions();
    rule  AltA-CalcAdjustedPriceCombo();
    rule  AltA-FinalPrice1stComparisonRule2();
    ruleset  G-GetRequestedRateMarginLien1();
    rule  G-CondLockRequired();
    ruleset  G-LockedRateRuleset();
    ruleset  G-CalcQualRate();
    ruleset  G-CalcPi1st-BasedOnType();
    rule  G-PITICalcRule();
    ruleset  G-SubPropCashFlowRuleset();
    rule  G-OtherPropCashFlow();
    rule  G-TotalCashFlowCalc1();
    rule  G-TotalCashFlowCalc2();
    rule  G-PropHsgCostCalc();
    rule  ALTA-PropConsDebtandTotInc();
    rule  G-TotalIncome();
    rule  G-DTICalc();
    rule  AltA-6MoReserves();
    ruleset  G-MaxPaymentShockCalc();
    rule  G-MaxPaymentShockResetPOS();
    rule  AltA-PaymentShockCalc1();
    ruleset  AltA-PaymentShockCalcRuleset();
    ruleset  AltA-MaxPymtShockPICalcRuleset();
    ruleset  AltA-MaxDTIPICalcRuleset();
    rule  G-DTIPOSCalc();
    rule  ALTA-Floor();
    ruleset  AltA-SetLookupNameT1();
    ruleset  G-SetPriceSheetID-LockExpDate();
    ruleset  G-PricingCleanup();


end // guideline AltA-Pricing 10-6 Mo Libor T1 Guideline
